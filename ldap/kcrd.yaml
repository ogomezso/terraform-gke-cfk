Name:         kafkarestclasses.platform.confluent.io
Namespace:    
Labels:       <none>
Annotations:  controller-gen.kubebuilder.io/version: v0.9.2
API Version:  apiextensions.k8s.io/v1
Kind:         CustomResourceDefinition
Metadata:
  Creation Timestamp:  2023-09-27T08:08:13Z
  Generation:          1
  Resource Version:    584525
  UID:                 df0bf806-e63a-4141-b088-73f42609915d
Spec:
  Conversion:
    Strategy:  None
  Group:       platform.confluent.io
  Names:
    Categories:
      all
      confluent-platform
      confluent
    Kind:       KafkaRestClass
    List Kind:  KafkaRestClassList
    Plural:     kafkarestclasses
    Short Names:
      krc
      kafkarestclass
    Singular:  kafkarestclass
  Scope:       Namespaced
  Versions:
    Additional Printer Columns:
      Json Path:  .metadata.creationTimestamp
      Name:       Age
      Type:       date
    Name:         v1beta1
    Schema:
      openAPIV3Schema:
        Description:  KafkaRestClass is the schema for the Kafka REST API.
        Properties:
          API Version:
            Description:  APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            Type:         string
          Kind:
            Description:  Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            Type:         string
          Metadata:
            Type:  object
          Spec:
            Description:  spec defines the desired state of the KafkaRestClass.
            Properties:
              Kafka Cluster Ref:
                Description:  kafkaClusterRef specifies the name of the Kafka cluster.
                Properties:
                  Name:
                    Description:  name specifies the name of the Confluent Platform component cluster.
                    Type:         string
                  Namespace:
                    Description:  namespace specifies the namespace where the Confluent Platform component cluster is running.
                    Type:         string
                Required:
                  name
                Type:  object
              Kafka Rest:
                Description:  kafkaRest specifies the Kafka REST API configuration.
                Properties:
                  Authentication:
                    Description:  authentication specifies the REST API authentication mechanism.
                    Properties:
                      Basic:
                        Description:  basic specifies the basic authentication settings for the REST API client.
                        Properties:
                          Debug:
                            Description:  debug enables the basic authentication debug logs for JaaS configuration.
                            Type:         boolean
                          Directory Path In Container:
                            Description:  directoryPathInContainer allows to pass the basic credential through a directory path in the container. More info: https://docs.confluent.io/operator/current/co-authenticate.html#basic-authentication
                            Min Length:   1
                            Type:         string
                          Restricted Roles:
                            Description:  restrictedRoles specify the restricted roles on the server side only. Changes will be only reflected in Control Center. This configuration is ignored on the client side configuration.
                            Items:
                              Type:     string
                            Min Items:  1
                            Type:       array
                          Roles:
                            Description:  roles specify the roles on the server side only. This configuration is ignored on the client side configuration.
                            Items:
                              Type:  string
                            Type:    array
                          Secret Ref:
                            Description:  secretRef defines secret reference to pass the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html#basic-authentication
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Type:             object
                      Bearer:
                        Description:  bearer specifies the bearer authentication settings for the REST API client.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where the credential is mounted.
                            Min Length:   1
                            Type:         string
                          Secret Ref:
                            Description:  secretRef specifies the name of the secret that contains the credential. More info: https://docs.confluent.io/operator/current/co-authenticate.html#bearer-authentication
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Type:             object
                      Type:
                        Description:  type specifies the REST API authentication type. Valid options are `basic`, `bearer`, and `mtls`.
                        Enum:
                          basic
                          bearer
                          mtls
                        Type:  string
                    Required:
                      type
                    Type:  object
                  Endpoint:
                    Description:  endpoint specifies where Confluent REST API is running.
                    Min Length:   1
                    Pattern:      ^https?://.*
                    Type:         string
                  Kafka Cluster ID:
                    Description:  kafkaClusterID specifies the id of Kafka cluster. It takes precedence over using the Kafka REST API to get the cluster id.
                    Min Length:   1
                    Type:         string
                  Tls:
                    Description:  tls specifies the custom TLS structure for the application resources, e.g. connector, topic, schema, of the Confluent Platform components.
                    Properties:
                      Directory Path In Container:
                        Description:  directoryPathInContainer contains the directory path in the container where `keystore.jks`, `truststore.jks`, `jksPassword.txt` keys are mounted.
                        Min Length:   1
                        Type:         string
                      Jks Password:
                        Description:  jksPassword specifies the secret name that contains the JKS password.
                        Properties:
                          Secret Ref:
                            Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          secretRef
                        Type:  object
                      Secret Ref:
                        Description:  secretRef specifies the secret name that contains the certificates. More info about certificates key/value format: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                        Max Length:   63
                        Min Length:   1
                        Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        Type:         string
                    Type:             object
                Type:                 object
              Secondary Kafka Cluster Ref:
                Description:  secondaryKafkaClusterRef specifies the name of the secondary Kafka cluster when using centralized RBAC.
                Properties:
                  Name:
                    Description:  name specifies the name of the Confluent Platform component cluster.
                    Type:         string
                  Namespace:
                    Description:  namespace specifies the namespace where the Confluent Platform component cluster is running.
                    Type:         string
                Required:
                  name
                Type:  object
              Secondary Kafka Rest:
                Description:  secondaryKafkaRest specifies the secondary Kafka REST API configuration when using centralized RBAC.
                Properties:
                  Authentication:
                    Description:  authentication specifies the REST API authentication mechanism.
                    Properties:
                      Basic:
                        Description:  basic specifies the basic authentication settings for the REST API client.
                        Properties:
                          Debug:
                            Description:  debug enables the basic authentication debug logs for JaaS configuration.
                            Type:         boolean
                          Directory Path In Container:
                            Description:  directoryPathInContainer allows to pass the basic credential through a directory path in the container. More info: https://docs.confluent.io/operator/current/co-authenticate.html#basic-authentication
                            Min Length:   1
                            Type:         string
                          Restricted Roles:
                            Description:  restrictedRoles specify the restricted roles on the server side only. Changes will be only reflected in Control Center. This configuration is ignored on the client side configuration.
                            Items:
                              Type:     string
                            Min Items:  1
                            Type:       array
                          Roles:
                            Description:  roles specify the roles on the server side only. This configuration is ignored on the client side configuration.
                            Items:
                              Type:  string
                            Type:    array
                          Secret Ref:
                            Description:  secretRef defines secret reference to pass the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html#basic-authentication
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Type:             object
                      Bearer:
                        Description:  bearer specifies the bearer authentication settings for the REST API client.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where the credential is mounted.
                            Min Length:   1
                            Type:         string
                          Secret Ref:
                            Description:  secretRef specifies the name of the secret that contains the credential. More info: https://docs.confluent.io/operator/current/co-authenticate.html#bearer-authentication
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Type:             object
                      Type:
                        Description:  type specifies the REST API authentication type. Valid options are `basic`, `bearer`, and `mtls`.
                        Enum:
                          basic
                          bearer
                          mtls
                        Type:  string
                    Required:
                      type
                    Type:  object
                  Endpoint:
                    Description:  endpoint specifies where Confluent REST API is running.
                    Min Length:   1
                    Pattern:      ^https?://.*
                    Type:         string
                  Kafka Cluster ID:
                    Description:  kafkaClusterID specifies the id of Kafka cluster. It takes precedence over using the Kafka REST API to get the cluster id.
                    Min Length:   1
                    Type:         string
                  Tls:
                    Description:  tls specifies the custom TLS structure for the application resources, e.g. connector, topic, schema, of the Confluent Platform components.
                    Properties:
                      Directory Path In Container:
                        Description:  directoryPathInContainer contains the directory path in the container where `keystore.jks`, `truststore.jks`, `jksPassword.txt` keys are mounted.
                        Min Length:   1
                        Type:         string
                      Jks Password:
                        Description:  jksPassword specifies the secret name that contains the JKS password.
                        Properties:
                          Secret Ref:
                            Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          secretRef
                        Type:  object
                      Secret Ref:
                        Description:  secretRef specifies the secret name that contains the certificates. More info about certificates key/value format: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                        Max Length:   63
                        Min Length:   1
                        Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        Type:         string
                    Type:             object
                Type:                 object
            Type:                     object
          Status:
            Description:  status defines the observed state of the KafkaRestClass.
            Properties:
              Conditions:
                Description:  conditions are the latest available observed state of the kafkaRestClass.
                Items:
                  Description:  Condition represent the latest available observations of the current state.
                  Properties:
                    Last Probe Time:
                      Description:  lastProbeTime shows the last time the condition was evaluated.
                      Format:       date-time
                      Type:         string
                    Last Transition Time:
                      Description:  lastTransitionTime shows the last time the condition was transitioned from one status to another.
                      Format:       date-time
                      Type:         string
                    Message:
                      Description:  message shows a human-readable message with details about the transition.
                      Type:         string
                    Reason:
                      Description:  reason shows the reason for the last transition of the condition.
                      Type:         string
                    Status:
                      Description:  status shows the status of the condition, one of `True`, `False`, or `Unknown`.
                      Type:         string
                    Type:
                      Description:  type shows the condition type.
                      Type:         string
                  Type:             object
                Type:               array
              Endpoint:
                Description:  endpoint specifies the Kafka REST API / MDS endpoint.
                Type:         string
              Kafka Cluster ID:
                Description:  kafkaClusterID specifies the id of the Kafka cluster. If using centralized RBAC and kafkaRestClass is for the secondary Kafka cluster, it will be the cluster id of the secondary Kafka cluster.
                Type:         string
              Observed Generation:
                Description:  observedGeneration is the most recent generation observed for this Confluent component.
                Format:       int64
                Type:         integer
            Type:             object
        Required:
          spec
        Type:  object
    Served:    true
    Storage:   true
    Subresources:
      Status:
Status:
  Accepted Names:
    Categories:
      all
      confluent-platform
      confluent
    Kind:       KafkaRestClass
    List Kind:  KafkaRestClassList
    Plural:     kafkarestclasses
    Short Names:
      krc
      kafkarestclass
    Singular:  kafkarestclass
  Conditions:
    Last Transition Time:  2023-09-27T08:08:13Z
    Message:               no conflicts found
    Reason:                NoConflicts
    Status:                True
    Type:                  NamesAccepted
    Last Transition Time:  2023-09-27T08:08:13Z
    Message:               the initial names have been accepted
    Reason:                InitialNamesAccepted
    Status:                True
    Type:                  Established
  Stored Versions:
    v1beta1
Events:  <none>

Name:         kafkarestproxies.platform.confluent.io
Namespace:    
Labels:       <none>
Annotations:  controller-gen.kubebuilder.io/version: v0.9.2
API Version:  apiextensions.k8s.io/v1
Kind:         CustomResourceDefinition
Metadata:
  Creation Timestamp:  2023-09-27T08:08:13Z
  Generation:          1
  Resource Version:    584532
  UID:                 96950224-8b4e-4262-95d5-f99fa0a99cfa
Spec:
  Conversion:
    Strategy:  None
  Group:       platform.confluent.io
  Names:
    Categories:
      all
      confluent-platform
      confluent
    Kind:       KafkaRestProxy
    List Kind:  KafkaRestProxyList
    Plural:     kafkarestproxies
    Short Names:
      kafkarestproxy
      krp
    Singular:  kafkarestproxy
  Scope:       Namespaced
  Versions:
    Additional Printer Columns:
      Json Path:  .status.replicas
      Name:       Replicas
      Type:       string
      Json Path:  .status.readyReplicas
      Name:       Ready
      Type:       string
      Json Path:  .status.phase
      Name:       Status
      Type:       string
      Json Path:  .metadata.creationTimestamp
      Name:       Age
      Type:       date
      Json Path:  .status.kafka.bootstrapEndpoint
      Name:       Kafka
      Priority:   1
      Type:       string
    Name:         v1beta1
    Schema:
      openAPIV3Schema:
        Description:  KafkaRestProxy is the schema for the Kafka REST Proxy API.
        Properties:
          API Version:
            Description:  APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            Type:         string
          Kind:
            Description:  Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            Type:         string
          Metadata:
            Type:  object
          Spec:
            Description:  spec defines the desired state of the KafkaRestProxy cluster.
            Properties:
              Authentication:
                Description:  authentication specifies the authentication configurations for the KafkaRestProxy cluster.
                Properties:
                  Basic:
                    Description:  basic specifies the configuration for basic authentication.
                    Properties:
                      Debug:
                        Description:  debug enables the basic authentication debug logs for JaaS configuration.
                        Type:         boolean
                      Directory Path In Container:
                        Description:  directoryPathInContainer allows to pass the basic credential through a directory path in the container. More info: https://docs.confluent.io/operator/current/co-authenticate.html#basic-authentication
                        Min Length:   1
                        Type:         string
                      Restricted Roles:
                        Description:  restrictedRoles specify the restricted roles on the server side only. Changes will be only reflected in Control Center. This configuration is ignored on the client side configuration.
                        Items:
                          Type:     string
                        Min Items:  1
                        Type:       array
                      Roles:
                        Description:  roles specify the roles on the server side only. This configuration is ignored on the client side configuration.
                        Items:
                          Type:  string
                        Type:    array
                      Secret Ref:
                        Description:  secretRef defines secret reference to pass the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html#basic-authentication
                        Max Length:   30
                        Min Length:   1
                        Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        Type:         string
                    Type:             object
                  Type:
                    Description:  type specifies the authentication scheme for the REST API server. Valid options are `basic` and `mtls`.
                    Enum:
                      basic
                      mtls
                    Type:  string
                Required:
                  type
                Type:  object
              Authorization:
                Description:  authorization specifies the RBAC configuration for the KafkaRestProxy cluster.
                Properties:
                  Kafka Rest Class Ref:
                    Description:  kafkaRestClassRef references the KafkaRestClass which specifies the Kafka REST API connection configuration.
                    Properties:
                      Name:
                        Description:  name specifies the name of the KafkaRestClass application resource.
                        Min Length:   1
                        Type:         string
                      Namespace:
                        Description:  namespace specifies the namespace of the KafkaRestClass.
                        Type:         string
                    Required:
                      name
                    Type:  object
                  Type:
                    Description:  type specifies the client-side authorization type. The valid option is `rbac`.
                    Enum:
                      rbac
                    Type:  string
                Required:
                  type
                Type:  object
              Config Overrides:
                Description:  configOverrides specifies the configs to override the server, JVM, Log4j properties for the KafkaRestProxy cluster. A change will roll the cluster.
                Properties:
                  Jvm:
                    Description:  jvm is a list of JVM configuration supported by the Confluent Platform component. This will either add or update the existing configuration.
                    Items:
                      Type:  string
                    Type:    array
                  log4j:
                    Description:  log4j is a list of Log4J configuration supported by the Confluent Platform component. This will either add or update the existing configuration.
                    Items:
                      Type:  string
                    Type:    array
                  Server:
                    Description:  server is a list of server configuration supported by the Confluent Platform component. This will either add or update existing configuration.
                    Items:
                      Type:  string
                    Type:    array
                Type:        object
              Dependencies:
                Description:  dependencies specifies the dependency configurations for Kafka, Interceptor, Schema Registry, and the MDS.
                Properties:
                  Interceptor:
                    Description:  interceptor specifies the interceptor dependency configuration.
                    Properties:
                      Configs:
                        Description:  configs describe the configurations for the Confluent Platform interceptor. The config override feature can be used to pass the configuration settings.
                        Items:
                          Type:  string
                        Type:    array
                      Consumer:
                        Description:  consumer specifies the consumer configuration for the interceptor. If not configured, it uses the Kafka dependency configuration.
                        Properties:
                          Authentication:
                            Description:  authentication defines the authentication for the Kafka cluster.
                            Properties:
                              Jaas Config:
                                Description:  jaasConfig specifies the Kafka client-side JaaS configuration.
                                Properties:
                                  Secret Ref:
                                    Description:  secretRef references the secret containing the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Required:
                                  secretRef
                                Type:  object
                              Jaas Config Pass Through:
                                Description:  jaasConfigPassThrough specifies another way to provide the Kafka client-side JaaS configuration.
                                Properties:
                                  Directory Path In Container:
                                    Description:  directoryPathInContainer specifies the directory path in the container where required credentials are mounted. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                    Min Length:   1
                                    Type:         string
                                  Secret Ref:
                                    Description:  secretRef references the secret containing the required credentials for authentication. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Type:             object
                              Oauthbearer:
                                Description:  oauthbearer is the authentication mechanism to provider principals. Only supported in RBAC deployment.
                                Properties:
                                  Directory Path In Container:
                                    Description:  directoryPathInContainer specifies the directory path in the container where the credential is mounted.
                                    Min Length:   1
                                    Type:         string
                                  Secret Ref:
                                    Description:  secretRef specifies the name of the secret that contains the credential. More info: https://docs.confluent.io/operator/current/co-authenticate.html#bearer-authentication
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Type:             object
                              Type:
                                Description:  type specifies the Kafka client authentication type. Valid options are `plain`, `oauthbearer`, `digest`, and `mtls`.
                                Enum:
                                  plain
                                  oauthbearer
                                  digest
                                  mtls
                                Type:  string
                            Required:
                              type
                            Type:  object
                          Bootstrap Endpoint:
                            Description:  bootstrapEndpoint specifies the Kafka bootstrap endpoint.
                            Min Length:   1
                            Pattern:      .+:[0-9]+
                            Type:         string
                          Discovery:
                            Description:  discovery specifies the capability to discover the Kafka cluster.
                            Properties:
                              Name:
                                Description:  name is the name of the Confluent Platform component cluster.
                                Type:         string
                              Namespace:
                                Description:  namespace is where the Confluent Platform component is running. The default value is the namespace where CFK is running.
                                Type:         string
                              Secret Ref:
                                Description:  secretRef is the name of the secret used to discover the Confluent Platform component.
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              name
                            Type:  object
                          Tls:
                            Description:  tls defines the client-side TLS setting for the Kafka cluster.
                            Properties:
                              Directory Path In Container:
                                Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                                Min Length:   1
                                Type:         string
                              Enabled:
                                Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                                Type:         boolean
                              Ignore Trust Store Config:
                                Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                                Type:         boolean
                              Jks Password:
                                Description:  jksPassword references the secret containing the JKS password.
                                Properties:
                                  Secret Ref:
                                    Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Required:
                                  secretRef
                                Type:  object
                              Secret Ref:
                                Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              enabled
                            Type:  object
                        Type:      object
                      Enabled:
                        Description:  enabled indicates whether the Confluent Platform interceptor is enabled or disabled.
                        Type:         boolean
                      Producer:
                        Description:  producer specifies the producer configuration for the interceptor. If not configured, it uses the Kafka dependency configuration.
                        Properties:
                          Authentication:
                            Description:  authentication defines the authentication for the Kafka cluster.
                            Properties:
                              Jaas Config:
                                Description:  jaasConfig specifies the Kafka client-side JaaS configuration.
                                Properties:
                                  Secret Ref:
                                    Description:  secretRef references the secret containing the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Required:
                                  secretRef
                                Type:  object
                              Jaas Config Pass Through:
                                Description:  jaasConfigPassThrough specifies another way to provide the Kafka client-side JaaS configuration.
                                Properties:
                                  Directory Path In Container:
                                    Description:  directoryPathInContainer specifies the directory path in the container where required credentials are mounted. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                    Min Length:   1
                                    Type:         string
                                  Secret Ref:
                                    Description:  secretRef references the secret containing the required credentials for authentication. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Type:             object
                              Oauthbearer:
                                Description:  oauthbearer is the authentication mechanism to provider principals. Only supported in RBAC deployment.
                                Properties:
                                  Directory Path In Container:
                                    Description:  directoryPathInContainer specifies the directory path in the container where the credential is mounted.
                                    Min Length:   1
                                    Type:         string
                                  Secret Ref:
                                    Description:  secretRef specifies the name of the secret that contains the credential. More info: https://docs.confluent.io/operator/current/co-authenticate.html#bearer-authentication
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Type:             object
                              Type:
                                Description:  type specifies the Kafka client authentication type. Valid options are `plain`, `oauthbearer`, `digest`, and `mtls`.
                                Enum:
                                  plain
                                  oauthbearer
                                  digest
                                  mtls
                                Type:  string
                            Required:
                              type
                            Type:  object
                          Bootstrap Endpoint:
                            Description:  bootstrapEndpoint specifies the Kafka bootstrap endpoint.
                            Min Length:   1
                            Pattern:      .+:[0-9]+
                            Type:         string
                          Discovery:
                            Description:  discovery specifies the capability to discover the Kafka cluster.
                            Properties:
                              Name:
                                Description:  name is the name of the Confluent Platform component cluster.
                                Type:         string
                              Namespace:
                                Description:  namespace is where the Confluent Platform component is running. The default value is the namespace where CFK is running.
                                Type:         string
                              Secret Ref:
                                Description:  secretRef is the name of the secret used to discover the Confluent Platform component.
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              name
                            Type:  object
                          Tls:
                            Description:  tls defines the client-side TLS setting for the Kafka cluster.
                            Properties:
                              Directory Path In Container:
                                Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                                Min Length:   1
                                Type:         string
                              Enabled:
                                Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                                Type:         boolean
                              Ignore Trust Store Config:
                                Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                                Type:         boolean
                              Jks Password:
                                Description:  jksPassword references the secret containing the JKS password.
                                Properties:
                                  Secret Ref:
                                    Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Required:
                                  secretRef
                                Type:  object
                              Secret Ref:
                                Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              enabled
                            Type:  object
                        Type:      object
                      Publish Ms:
                        Type:  integer
                    Required:
                      enabled
                    Type:  object
                  Kafka:
                    Description:  kafka specifies the Kafka dependency configuration.
                    Properties:
                      Authentication:
                        Description:  authentication defines the authentication for the Kafka cluster.
                        Properties:
                          Jaas Config:
                            Description:  jaasConfig specifies the Kafka client-side JaaS configuration.
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the secret containing the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Jaas Config Pass Through:
                            Description:  jaasConfigPassThrough specifies another way to provide the Kafka client-side JaaS configuration.
                            Properties:
                              Directory Path In Container:
                                Description:  directoryPathInContainer specifies the directory path in the container where required credentials are mounted. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Min Length:   1
                                Type:         string
                              Secret Ref:
                                Description:  secretRef references the secret containing the required credentials for authentication. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Type:             object
                          Oauthbearer:
                            Description:  oauthbearer is the authentication mechanism to provider principals. Only supported in RBAC deployment.
                            Properties:
                              Directory Path In Container:
                                Description:  directoryPathInContainer specifies the directory path in the container where the credential is mounted.
                                Min Length:   1
                                Type:         string
                              Secret Ref:
                                Description:  secretRef specifies the name of the secret that contains the credential. More info: https://docs.confluent.io/operator/current/co-authenticate.html#bearer-authentication
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Type:             object
                          Type:
                            Description:  type specifies the Kafka client authentication type. Valid options are `plain`, `oauthbearer`, `digest`, and `mtls`.
                            Enum:
                              plain
                              oauthbearer
                              digest
                              mtls
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Bootstrap Endpoint:
                        Description:  bootstrapEndpoint specifies the Kafka bootstrap endpoint.
                        Min Length:   1
                        Pattern:      .+:[0-9]+
                        Type:         string
                      Discovery:
                        Description:  discovery specifies the capability to discover the Kafka cluster.
                        Properties:
                          Name:
                            Description:  name is the name of the Confluent Platform component cluster.
                            Type:         string
                          Namespace:
                            Description:  namespace is where the Confluent Platform component is running. The default value is the namespace where CFK is running.
                            Type:         string
                          Secret Ref:
                            Description:  secretRef is the name of the secret used to discover the Confluent Platform component.
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          name
                        Type:  object
                      Tls:
                        Description:  tls defines the client-side TLS setting for the Kafka cluster.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                            Min Length:   1
                            Type:         string
                          Enabled:
                            Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                            Type:         boolean
                          Ignore Trust Store Config:
                            Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                            Type:         boolean
                          Jks Password:
                            Description:  jksPassword references the secret containing the JKS password.
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Secret Ref:
                            Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          enabled
                        Type:  object
                    Type:      object
                  Mds:
                    Description:  mds specifies the MDS dependencies configuration.
                    Properties:
                      Authentication:
                        Description:  authentication specifies the client side authentication configuration for the MDS.
                        Properties:
                          Bearer:
                            Description:  bearer specifies the bearer authentication settings.
                            Properties:
                              Directory Path In Container:
                                Description:  directoryPathInContainer specifies the directory path in the container where the credential is mounted.
                                Min Length:   1
                                Type:         string
                              Secret Ref:
                                Description:  secretRef specifies the name of the secret that contains the credential. More info: https://docs.confluent.io/operator/current/co-authenticate.html#bearer-authentication
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Type:             object
                          Type:
                            Description:  type specifies the authentication method for the MDS. The valid option is `bearer`.
                            Enum:
                              bearer
                            Type:  string
                        Required:
                          bearer
                          type
                        Type:  object
                      Endpoint:
                        Description:  endpoint specifies the MDS endpoint.
                        Min Length:   1
                        Pattern:      ^https?://.*
                        Type:         string
                      Sso Protocol:
                        Description:  sso protocol, valid options are ldap and oidc.
                        Enum:
                          ldap
                          oidc
                        Type:  string
                      Tls:
                        Description:  ClientTLSConfig specifies the TLS configuration for the Confluent component (dependencies, listeners).
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                            Min Length:   1
                            Type:         string
                          Enabled:
                            Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                            Type:         boolean
                          Ignore Trust Store Config:
                            Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                            Type:         boolean
                          Jks Password:
                            Description:  jksPassword references the secret containing the JKS password.
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Secret Ref:
                            Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          enabled
                        Type:  object
                      Token Key Pair:
                        Description:  tokenKeyPair specifies the token keypair to configure the MDS.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer defines the directory path in the container where the MDS token key pair are mounted.
                            Min Length:   1
                            Type:         string
                          Encrypted Token Key:
                            Description:  EncryptedTokenKey boolean value indicating whether the tokenKeypair(private used for signing) is encrypted using a passphrase. If true, cfk operator will look for a file named mdsTokenKeyPassphrase.txt containing key value pair mdsTokenKeyPassphrase=<passphrase>. Relevant only for mds server. Ignored if set for a client configuration.
                            Type:         boolean
                          Secret Ref:
                            Description:  secretRef references the name of the secret that contains the MDS token key pair.
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Type:             object
                    Required:
                      authentication
                      endpoint
                      tokenKeyPair
                    Type:  object
                  Schema Registry:
                    Description:  schemaRegistry specifies the Schema Registry dependency configuration.
                    Properties:
                      Authentication:
                        Description:  authentication specifies the authentication for the Schema Registry cluster.
                        Properties:
                          Basic:
                            Description:  basic specifies the configuration for basic authentication.
                            Properties:
                              Debug:
                                Description:  debug enables the basic authentication debug logs for JaaS configuration.
                                Type:         boolean
                              Directory Path In Container:
                                Description:  directoryPathInContainer allows to pass the basic credential through a directory path in the container. More info: https://docs.confluent.io/operator/current/co-authenticate.html#basic-authentication
                                Min Length:   1
                                Type:         string
                              Restricted Roles:
                                Description:  restrictedRoles specify the restricted roles on the server side only. Changes will be only reflected in Control Center. This configuration is ignored on the client side configuration.
                                Items:
                                  Type:     string
                                Min Items:  1
                                Type:       array
                              Roles:
                                Description:  roles specify the roles on the server side only. This configuration is ignored on the client side configuration.
                                Items:
                                  Type:  string
                                Type:    array
                              Secret Ref:
                                Description:  secretRef defines secret reference to pass the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html#basic-authentication
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Type:             object
                          Type:
                            Description:  type specifies the authentication scheme for the REST API client. Valid options are `basic` and `mtls`.
                            Enum:
                              basic
                              mtls
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Tls:
                        Description:  tls defines the client-side TLS setting for the Schema Registry cluster.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                            Min Length:   1
                            Type:         string
                          Enabled:
                            Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                            Type:         boolean
                          Ignore Trust Store Config:
                            Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                            Type:         boolean
                          Jks Password:
                            Description:  jksPassword references the secret containing the JKS password.
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Secret Ref:
                            Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          enabled
                        Type:  object
                      URL:
                        Description:  url specifies the URL endpoint of the Schema Registry cluster.
                        Min Length:   1
                        Pattern:      ^https?://.*
                        Type:         string
                    Required:
                      url
                    Type:  object
                Type:      object
              External Access:
                Description:  externalAccess specifies the external access configuration.
                Properties:
                  Load Balancer:
                    Description:  loadBalancer specifies the configuration to create a Kubernetes load balancer service.
                    Properties:
                      Advertised URL:
                        Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to: `<httpSchema>://<advertisedUrl.prefix><podId>.<domain>` where podId starts from `0` to `replicaCount -1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster. This configuration will not take effect if MDS enabled dual listener setup.
                        Properties:
                          Enabled:
                            Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                            Type:         boolean
                          Prefix:
                            Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                            Min Length:   1
                            Type:         string
                        Required:
                          enabled
                        Type:  object
                      Annotations:
                        Additional Properties:
                          Type:                       string
                        Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                        Type:                         object
                        X - Kubernetes - Map - Type:  granular
                      Domain:
                        Description:  domain is the domain name of the component cluster.
                        Min Length:   1
                        Type:         string
                      External Traffic Policy:
                        Description:  externalTrafficPolicy specifies the external traffic policy for the service. Valid options are `Local` and `Cluster`.
                        Enum:
                          Local
                          Cluster
                        Type:  string
                      Labels:
                        Additional Properties:
                          Type:                       string
                        Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                        Type:                         object
                        X - Kubernetes - Map - Type:  granular
                      Load Balancer Source Ranges:
                        Description:  loadBalancerSourceRanges specify the source ranges.
                        Items:
                          Type:  string
                        Type:    array
                      Port:
                        Description:  port specifies the external port for the client consumption. If not configured, the same internal/external port is configured for the component. Information about the port can be retrieved through the status API.
                        Format:       int32
                        Type:         integer
                      Prefix:
                        Description:  prefix specify the prefix for the given domain. The default value is the name of the cluster.
                        Min Length:   1
                        Type:         string
                      Service Ports:
                        Description:  servicePorts specify the user-provided service port(s).
                        Items:
                          Description:  ServicePort contains information on service's port.
                          Properties:
                            App Protocol:
                              Description:  The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                              Type:         string
                            Name:
                              Description:  The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                              Type:         string
                            Node Port:
                              Description:  The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                              Format:       int32
                              Type:         integer
                            Port:
                              Description:  The port that will be exposed by this service.
                              Format:       int32
                              Type:         integer
                            Protocol:
                              Default:      TCP
                              Description:  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                              Type:         string
                            Target Port:
                              Any Of:
                                Type:                              integer
                                Type:                              string
                              Description:                         Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                              X - Kubernetes - Int - Or - String:  true
                          Required:
                            port
                          Type:  object
                        Type:    array
                      Session Affinity:
                        Description:  sessionAffinity defines the Kubernetes session affinity. The valid options are `ClientIP` and `None`. `ClientIP` enables the client IP-based session affinity. The default value is `None`. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies.
                        Enum:
                          ClientIP
                          None
                        Type:  string
                      Session Affinity Config:
                        Description:  SessionAffinityConfig contains the configurations of the session affinity.
                        Properties:
                          Client IP:
                            Description:  clientIP contains the configurations of Client IP based session affinity.
                            Properties:
                              Timeout Seconds:
                                Description:  timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                                Format:       int32
                                Type:         integer
                            Type:             object
                        Type:                 object
                    Required:
                      domain
                    Type:  object
                  Node Port:
                    Description:  nodePort specifies the configuration to create a Kubernetes node port service.
                    Properties:
                      Advertised URL:
                        Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to `<httpSchema>://<host>:<nodePortOffset + podId + 1>, where`podId` starts from `0` to `replicaCount - 1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster.
                        Properties:
                          Enabled:
                            Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                            Type:         boolean
                          Prefix:
                            Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                            Min Length:   1
                            Type:         string
                        Required:
                          enabled
                        Type:  object
                      Annotations:
                        Additional Properties:
                          Type:                       string
                        Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                        Type:                         object
                        X - Kubernetes - Map - Type:  granular
                      External Traffic Policy:
                        Description:  externalTrafficPolicy specifies the external traffic policy for the service. Valid options are `Local` and `Cluster`.
                        Enum:
                          Local
                          Cluster
                        Type:  string
                      Host:
                        Description:  host defines the host name of the cluster.
                        Min Length:   1
                        Type:         string
                      Labels:
                        Additional Properties:
                          Type:                       string
                        Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                        Type:                         object
                        X - Kubernetes - Map - Type:  granular
                      Node Port Offset:
                        Description:  nodePortOffset specifies the starting offset of the node ports. The port numbers go in ascending order with respect to the replicas count. NodePort service creation fails if the node port is not in the range supported by the Kubernetes API server. The default Kubernetes Node Port range is `30000` - `32762`.
                        Format:       int32
                        Minimum:      0
                        Type:         integer
                      Service Ports:
                        Description:  servicePorts specify user-provided service port(s). For Kafka with the nodePort type, this setting is only applied to Kafka bootstrap service.
                        Items:
                          Description:  ServicePort contains information on service's port.
                          Properties:
                            App Protocol:
                              Description:  The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                              Type:         string
                            Name:
                              Description:  The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                              Type:         string
                            Node Port:
                              Description:  The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                              Format:       int32
                              Type:         integer
                            Port:
                              Description:  The port that will be exposed by this service.
                              Format:       int32
                              Type:         integer
                            Protocol:
                              Default:      TCP
                              Description:  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                              Type:         string
                            Target Port:
                              Any Of:
                                Type:                              integer
                                Type:                              string
                              Description:                         Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                              X - Kubernetes - Int - Or - String:  true
                          Required:
                            port
                          Type:  object
                        Type:    array
                      Session Affinity:
                        Description:  sessionAffinity defines the Kubernetes session affinity. The valid options are `ClientIP` and `None`. `ClientIP` enables the client IP-based session affinity. The default value is `None`. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies.
                        Enum:
                          ClientIP
                          None
                        Type:  string
                      Session Affinity Config:
                        Description:  SessionAffinityConfig contains the configurations of the session affinity.
                        Properties:
                          Client IP:
                            Description:  clientIP contains the configurations of Client IP based session affinity.
                            Properties:
                              Timeout Seconds:
                                Description:  timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                                Format:       int32
                                Type:         integer
                            Type:             object
                        Type:                 object
                    Required:
                      host
                      nodePortOffset
                    Type:  object
                  Route:
                    Description:  route specifies the configuration to create a route service in OpenShift.
                    Properties:
                      Advertised URL:
                        Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to: `<httpSchema>://<advertisedUrl.prefix>-http-external<podId>.<domain>` where podId starts from `0` to `replicaCount -1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster. This configuration will not take effect if MDS enabled dual listener setup.
                        Properties:
                          Enabled:
                            Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                            Type:         boolean
                          Prefix:
                            Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                            Min Length:   1
                            Type:         string
                        Required:
                          enabled
                        Type:  object
                      Annotations:
                        Additional Properties:
                          Type:                       string
                        Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                        Type:                         object
                        X - Kubernetes - Map - Type:  granular
                      Domain:
                        Description:  domain specifies the domain name of the Confluent component cluster.
                        Min Length:   1
                        Type:         string
                      Labels:
                        Additional Properties:
                          Type:                       string
                        Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                        Type:                         object
                        X - Kubernetes - Map - Type:  granular
                      Prefix:
                        Description:  prefix specifies the component prefix when configured for the domain. The default value is the name of the cluster.
                        Min Length:   1
                        Type:         string
                      Wildcard Policy:
                        Description:  wildcardPolicy allows you to define a route that covers all hosts within a domain. Valid options are `Subdomain` and `None`. The default value is `None`.
                        Enum:
                          Subdomain
                          None
                        Type:  string
                    Required:
                      domain
                    Type:  object
                  Type:
                    Description:  type specifies the Kubernetes external service for the component. Valid options are `loadBalancer`, `nodePort`, and `route`.
                    Enum:
                      loadBalancer
                      nodePort
                      route
                    Min Length:  1
                    Type:        string
                Required:
                  type
                Type:  object
              Headless Service:
                Description:  headlessService specifies the configuration of the Kubernetes headless service.
                Properties:
                  Annotations:
                    Additional Properties:
                      Type:                       string
                    Description:                  annotations is a map of string key and value pairs. It specifies the annotations to be added to the CFK-created headless service. These annotations are merged with the injectAnnotations and take precedence.
                    Type:                         object
                    X - Kubernetes - Map - Type:  granular
                  Labels:
                    Additional Properties:
                      Type:                       string
                    Description:                  labels is a map of string key and value pairs. It specifies the labels to be added to the CFK-created headless service. These labels are merged with the injectLabels and take precedence.
                    Type:                         object
                    X - Kubernetes - Map - Type:  granular
                  Publish Not Ready Addresses:
                    Description:  publishNotReadyAddresses specifies the publishNotReadyAddresses field. For Kafka, this value must be true. The default value is true.
                    Type:         boolean
                Type:             object
              Image:
                Description:  image specifies the application and the init docker image configurations. A change to this setting will roll the cluster.
                Properties:
                  Application:
                    Description:  application is the Docker image name of the application. Specify `<Docker-registry FQDN>/<docker-repository-name>/<component-image-name>:<tag>`.
                    Pattern:      .+:.+
                    Type:         string
                  Init:
                    Description:  init is the init-container name. Specify `<Docker-registry FQDN>/<docker-repository-name>/<init-container-image-name>:<tag>`.
                    Pattern:      .+:.+
                    Type:         string
                  Pull Policy:
                    Description:  pullPolicy is the policy for pulling images. Valid options are `Always`, `Never`, and `IfNotPresent`. The default value is `IfNotPresent`.
                    Enum:
                      Always
                      Never
                      IfNotPresent
                    Type:  string
                  Pull Secret Ref:
                    Description:  pullSecretRef references the secrets in the same namespace to be used for pulling images. Image pull secrets are distinct from secrets because secrets can be mounted in the pod, but image pull secrets are only accessed by `kubelet`. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
                    Items:
                      Type:  string
                    Type:    array
                Required:
                  application
                  init
                Type:  object
              Inject Annotations:
                Additional Properties:
                  Type:                       string
                Description:                  injectAnnotations are the annotations injected to the internal resources that CFK created. The internal annotations are preserved and cannot be overridden. For pod annotations, use `podTemplate.annotations`.
                Type:                         object
                X - Kubernetes - Map - Type:  granular
              Inject Labels:
                Additional Properties:
                  Type:                       string
                Description:                  injectLabels are the labels injected to the internal resources that CFK created. The internal labels are preserved and cannot be overridden. For pod labels, use `podTemplate.labels`.
                Type:                         object
                X - Kubernetes - Map - Type:  granular
              k8sClusterDomain:
                Description:  k8sClusterDomain specifies the configuration of the Kubernetes cluster domain. The default is the `cluster.local` domain.
                Type:         string
              License:
                Description:  license specifies the license configuration for the Confluent Platform component.
                Properties:
                  Directory Path In Container:
                    Description:  directoryPathInContainer specifies the directory path in the container where the license key is mounted. More info: https://docs.confluent.io/operator/current/co-license.html#update-component-level-licenses
                    Min Length:   1
                    Type:         string
                  Global License:
                    Description:  globalLicense specifies whether the Confluent Platform component shares the common global license.
                    Type:         boolean
                  Secret Ref:
                    Description:  secretRef references the secret that provides the license for the Confluent Platform component. More info: https://docs.confluent.io/operator/current/co-license.html#update-component-level-licenses
                    Max Length:   30
                    Min Length:   1
                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    Type:         string
                Type:             object
              Metrics:
                Description:  metrics specify the security settings for the metric services.
                Properties:
                  Authentication:
                    Description:  authentication specifies the authentication configuration for the metrics.
                    Properties:
                      Type:
                        Description:  type specifies the metrics authentication method. The valid option is `mtls`.
                        Enum:
                          mtls
                        Type:  string
                    Required:
                      type
                    Type:  object
                  Prometheus:
                    Description:  prometheus specifies the configuration overrides for the JMX-Prometheus exporter.
                    Properties:
                      Blacklist:
                        Items:
                          Type:  string
                        Type:    array
                      Rules:
                        Items:
                          Description:  Rule defines the Prometheus Exporter rule override.
                          Properties:
                            Attr Name Snake Case:
                              Type:  boolean
                            Cache:
                              Type:  boolean
                            Help:
                              Min Length:  1
                              Type:        string
                            Labels:
                              Additional Properties:
                                Type:                       string
                              Type:                         object
                              X - Kubernetes - Map - Type:  granular
                            Name:
                              Min Length:  1
                              Type:        string
                            Pattern:
                              Min Length:  1
                              Type:        string
                            Type:
                              Min Length:  1
                              Type:        string
                            Value:
                              Min Length:  1
                              Type:        string
                            Value Factor:
                              Any Of:
                                Type:                              integer
                                Type:                              string
                              Default:                             1
                              Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              X - Kubernetes - Int - Or - String:  true
                          Type:                                    object
                        Type:                                      array
                      Whitelist:
                        Items:
                          Type:  string
                        Type:    array
                    Type:        object
                  Tls:
                    Description:  tls specifies the TLS configuration for the metrics.
                    Properties:
                      Directory Path In Container:
                        Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                        Min Length:   1
                        Type:         string
                      Enabled:
                        Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                        Type:         boolean
                      Ignore Trust Store Config:
                        Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                        Type:         boolean
                      Jks Password:
                        Description:  jksPassword references the secret containing the JKS password.
                        Properties:
                          Secret Ref:
                            Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          secretRef
                        Type:  object
                      Secret Ref:
                        Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                        Max Length:   30
                        Min Length:   1
                        Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        Type:         string
                    Required:
                      enabled
                    Type:  object
                Type:      object
              Mounted Secrets:
                Description:  mountedSecrets list the secrets injected to the underlying statefulset configuration. The secret reference is mounted in the default path `/mnt/secrets/<secret-name>`. The underlying resources will follow the secret as a file configuration. More info: https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-files-from-a-pod. A change to this setting will roll the cluster.
                Items:
                  Description:  MountedSecrets provides a way to inject a custom secret to the underlying statefulset.
                  Properties:
                    Key Items:
                      Description:  keyItems are key and path names.
                      Items:
                        Description:  Maps a string key to a path within a volume.
                        Properties:
                          Key:
                            Description:  The key to project.
                            Type:         string
                          Mode:
                            Description:  Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                            Format:       int32
                            Type:         integer
                          Path:
                            Description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                            Type:         string
                        Required:
                          key
                          path
                        Type:  object
                      Type:    array
                    Secret Ref:
                      Description:  secretRef references the name of the secret.
                      Max Length:   30
                      Min Length:   1
                      Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      Type:         string
                  Required:
                    secretRef
                  Type:  object
                Type:    array
              Mounted Volumes:
                Description:  mountedVolumes list the custom volumes that need to be mounted into the underlying statefulset. A change to this setting will roll the cluster.
                Properties:
                  Volume Mounts:
                    Description:  volumeMounts specify the list of volume mounts for the pods in the statefulset.
                    Items:
                      Description:  VolumeMount describes a mounting of a Volume within a container.
                      Properties:
                        Mount Path:
                          Description:  Path within the container at which the volume should be mounted.  Must not contain ':'.
                          Type:         string
                        Mount Propagation:
                          Description:  mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                          Type:         string
                        Name:
                          Description:  This must match the Name of a Volume.
                          Type:         string
                        Read Only:
                          Description:  Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                          Type:         boolean
                        Sub Path:
                          Description:  Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                          Type:         string
                        Sub Path Expr:
                          Description:  Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                          Type:         string
                      Required:
                        mountPath
                        name
                      Type:  object
                    Type:    array
                  Volumes:
                    Description:  volumes specify the list of volumes that can be mounted into the pods of statefulset.
                    Items:
                      Description:  Volume represents a named volume in a pod that may be accessed by any container in the pod.
                      Properties:
                        Aws Elastic Block Store:
                          Description:  AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                          Properties:
                            Fs Type:
                              Description:  Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
                              Type:         string
                            Partition:
                              Description:  The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                              Format:       int32
                              Type:         integer
                            Read Only:
                              Description:  Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              Type:         boolean
                            Volume ID:
                              Description:  Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              Type:         string
                          Required:
                            volumeID
                          Type:  object
                        Azure Disk:
                          Description:  AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                          Properties:
                            Caching Mode:
                              Description:  Host Caching mode: None, Read Only, Read Write.
                              Type:         string
                            Disk Name:
                              Description:  The Name of the data disk in the blob storage
                              Type:         string
                            Disk URI:
                              Description:  The URI the data disk in the blob storage
                              Type:         string
                            Fs Type:
                              Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              Type:         string
                            Kind:
                              Description:  Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
                              Type:         string
                            Read Only:
                              Description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              Type:         boolean
                          Required:
                            diskName
                            diskURI
                          Type:  object
                        Azure File:
                          Description:  AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
                          Properties:
                            Read Only:
                              Description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              Type:         boolean
                            Secret Name:
                              Description:  the name of secret that contains Azure Storage Account Name and Key
                              Type:         string
                            Share Name:
                              Description:  Share Name
                              Type:         string
                          Required:
                            secretName
                            shareName
                          Type:  object
                        Cephfs:
                          Description:  CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
                          Properties:
                            Monitors:
                              Description:  Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              Items:
                                Type:  string
                              Type:    array
                            Path:
                              Description:  Optional: Used as the mounted root, rather than the full Ceph tree, default is /
                              Type:         string
                            Read Only:
                              Description:  Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              Type:         boolean
                            Secret File:
                              Description:  Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              Type:         string
                            Secret Ref:
                              Description:  Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              Properties:
                                Name:
                                  Description:              Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:                     string
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            User:
                              Description:  Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              Type:         string
                          Required:
                            monitors
                          Type:  object
                        Cinder:
                          Description:  Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                          Properties:
                            Fs Type:
                              Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              Type:         string
                            Read Only:
                              Description:  Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              Type:         boolean
                            Secret Ref:
                              Description:  Optional: points to a secret object containing parameters used to connect to OpenStack.
                              Properties:
                                Name:
                                  Description:              Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:                     string
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            Volume ID:
                              Description:  volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              Type:         string
                          Required:
                            volumeID
                          Type:  object
                        Config Map:
                          Description:  ConfigMap represents a configMap that should populate this volume
                          Properties:
                            Default Mode:
                              Description:  Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                              Format:       int32
                              Type:         integer
                            Items:
                              Description:  If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                              Items:
                                Description:  Maps a string key to a path within a volume.
                                Properties:
                                  Key:
                                    Description:  The key to project.
                                    Type:         string
                                  Mode:
                                    Description:  Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                    Format:       int32
                                    Type:         integer
                                  Path:
                                    Description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                    Type:         string
                                Required:
                                  key
                                  path
                                Type:  object
                              Type:    array
                            Name:
                              Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                              Type:         string
                            Optional:
                              Description:              Specify whether the ConfigMap or its keys must be defined
                              Type:                     boolean
                          Type:                         object
                          X - Kubernetes - Map - Type:  atomic
                        Csi:
                          Description:  CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
                          Properties:
                            Driver:
                              Description:  Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
                              Type:         string
                            Fs Type:
                              Description:  Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
                              Type:         string
                            Node Publish Secret Ref:
                              Description:  NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
                              Properties:
                                Name:
                                  Description:              Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:                     string
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            Read Only:
                              Description:  Specifies a read-only configuration for the volume. Defaults to false (read/write).
                              Type:         boolean
                            Volume Attributes:
                              Additional Properties:
                                Type:       string
                              Description:  VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
                              Type:         object
                          Required:
                            driver
                          Type:  object
                        Downward API:
                          Description:  DownwardAPI represents downward API about the pod that should populate this volume
                          Properties:
                            Default Mode:
                              Description:  Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                              Format:       int32
                              Type:         integer
                            Items:
                              Description:  Items is a list of downward API volume file
                              Items:
                                Description:  DownwardAPIVolumeFile represents information to create the file containing the pod field
                                Properties:
                                  Field Ref:
                                    Description:  Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
                                    Properties:
                                      API Version:
                                        Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                        Type:         string
                                      Field Path:
                                        Description:  Path of the field to select in the specified API version.
                                        Type:         string
                                    Required:
                                      fieldPath
                                    Type:                         object
                                    X - Kubernetes - Map - Type:  atomic
                                  Mode:
                                    Description:  Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                    Format:       int32
                                    Type:         integer
                                  Path:
                                    Description:  Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
                                    Type:         string
                                  Resource Field Ref:
                                    Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                    Properties:
                                      Container Name:
                                        Description:  Container name: required for volumes, optional for env vars
                                        Type:         string
                                      Divisor:
                                        Any Of:
                                          Type:                              integer
                                          Type:                              string
                                        Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                        Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        X - Kubernetes - Int - Or - String:  true
                                      Resource:
                                        Description:  Required: resource to select
                                        Type:         string
                                    Required:
                                      resource
                                    Type:                         object
                                    X - Kubernetes - Map - Type:  atomic
                                Required:
                                  path
                                Type:  object
                              Type:    array
                          Type:        object
                        Empty Dir:
                          Description:  EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          Properties:
                            Medium:
                              Description:  What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                              Type:         string
                            Size Limit:
                              Any Of:
                                Type:                              integer
                                Type:                              string
                              Description:                         Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
                              Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              X - Kubernetes - Int - Or - String:  true
                          Type:                                    object
                        Ephemeral:
                          Description:  Ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed. 
 Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through a PersistentVolumeClaim (see EphemeralVolumeSource for more information on the connection between this volume type and PersistentVolumeClaim). 
 Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod. 
 Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information. 
 A pod can use both types of ephemeral volumes and persistent volumes at the same time.
                          Properties:
                            Volume Claim Template:
                              Description:  Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long). 
 An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. 
 This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. 
 Required, must not be nil.
                              Properties:
                                Metadata:
                                  Description:  May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
                                  Type:         object
                                Spec:
                                  Description:  The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.
                                  Properties:
                                    Access Modes:
                                      Description:  AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                      Items:
                                        Type:  string
                                      Type:    array
                                    Data Source:
                                      Description:  This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.
                                      Properties:
                                        API Group:
                                          Description:  APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                          Type:         string
                                        Kind:
                                          Description:  Kind is the type of resource being referenced
                                          Type:         string
                                        Name:
                                          Description:  Name is the name of resource being referenced
                                          Type:         string
                                      Required:
                                        kind
                                        name
                                      Type:                         object
                                      X - Kubernetes - Map - Type:  atomic
                                    Data Source Ref:
                                      Description:  Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Alpha) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                      Properties:
                                        API Group:
                                          Description:  APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                          Type:         string
                                        Kind:
                                          Description:  Kind is the type of resource being referenced
                                          Type:         string
                                        Name:
                                          Description:  Name is the name of resource being referenced
                                          Type:         string
                                      Required:
                                        kind
                                        name
                                      Type:                         object
                                      X - Kubernetes - Map - Type:  atomic
                                    Resources:
                                      Description:  Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                      Properties:
                                        Limits:
                                          Additional Properties:
                                            Any Of:
                                              Type:                              integer
                                              Type:                              string
                                            Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            X - Kubernetes - Int - Or - String:  true
                                          Description:                           Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          Type:                                  object
                                        Requests:
                                          Additional Properties:
                                            Any Of:
                                              Type:                              integer
                                              Type:                              string
                                            Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            X - Kubernetes - Int - Or - String:  true
                                          Description:                           Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          Type:                                  object
                                      Type:                                      object
                                    Selector:
                                      Description:  A label query over volumes to consider for binding.
                                      Properties:
                                        Match Expressions:
                                          Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          Items:
                                            Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  key is the label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                Type:         string
                                              Values:
                                                Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                        Match Labels:
                                          Additional Properties:
                                            Type:                   string
                                          Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          Type:                     object
                                      Type:                         object
                                      X - Kubernetes - Map - Type:  atomic
                                    Storage Class Name:
                                      Description:  Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                      Type:         string
                                    Volume Mode:
                                      Description:  volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                                      Type:         string
                                    Volume Name:
                                      Description:  VolumeName is the binding reference to the PersistentVolume backing this claim.
                                      Type:         string
                                  Type:             object
                              Required:
                                spec
                              Type:  object
                          Type:      object
                        Fc:
                          Description:  FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
                          Properties:
                            Fs Type:
                              Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
                              Type:         string
                            Lun:
                              Description:  Optional: FC target lun number
                              Format:       int32
                              Type:         integer
                            Read Only:
                              Description:  Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              Type:         boolean
                            Target WW Ns:
                              Description:  Optional: FC target worldwide names (WWNs)
                              Items:
                                Type:  string
                              Type:    array
                            Wwids:
                              Description:  Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                              Items:
                                Type:  string
                              Type:    array
                          Type:        object
                        Flex Volume:
                          Description:  FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
                          Properties:
                            Driver:
                              Description:  Driver is the name of the driver to use for this volume.
                              Type:         string
                            Fs Type:
                              Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                              Type:         string
                            Options:
                              Additional Properties:
                                Type:       string
                              Description:  Optional: Extra command options if any.
                              Type:         object
                            Read Only:
                              Description:  Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              Type:         boolean
                            Secret Ref:
                              Description:  Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
                              Properties:
                                Name:
                                  Description:              Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:                     string
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                          Required:
                            driver
                          Type:  object
                        Flocker:
                          Description:  Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
                          Properties:
                            Dataset Name:
                              Description:  Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
                              Type:         string
                            Dataset UUID:
                              Description:  UUID of the dataset. This is unique identifier of a Flocker dataset
                              Type:         string
                          Type:             object
                        Gce Persistent Disk:
                          Description:  GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                          Properties:
                            Fs Type:
                              Description:  Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
                              Type:         string
                            Partition:
                              Description:  The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              Format:       int32
                              Type:         integer
                            Pd Name:
                              Description:  Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              Type:         string
                            Read Only:
                              Description:  ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              Type:         boolean
                          Required:
                            pdName
                          Type:  object
                        Git Repo:
                          Description:  GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
                          Properties:
                            Directory:
                              Description:  Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
                              Type:         string
                            Repository:
                              Description:  Repository URL
                              Type:         string
                            Revision:
                              Description:  Commit hash for the specified revision.
                              Type:         string
                          Required:
                            repository
                          Type:  object
                        Glusterfs:
                          Description:  Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
                          Properties:
                            Endpoints:
                              Description:  EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                              Type:         string
                            Path:
                              Description:  Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                              Type:         string
                            Read Only:
                              Description:  ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                              Type:         boolean
                          Required:
                            endpoints
                            path
                          Type:  object
                        Host Path:
                          Description:  HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
                          Properties:
                            Path:
                              Description:  Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                              Type:         string
                            Type:
                              Description:  Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                              Type:         string
                          Required:
                            path
                          Type:  object
                        Iscsi:
                          Description:  ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
                          Properties:
                            Chap Auth Discovery:
                              Description:  whether support iSCSI Discovery CHAP authentication
                              Type:         boolean
                            Chap Auth Session:
                              Description:  whether support iSCSI Session CHAP authentication
                              Type:         boolean
                            Fs Type:
                              Description:  Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
                              Type:         string
                            Initiator Name:
                              Description:  Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
                              Type:         string
                            Iqn:
                              Description:  Target iSCSI Qualified Name.
                              Type:         string
                            Iscsi Interface:
                              Description:  iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
                              Type:         string
                            Lun:
                              Description:  iSCSI Target Lun number.
                              Format:       int32
                              Type:         integer
                            Portals:
                              Description:  iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                              Items:
                                Type:  string
                              Type:    array
                            Read Only:
                              Description:  ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
                              Type:         boolean
                            Secret Ref:
                              Description:  CHAP Secret for iSCSI target and initiator authentication
                              Properties:
                                Name:
                                  Description:              Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:                     string
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            Target Portal:
                              Description:  iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                              Type:         string
                          Required:
                            iqn
                            lun
                            targetPortal
                          Type:  object
                        Name:
                          Description:  Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          Type:         string
                        Nfs:
                          Description:  NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                          Properties:
                            Path:
                              Description:  Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              Type:         string
                            Read Only:
                              Description:  ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              Type:         boolean
                            Server:
                              Description:  Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              Type:         string
                          Required:
                            path
                            server
                          Type:  object
                        Persistent Volume Claim:
                          Description:  PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          Properties:
                            Claim Name:
                              Description:  ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                              Type:         string
                            Read Only:
                              Description:  Will force the ReadOnly setting in VolumeMounts. Default false.
                              Type:         boolean
                          Required:
                            claimName
                          Type:  object
                        Photon Persistent Disk:
                          Description:  PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
                          Properties:
                            Fs Type:
                              Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              Type:         string
                            Pd ID:
                              Description:  ID that identifies Photon Controller persistent disk
                              Type:         string
                          Required:
                            pdID
                          Type:  object
                        Portworx Volume:
                          Description:  PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
                          Properties:
                            Fs Type:
                              Description:  FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                              Type:         string
                            Read Only:
                              Description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              Type:         boolean
                            Volume ID:
                              Description:  VolumeID uniquely identifies a Portworx volume
                              Type:         string
                          Required:
                            volumeID
                          Type:  object
                        Projected:
                          Description:  Items for all in one resources secrets, configmaps, and downward API
                          Properties:
                            Default Mode:
                              Description:  Mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                              Format:       int32
                              Type:         integer
                            Sources:
                              Description:  list of volume projections
                              Items:
                                Description:  Projection that may be projected along with other supported volume types
                                Properties:
                                  Config Map:
                                    Description:  information about the configMap data to project
                                    Properties:
                                      Items:
                                        Description:  If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                        Items:
                                          Description:  Maps a string key to a path within a volume.
                                          Properties:
                                            Key:
                                              Description:  The key to project.
                                              Type:         string
                                            Mode:
                                              Description:  Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                              Format:       int32
                                              Type:         integer
                                            Path:
                                              Description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                              Type:         string
                                          Required:
                                            key
                                            path
                                          Type:  object
                                        Type:    array
                                      Name:
                                        Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                        Type:         string
                                      Optional:
                                        Description:              Specify whether the ConfigMap or its keys must be defined
                                        Type:                     boolean
                                    Type:                         object
                                    X - Kubernetes - Map - Type:  atomic
                                  Downward API:
                                    Description:  information about the downwardAPI data to project
                                    Properties:
                                      Items:
                                        Description:  Items is a list of DownwardAPIVolume file
                                        Items:
                                          Description:  DownwardAPIVolumeFile represents information to create the file containing the pod field
                                          Properties:
                                            Field Ref:
                                              Description:  Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
                                              Properties:
                                                API Version:
                                                  Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                  Type:         string
                                                Field Path:
                                                  Description:  Path of the field to select in the specified API version.
                                                  Type:         string
                                              Required:
                                                fieldPath
                                              Type:                         object
                                              X - Kubernetes - Map - Type:  atomic
                                            Mode:
                                              Description:  Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                              Format:       int32
                                              Type:         integer
                                            Path:
                                              Description:  Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
                                              Type:         string
                                            Resource Field Ref:
                                              Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                              Properties:
                                                Container Name:
                                                  Description:  Container name: required for volumes, optional for env vars
                                                  Type:         string
                                                Divisor:
                                                  Any Of:
                                                    Type:                              integer
                                                    Type:                              string
                                                  Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  X - Kubernetes - Int - Or - String:  true
                                                Resource:
                                                  Description:  Required: resource to select
                                                  Type:         string
                                              Required:
                                                resource
                                              Type:                         object
                                              X - Kubernetes - Map - Type:  atomic
                                          Required:
                                            path
                                          Type:  object
                                        Type:    array
                                    Type:        object
                                  Secret:
                                    Description:  information about the secret data to project
                                    Properties:
                                      Items:
                                        Description:  If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                        Items:
                                          Description:  Maps a string key to a path within a volume.
                                          Properties:
                                            Key:
                                              Description:  The key to project.
                                              Type:         string
                                            Mode:
                                              Description:  Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                              Format:       int32
                                              Type:         integer
                                            Path:
                                              Description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                              Type:         string
                                          Required:
                                            key
                                            path
                                          Type:  object
                                        Type:    array
                                      Name:
                                        Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                        Type:         string
                                      Optional:
                                        Description:              Specify whether the Secret or its key must be defined
                                        Type:                     boolean
                                    Type:                         object
                                    X - Kubernetes - Map - Type:  atomic
                                  Service Account Token:
                                    Description:  information about the serviceAccountToken data to project
                                    Properties:
                                      Audience:
                                        Description:  Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
                                        Type:         string
                                      Expiration Seconds:
                                        Description:  ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
                                        Format:       int64
                                        Type:         integer
                                      Path:
                                        Description:  Path is the path relative to the mount point of the file to project the token into.
                                        Type:         string
                                    Required:
                                      path
                                    Type:  object
                                Type:      object
                              Type:        array
                          Type:            object
                        Quobyte:
                          Description:  Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
                          Properties:
                            Group:
                              Description:  Group to map volume access to Default is no group
                              Type:         string
                            Read Only:
                              Description:  ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
                              Type:         boolean
                            Registry:
                              Description:  Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
                              Type:         string
                            Tenant:
                              Description:  Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                              Type:         string
                            User:
                              Description:  User to map volume access to Defaults to serivceaccount user
                              Type:         string
                            Volume:
                              Description:  Volume is a string that references an already created Quobyte volume by name.
                              Type:         string
                          Required:
                            registry
                            volume
                          Type:  object
                        Rbd:
                          Description:  RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
                          Properties:
                            Fs Type:
                              Description:  Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
                              Type:         string
                            Image:
                              Description:  The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              Type:         string
                            Keyring:
                              Description:  Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              Type:         string
                            Monitors:
                              Description:  A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              Items:
                                Type:  string
                              Type:    array
                            Pool:
                              Description:  The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              Type:         string
                            Read Only:
                              Description:  ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              Type:         boolean
                            Secret Ref:
                              Description:  SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              Properties:
                                Name:
                                  Description:              Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:                     string
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            User:
                              Description:  The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              Type:         string
                          Required:
                            image
                            monitors
                          Type:  object
                        Scale IO:
                          Description:  ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                          Properties:
                            Fs Type:
                              Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                              Type:         string
                            Gateway:
                              Description:  The host address of the ScaleIO API Gateway.
                              Type:         string
                            Protection Domain:
                              Description:  The name of the ScaleIO Protection Domain for the configured storage.
                              Type:         string
                            Read Only:
                              Description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              Type:         boolean
                            Secret Ref:
                              Description:  SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
                              Properties:
                                Name:
                                  Description:              Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:                     string
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            Ssl Enabled:
                              Description:  Flag to enable/disable SSL communication with Gateway, default false
                              Type:         boolean
                            Storage Mode:
                              Description:  Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
                              Type:         string
                            Storage Pool:
                              Description:  The ScaleIO Storage Pool associated with the protection domain.
                              Type:         string
                            System:
                              Description:  The name of the storage system as configured in ScaleIO.
                              Type:         string
                            Volume Name:
                              Description:  The name of a volume already created in the ScaleIO system that is associated with this volume source.
                              Type:         string
                          Required:
                            gateway
                            secretRef
                            system
                          Type:  object
                        Secret:
                          Description:  Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                          Properties:
                            Default Mode:
                              Description:  Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                              Format:       int32
                              Type:         integer
                            Items:
                              Description:  If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                              Items:
                                Description:  Maps a string key to a path within a volume.
                                Properties:
                                  Key:
                                    Description:  The key to project.
                                    Type:         string
                                  Mode:
                                    Description:  Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                    Format:       int32
                                    Type:         integer
                                  Path:
                                    Description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                    Type:         string
                                Required:
                                  key
                                  path
                                Type:  object
                              Type:    array
                            Optional:
                              Description:  Specify whether the Secret or its keys must be defined
                              Type:         boolean
                            Secret Name:
                              Description:  Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                              Type:         string
                          Type:             object
                        Storageos:
                          Description:  StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                          Properties:
                            Fs Type:
                              Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              Type:         string
                            Read Only:
                              Description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              Type:         boolean
                            Secret Ref:
                              Description:  SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
                              Properties:
                                Name:
                                  Description:              Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:                     string
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            Volume Name:
                              Description:  VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
                              Type:         string
                            Volume Namespace:
                              Description:  VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
                              Type:         string
                          Type:             object
                        Vsphere Volume:
                          Description:  VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
                          Properties:
                            Fs Type:
                              Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              Type:         string
                            Storage Policy ID:
                              Description:  Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                              Type:         string
                            Storage Policy Name:
                              Description:  Storage Policy Based Management (SPBM) profile name.
                              Type:         string
                            Volume Path:
                              Description:  Path that identifies vSphere volume vmdk
                              Type:         string
                          Required:
                            volumePath
                          Type:  object
                      Required:
                        name
                      Type:  object
                    Type:    array
                Required:
                  volumeMounts
                  volumes
                Type:  object
              One Replica Per Node:
                Description:  oneReplicaPerNode controls whether to run 1 pod per node using the pod anti-affinity capability. Enabling this configuration in an existing cluster will roll the cluster.
                Type:         boolean
              Pod Template:
                Description:  podTemplate specifies the statefulset pod template configuration.
                Properties:
                  Affinity:
                    Description:  affinity specifies a group of affinity scheduling rules. More info: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity.
                    Properties:
                      Node Affinity:
                        Description:  Describes node affinity scheduling rules for the pod.
                        Properties:
                          Preferred During Scheduling Ignored During Execution:
                            Description:  The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
                            Items:
                              Description:  An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                              Properties:
                                Preference:
                                  Description:  A node selector term, associated with the corresponding weight.
                                  Properties:
                                    Match Expressions:
                                      Description:  A list of node selector requirements by node's labels.
                                      Items:
                                        Description:  A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        Properties:
                                          Key:
                                            Description:  The label key that the selector applies to.
                                            Type:         string
                                          Operator:
                                            Description:  Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            Type:         string
                                          Values:
                                            Description:  An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            Items:
                                              Type:  string
                                            Type:    array
                                        Required:
                                          key
                                          operator
                                        Type:  object
                                      Type:    array
                                    Match Fields:
                                      Description:  A list of node selector requirements by node's fields.
                                      Items:
                                        Description:  A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        Properties:
                                          Key:
                                            Description:  The label key that the selector applies to.
                                            Type:         string
                                          Operator:
                                            Description:  Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            Type:         string
                                          Values:
                                            Description:  An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            Items:
                                              Type:  string
                                            Type:    array
                                        Required:
                                          key
                                          operator
                                        Type:                   object
                                      Type:                     array
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Weight:
                                  Description:  Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                  Format:       int32
                                  Type:         integer
                              Required:
                                preference
                                weight
                              Type:  object
                            Type:    array
                          Required During Scheduling Ignored During Execution:
                            Description:  If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
                            Properties:
                              Node Selector Terms:
                                Description:  Required. A list of node selector terms. The terms are ORed.
                                Items:
                                  Description:  A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                  Properties:
                                    Match Expressions:
                                      Description:  A list of node selector requirements by node's labels.
                                      Items:
                                        Description:  A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        Properties:
                                          Key:
                                            Description:  The label key that the selector applies to.
                                            Type:         string
                                          Operator:
                                            Description:  Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            Type:         string
                                          Values:
                                            Description:  An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            Items:
                                              Type:  string
                                            Type:    array
                                        Required:
                                          key
                                          operator
                                        Type:  object
                                      Type:    array
                                    Match Fields:
                                      Description:  A list of node selector requirements by node's fields.
                                      Items:
                                        Description:  A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        Properties:
                                          Key:
                                            Description:  The label key that the selector applies to.
                                            Type:         string
                                          Operator:
                                            Description:  Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            Type:         string
                                          Values:
                                            Description:  An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            Items:
                                              Type:  string
                                            Type:    array
                                        Required:
                                          key
                                          operator
                                        Type:                   object
                                      Type:                     array
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Type:                           array
                            Required:
                              nodeSelectorTerms
                            Type:                         object
                            X - Kubernetes - Map - Type:  atomic
                        Type:                             object
                      Pod Affinity:
                        Description:  Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                        Properties:
                          Preferred During Scheduling Ignored During Execution:
                            Description:  The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                            Items:
                              Description:  The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                              Properties:
                                Pod Affinity Term:
                                  Description:  Required. A pod affinity term, associated with the corresponding weight.
                                  Properties:
                                    Label Selector:
                                      Description:  A label query over a set of resources, in this case pods.
                                      Properties:
                                        Match Expressions:
                                          Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          Items:
                                            Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  key is the label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                Type:         string
                                              Values:
                                                Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                        Match Labels:
                                          Additional Properties:
                                            Type:                   string
                                          Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          Type:                     object
                                      Type:                         object
                                      X - Kubernetes - Map - Type:  atomic
                                    Namespace Selector:
                                      Description:  A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
                                      Properties:
                                        Match Expressions:
                                          Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          Items:
                                            Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  key is the label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                Type:         string
                                              Values:
                                                Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                        Match Labels:
                                          Additional Properties:
                                            Type:                   string
                                          Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          Type:                     object
                                      Type:                         object
                                      X - Kubernetes - Map - Type:  atomic
                                    Namespaces:
                                      Description:  namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
                                      Items:
                                        Type:  string
                                      Type:    array
                                    Topology Key:
                                      Description:  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                      Type:         string
                                  Required:
                                    topologyKey
                                  Type:  object
                                Weight:
                                  Description:  weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                  Format:       int32
                                  Type:         integer
                              Required:
                                podAffinityTerm
                                weight
                              Type:  object
                            Type:    array
                          Required During Scheduling Ignored During Execution:
                            Description:  If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                            Items:
                              Description:  Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                              Properties:
                                Label Selector:
                                  Description:  A label query over a set of resources, in this case pods.
                                  Properties:
                                    Match Expressions:
                                      Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      Items:
                                        Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        Properties:
                                          Key:
                                            Description:  key is the label key that the selector applies to.
                                            Type:         string
                                          Operator:
                                            Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                            Type:         string
                                          Values:
                                            Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                            Items:
                                              Type:  string
                                            Type:    array
                                        Required:
                                          key
                                          operator
                                        Type:  object
                                      Type:    array
                                    Match Labels:
                                      Additional Properties:
                                        Type:                   string
                                      Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      Type:                     object
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Namespace Selector:
                                  Description:  A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
                                  Properties:
                                    Match Expressions:
                                      Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      Items:
                                        Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        Properties:
                                          Key:
                                            Description:  key is the label key that the selector applies to.
                                            Type:         string
                                          Operator:
                                            Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                            Type:         string
                                          Values:
                                            Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                            Items:
                                              Type:  string
                                            Type:    array
                                        Required:
                                          key
                                          operator
                                        Type:  object
                                      Type:    array
                                    Match Labels:
                                      Additional Properties:
                                        Type:                   string
                                      Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      Type:                     object
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Namespaces:
                                  Description:  namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
                                  Items:
                                    Type:  string
                                  Type:    array
                                Topology Key:
                                  Description:  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                  Type:         string
                              Required:
                                topologyKey
                              Type:  object
                            Type:    array
                        Type:        object
                      Pod Anti Affinity:
                        Description:  Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                        Properties:
                          Preferred During Scheduling Ignored During Execution:
                            Description:  The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                            Items:
                              Description:  The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                              Properties:
                                Pod Affinity Term:
                                  Description:  Required. A pod affinity term, associated with the corresponding weight.
                                  Properties:
                                    Label Selector:
                                      Description:  A label query over a set of resources, in this case pods.
                                      Properties:
                                        Match Expressions:
                                          Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          Items:
                                            Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  key is the label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                Type:         string
                                              Values:
                                                Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                        Match Labels:
                                          Additional Properties:
                                            Type:                   string
                                          Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          Type:                     object
                                      Type:                         object
                                      X - Kubernetes - Map - Type:  atomic
                                    Namespace Selector:
                                      Description:  A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
                                      Properties:
                                        Match Expressions:
                                          Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          Items:
                                            Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  key is the label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                Type:         string
                                              Values:
                                                Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                        Match Labels:
                                          Additional Properties:
                                            Type:                   string
                                          Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          Type:                     object
                                      Type:                         object
                                      X - Kubernetes - Map - Type:  atomic
                                    Namespaces:
                                      Description:  namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
                                      Items:
                                        Type:  string
                                      Type:    array
                                    Topology Key:
                                      Description:  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                      Type:         string
                                  Required:
                                    topologyKey
                                  Type:  object
                                Weight:
                                  Description:  weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                  Format:       int32
                                  Type:         integer
                              Required:
                                podAffinityTerm
                                weight
                              Type:  object
                            Type:    array
                          Required During Scheduling Ignored During Execution:
                            Description:  If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                            Items:
                              Description:  Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                              Properties:
                                Label Selector:
                                  Description:  A label query over a set of resources, in this case pods.
                                  Properties:
                                    Match Expressions:
                                      Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      Items:
                                        Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        Properties:
                                          Key:
                                            Description:  key is the label key that the selector applies to.
                                            Type:         string
                                          Operator:
                                            Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                            Type:         string
                                          Values:
                                            Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                            Items:
                                              Type:  string
                                            Type:    array
                                        Required:
                                          key
                                          operator
                                        Type:  object
                                      Type:    array
                                    Match Labels:
                                      Additional Properties:
                                        Type:                   string
                                      Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      Type:                     object
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Namespace Selector:
                                  Description:  A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
                                  Properties:
                                    Match Expressions:
                                      Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      Items:
                                        Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        Properties:
                                          Key:
                                            Description:  key is the label key that the selector applies to.
                                            Type:         string
                                          Operator:
                                            Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                            Type:         string
                                          Values:
                                            Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                            Items:
                                              Type:  string
                                            Type:    array
                                        Required:
                                          key
                                          operator
                                        Type:  object
                                      Type:    array
                                    Match Labels:
                                      Additional Properties:
                                        Type:                   string
                                      Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      Type:                     object
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Namespaces:
                                  Description:  namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
                                  Items:
                                    Type:  string
                                  Type:    array
                                Topology Key:
                                  Description:  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                  Type:         string
                              Required:
                                topologyKey
                              Type:  object
                            Type:    array
                        Type:        object
                    Type:            object
                  Annotations:
                    Additional Properties:
                      Type:                       string
                    Description:                  annotations is a map of string key and value pairs stored with the resource and may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations.
                    Type:                         object
                    X - Kubernetes - Map - Type:  granular
                  Env Vars:
                    Description:  envVars contain environment variables to be injected into containers. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container.
                    Items:
                      Description:  EnvVar represents an environment variable present in a Container.
                      Properties:
                        Name:
                          Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                          Type:         string
                        Value:
                          Description:  Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                          Type:         string
                        Value From:
                          Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                          Properties:
                            Config Map Key Ref:
                              Description:  Selects a key of a ConfigMap.
                              Properties:
                                Key:
                                  Description:  The key to select.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the ConfigMap or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            Field Ref:
                              Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              Properties:
                                API Version:
                                  Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  Type:         string
                                Field Path:
                                  Description:  Path of the field to select in the specified API version.
                                  Type:         string
                              Required:
                                fieldPath
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            Resource Field Ref:
                              Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              Properties:
                                Container Name:
                                  Description:  Container name: required for volumes, optional for env vars
                                  Type:         string
                                Divisor:
                                  Any Of:
                                    Type:                              integer
                                    Type:                              string
                                  Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  X - Kubernetes - Int - Or - String:  true
                                Resource:
                                  Description:  Required: resource to select
                                  Type:         string
                              Required:
                                resource
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            Secret Key Ref:
                              Description:  Selects a key of a secret in the pod's namespace
                              Properties:
                                Key:
                                  Description:  The key of the secret to select from.  Must be a valid secret key.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the Secret or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                          Type:                             object
                      Required:
                        name
                      Type:  object
                    Type:    array
                  Labels:
                    Additional Properties:
                      Type:                       string
                    Description:                  labels is a map of string key and value pairs that can be used to organize and categorize (scope and select) objects. More info: http://kubernetes.io/docs/user-guide/labels.
                    Type:                         object
                    X - Kubernetes - Map - Type:  granular
                  Pod Security Context:
                    Description:  PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
                    Properties:
                      Fs Group:
                        Description:  A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 
 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- 
 If unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.
                        Format:  int64
                        Type:    integer
                      Fs Group Change Policy:
                        Description:  fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used. Note that this field cannot be set when spec.os.name is windows.
                        Type:         string
                      Run As Group:
                        Description:  The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Run As Non Root:
                        Description:  Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Type:         boolean
                      Run As User:
                        Description:  The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Se Linux Options:
                        Description:  The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Level:
                            Description:  Level is SELinux level label that applies to the container.
                            Type:         string
                          Role:
                            Description:  Role is a SELinux role label that applies to the container.
                            Type:         string
                          Type:
                            Description:  Type is a SELinux type label that applies to the container.
                            Type:         string
                          User:
                            Description:  User is a SELinux user label that applies to the container.
                            Type:         string
                        Type:             object
                      Seccomp Profile:
                        Description:  The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Localhost Profile:
                            Description:  localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                            Type:         string
                          Type:
                            Description:  type indicates which kind of seccomp profile will be applied. Valid options are: 
 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Supplemental Groups:
                        Description:  A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container. Note that this field cannot be set when spec.os.name is windows.
                        Items:
                          Format:  int64
                          Type:    integer
                        Type:      array
                      Sysctls:
                        Description:  Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.
                        Items:
                          Description:  Sysctl defines a kernel parameter to be set
                          Properties:
                            Name:
                              Description:  Name of a property to set
                              Type:         string
                            Value:
                              Description:  Value of a property to set
                              Type:         string
                          Required:
                            name
                            value
                          Type:  object
                        Type:    array
                      Windows Options:
                        Description:  The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.
                        Properties:
                          Gmsa Credential Spec:
                            Description:  GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                            Type:         string
                          Gmsa Credential Spec Name:
                            Description:  GMSACredentialSpecName is the name of the GMSA credential spec to use.
                            Type:         string
                          Host Process:
                            Description:  HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
                            Type:         boolean
                          Run As User Name:
                            Description:  The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Type:         string
                        Type:             object
                    Type:                 object
                  Priority Class Name:
                    Description:  priorityClassName specifies the priority class for the pod (if any).
                    Min Length:   1
                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    Type:         string
                  Probe:
                    Description:  probe contains the fields for standard Kubernetes readiness/liveness probe configuration.
                    Properties:
                      Liveness:
                        Description:  liveness configures the Kubernetes probe settings. The changes will override the existing default configuration.
                        Properties:
                          Failure Threshold:
                            Description:  failureThreshold is the minimum consecutive failures for the probe to be considered failed. Confluent Platform components come with the right configuration, and this setting is not required to change most of the time.
                            Format:       int32
                            Type:         integer
                          Initial Delay Seconds:
                            Description:  initialDelaySeconds is the number of seconds after the container has started and before probes are initiated. Confluent Platform components come with the right configuration, and this setting is not required to change most of the time.
                            Format:       int32
                            Type:         integer
                          Period Seconds:
                            Description:  periodSeconds specifies how often to perform the probe. Confluent Platform components come with the right configuration, and this setting is not required to change most of the time.
                            Format:       int32
                            Type:         integer
                          Success Threshold:
                            Description:  successThreshold is the minimum consecutive successes for the probe to be considered successful after having failed. The default values is `1`. Must be `1` for liveness and startup. The minimum value is `1`.
                            Format:       int32
                            Type:         integer
                          Timeout Seconds:
                            Description:  timeoutSeconds is the number of seconds after which the probe times out. Confluent Platform components come with the right configuration, and this setting is not required to change most of the time.
                            Format:       int32
                            Type:         integer
                        Type:             object
                      Readiness:
                        Description:  readiness configures the Kubernetes probe setting. The changes will override the existing default configuration.
                        Properties:
                          Failure Threshold:
                            Description:  failureThreshold is the minimum consecutive failures for the probe to be considered failed. Confluent Platform components come with the right configuration, and this setting is not required to change most of the time.
                            Format:       int32
                            Type:         integer
                          Initial Delay Seconds:
                            Description:  initialDelaySeconds is the number of seconds after the container has started and before probes are initiated. Confluent Platform components come with the right configuration, and this setting is not required to change most of the time.
                            Format:       int32
                            Type:         integer
                          Period Seconds:
                            Description:  periodSeconds specifies how often to perform the probe. Confluent Platform components come with the right configuration, and this setting is not required to change most of the time.
                            Format:       int32
                            Type:         integer
                          Success Threshold:
                            Description:  successThreshold is the minimum consecutive successes for the probe to be considered successful after having failed. The default values is `1`. Must be `1` for liveness and startup. The minimum value is `1`.
                            Format:       int32
                            Type:         integer
                          Timeout Seconds:
                            Description:  timeoutSeconds is the number of seconds after which the probe times out. Confluent Platform components come with the right configuration, and this setting is not required to change most of the time.
                            Format:       int32
                            Type:         integer
                        Type:             object
                    Type:                 object
                  Resources:
                    Description:  resources describe the compute resource requirements.
                    Properties:
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                    Type:                                      object
                  Security Context:
                    Description:  SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
                    Properties:
                      Allow Privilege Escalation:
                        Description:  AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Capabilities:
                        Description:  The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Add:
                            Description:  Added capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                          Drop:
                            Description:  Removed capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                        Type:               object
                      Privileged:
                        Description:  Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Proc Mount:
                        Description:  procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
                        Type:         string
                      Read Only Root Filesystem:
                        Description:  Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Run As Group:
                        Description:  The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Run As Non Root:
                        Description:  Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Type:         boolean
                      Run As User:
                        Description:  The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Se Linux Options:
                        Description:  The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Level:
                            Description:  Level is SELinux level label that applies to the container.
                            Type:         string
                          Role:
                            Description:  Role is a SELinux role label that applies to the container.
                            Type:         string
                          Type:
                            Description:  Type is a SELinux type label that applies to the container.
                            Type:         string
                          User:
                            Description:  User is a SELinux user label that applies to the container.
                            Type:         string
                        Type:             object
                      Seccomp Profile:
                        Description:  The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Localhost Profile:
                            Description:  localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                            Type:         string
                          Type:
                            Description:  type indicates which kind of seccomp profile will be applied. Valid options are: 
 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Windows Options:
                        Description:  The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.
                        Properties:
                          Gmsa Credential Spec:
                            Description:  GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                            Type:         string
                          Gmsa Credential Spec Name:
                            Description:  GMSACredentialSpecName is the name of the GMSA credential spec to use.
                            Type:         string
                          Host Process:
                            Description:  HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
                            Type:         boolean
                          Run As User Name:
                            Description:  The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Type:         string
                        Type:             object
                    Type:                 object
                  Service Account Name:
                    Description:  ServiceAccountName is the name of the service account used to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account.
                    Type:         string
                  Termination Grace Period Seconds:
                    Description:  terminationGracePeriodSeconds is the grace period before the pod is deleted.
                    Format:       int64
                    Type:         integer
                  Tolerations:
                    Description:  tolerations specify the pods to schedule onto the nodes with matching taints, using the triple `<key,value,effect>` and the matching operator `<operator>`.
                    Items:
                      Description:  The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                      Properties:
                        Effect:
                          Description:  Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          Type:         string
                        Key:
                          Description:  Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          Type:         string
                        Operator:
                          Description:  Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                          Type:         string
                        Toleration Seconds:
                          Description:  TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                          Format:       int64
                          Type:         integer
                        Value:
                          Description:  Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                          Type:         string
                      Type:             object
                    Type:               array
                  Topology Spread Constraints:
                    Description:  topologySpreadConstraints describe how a group of pods ought to spread across topology domains. Scheduler will schedule pods based on the constraints. All topologySpreadConstraints are ANDed.
                    Items:
                      Description:  TopologySpreadConstraint specifies how to spread matching pods among the given topology.
                      Properties:
                        Label Selector:
                          Description:  LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.
                          Properties:
                            Match Expressions:
                              Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                              Items:
                                Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                Properties:
                                  Key:
                                    Description:  key is the label key that the selector applies to.
                                    Type:         string
                                  Operator:
                                    Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                    Type:         string
                                  Values:
                                    Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                    Items:
                                      Type:  string
                                    Type:    array
                                Required:
                                  key
                                  operator
                                Type:  object
                              Type:    array
                            Match Labels:
                              Additional Properties:
                                Type:                   string
                              Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                              Type:                     object
                          Type:                         object
                          X - Kubernetes - Map - Type:  atomic
                        Max Skew:
                          Description:  MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.
                          Format:       int32
                          Type:         integer
                        Topology Key:
                          Description:  TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. It's a required field.
                          Type:         string
                        When Unsatisfiable:
                          Description:  WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location, but giving higher precedence to topologies that would help reduce the skew. A constraint is considered "Unsatisfiable" for an incoming pod if and only if every possible node assignment for that pod would violate "MaxSkew" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.
                          Type:         string
                      Required:
                        maxSkew
                        topologyKey
                        whenUnsatisfiable
                      Type:  object
                    Type:    array
                Type:        object
              Replicas:
                Description:  replicas is the desired number of replicas. A change to this setting will roll the cluster.
                Format:       int32
                Type:         integer
              Telemetry:
                Description:  telemetry specifies the Confluent telemetry reporter configuration.
                Properties:
                  Global:
                    Description:  global allows disabling telemetry configuration. If CFK is deployed with telemetry, this field is only used to disable telemetry. The default value is `true` if telemetry is enabled at the global level.
                    Type:         boolean
                Type:             object
              Tls:
                Description:  tls specifies the TLS configurations for the KafkaRestProxy cluster.
                Properties:
                  Auto Generated Certs:
                    Description:  autoGeneratedCerts specifies that the certificates are auto-generated based on the CA key pair provided.
                    Type:         boolean
                  Directory Path In Container:
                    Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                    Min Length:   1
                    Type:         string
                  Ignore Trust Store Config:
                    Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                    Type:         boolean
                  Jks Password:
                    Description:  jksPassword references the secret containing the JKS password.
                    Properties:
                      Secret Ref:
                        Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                        Max Length:   30
                        Min Length:   1
                        Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        Type:         string
                    Required:
                      secretRef
                    Type:  object
                  Secret Ref:
                    Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                    Max Length:   30
                    Min Length:   1
                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    Type:         string
                Type:             object
            Required:
              image
              replicas
            Type:  object
          Status:
            Description:  status defines the observed state of the KafkaRestProxy cluster.
            Properties:
              Arbitrary Data:
                Description:                                   arbitraryData is the map for any arbitrary data associated with this Confluent component.
                X - Kubernetes - Preserve - Unknown - Fields:  true
              Authorization Type:
                Description:  authorizationType is the authorization type for this Confluent component.
                Type:         string
              Cluster Name:
                Description:  clusterName is the name of the Confluent Platform component cluster.
                Type:         string
              Cluster Namespace:
                Description:  clusterNamespace is the namespace where the Confluent Platform component cluster is running.
                Type:         string
              Conditions:
                Description:  conditions specify the latest available observations of the current state.
                Items:
                  Description:  Condition represent the latest available observations of the current state.
                  Properties:
                    Last Probe Time:
                      Description:  lastProbeTime shows the last time the condition was evaluated.
                      Format:       date-time
                      Type:         string
                    Last Transition Time:
                      Description:  lastTransitionTime shows the last time the condition was transitioned from one status to another.
                      Format:       date-time
                      Type:         string
                    Message:
                      Description:  message shows a human-readable message with details about the transition.
                      Type:         string
                    Reason:
                      Description:  reason shows the reason for the last transition of the condition.
                      Type:         string
                    Status:
                      Description:  status shows the status of the condition, one of `True`, `False`, or `Unknown`.
                      Type:         string
                    Type:
                      Description:  type shows the condition type.
                      Type:         string
                  Type:             object
                Type:               array
              Current Replicas:
                Description:  currentReplicas is the number of currently running replicas.
                Format:       int32
                Type:         integer
              Internal Secrets:
                Description:  internalSecrets are internal secrets created by CFK for this Confluent component.
                Items:
                  Type:  string
                Type:    array
              Internal Topic Names:
                Description:  internalTopicNames are the topics used by the component for internal use.
                Items:
                  Type:  string
                Type:    array
              Kafka:
                Description:  kafka is the Kafka client side status for the KafkaRestProxy cluster.
                Properties:
                  Authentication Type:
                    Description:  authenticationType describes the authentication method for the Kafka cluster.
                    Type:         string
                  Bootstrap Endpoint:
                    Description:  bootstrapEndpoint specifies the Kafka bootstrap endpoint.
                    Type:         string
                  Tls:
                    Description:  tls indicates whether TLS is enabled for the Kafka dependency.
                    Type:         boolean
                Type:             object
              Metric Prefix:
                Description:  metricPrefix is the prefix for the JMX metric of the KafkaRestProxy.
                Type:         string
              Observed Generation:
                Description:  observedGeneration is the most recent generation observed for this Confluent component.
                Format:       int64
                Type:         integer
              Operator Version:
                Description:  operatorVersion is the internal version of CFK.
                Type:         string
              Phase:
                Description:  phase describes the state of the Confluent Platform component. This can either be 'PROVISIONING' or 'RUNNING' 'PROVISIONING' means the Confluent Platform component is currently getting deployed and not ready yet. 'RUNNING' means the Confluent Platform component has been successfully deployed.
                Type:         string
              Rbac:
                Description:  rbac contains the RBAC-related status when RBAC is enabled.
                Properties:
                  Cluster ID:
                    Description:  clusterID specifies the id of the cluster.
                    Type:         string
                  Internal Rolebindings:
                    Description:  internalRolebindings specifies the internal rolebindings.
                    Items:
                      Type:  string
                    Type:    array
                Type:        object
              Ready Replicas:
                Description:  readyReplicas is the number of currently ready replicas.
                Format:       int32
                Type:         integer
              Replicas:
                Description:  replicas is the number of replicas.
                Format:       int32
                Type:         integer
              Rest Config:
                Description:  restConfig is the REST API configuration of the KafkaRestProxy.
                Properties:
                  Advertised External Endpoints:
                    Description:  advertisedExternalEndpoints specifies other advertised endpoints used, especially for Kafka.
                    Items:
                      Type:  string
                    Type:    array
                  Authentication Type:
                    Description:  authenticationType shows the authentication type configured by the listener.
                    Type:         string
                  External Access Type:
                    Description:  externalAccessType shows the external access type used for the listener.
                    Type:         string
                  External Endpoint:
                    Description:  externalEndpoint specifies the external endpoint to connect to the Confluent component cluster.
                    Type:         string
                  Internal Endpoint:
                    Description:  internalEndpoint specifies the internal endpoint to connect to the Confluent component cluster.
                    Type:         string
                  Tls:
                    Description:  tls shows whether TLS is configured for the listener.
                    Type:         boolean
                Type:             object
              Selector:
                Description:  selector gets the label selector of the child pod. The Horizontal Pod Autoscaler(HPA) will scale using the label selector of the child pod.
                Type:         string
            Type:             object
        Required:
          spec
        Type:  object
    Served:    true
    Storage:   true
    Subresources:
      Scale:
        Label Selector Path:   .status.selector
        Spec Replicas Path:    .spec.replicas
        Status Replicas Path:  .status.replicas
      Status:
Status:
  Accepted Names:
    Categories:
      all
      confluent-platform
      confluent
    Kind:       KafkaRestProxy
    List Kind:  KafkaRestProxyList
    Plural:     kafkarestproxies
    Short Names:
      kafkarestproxy
      krp
    Singular:  kafkarestproxy
  Conditions:
    Last Transition Time:  2023-09-27T08:08:13Z
    Message:               no conflicts found
    Reason:                NoConflicts
    Status:                True
    Type:                  NamesAccepted
    Last Transition Time:  2023-09-27T08:08:13Z
    Message:               the initial names have been accepted
    Reason:                InitialNamesAccepted
    Status:                True
    Type:                  Established
  Stored Versions:
    v1beta1
Events:  <none>

Name:         kafkas.platform.confluent.io
Namespace:    
Labels:       <none>
Annotations:  controller-gen.kubebuilder.io/version: v0.9.2
API Version:  apiextensions.k8s.io/v1
Kind:         CustomResourceDefinition
Metadata:
  Creation Timestamp:  2023-09-27T08:08:14Z
  Generation:          1
  Resource Version:    584546
  UID:                 b1c9266c-9e5c-499c-bd4f-313b4800fdd0
Spec:
  Conversion:
    Strategy:  None
  Group:       platform.confluent.io
  Names:
    Categories:
      all
      confluent-platform
      confluent
    Kind:       Kafka
    List Kind:  KafkaList
    Plural:     kafkas
    Short Names:
      kafka
      broker
    Singular:  kafka
  Scope:       Namespaced
  Versions:
    Additional Printer Columns:
      Json Path:  .status.replicas
      Name:       Replicas
      Type:       string
      Json Path:  .status.readyReplicas
      Name:       Ready
      Type:       string
      Json Path:  .status.phase
      Name:       Status
      Type:       string
      Json Path:  .metadata.creationTimestamp
      Name:       Age
      Type:       date
      Json Path:  .status.zookeeperConnect
      Name:       Zookeeper
      Priority:   1
      Type:       string
    Name:         v1beta1
    Schema:
      openAPIV3Schema:
        Description:  Kafka is the schema for the Kafka API.
        Properties:
          API Version:
            Description:  APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            Type:         string
          Kind:
            Description:  Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            Type:         string
          Metadata:
            Type:  object
          Spec:
            Description:  spec defines the desired state of the Kafka cluster.
            Properties:
              Authorization:
                Description:  authorization specifies the authorization configuration.
                Properties:
                  Super Users:
                    Description:  superUsers specify the super users to give the admin privilege on the Kafka Cluster. This list takes the format as `User:<user-name>`
                    Items:
                      Type:  string
                    Type:    array
                  Type:
                    Description:  type specifies the authorization type. The valid options are `rbac` and `simple`.
                    Enum:
                      rbac
                      simple
                    Type:  string
                Required:
                  type
                Type:  object
              Config Overrides:
                Description:  configOverrides specifies the configs to override the server, JVM, Log4j properties for the Kafka cluster.
                Properties:
                  Jvm:
                    Description:  jvm is a list of JVM configuration supported by the Confluent Platform component. This will either add or update the existing configuration.
                    Items:
                      Type:  string
                    Type:    array
                  log4j:
                    Description:  log4j is a list of Log4J configuration supported by the Confluent Platform component. This will either add or update the existing configuration.
                    Items:
                      Type:  string
                    Type:    array
                  Server:
                    Description:  server is a list of server configuration supported by the Confluent Platform component. This will either add or update existing configuration.
                    Items:
                      Type:  string
                    Type:    array
                Type:        object
              Data Volume Capacity:
                Any Of:
                  Type:                              integer
                  Type:                              string
                Description:                         dataVolumeCapacity specifies the persistent volume capacity for the Kafka cluster.
                Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                X - Kubernetes - Int - Or - String:  true
              Dependencies:
                Description:  dependencies specify the Kafka dependencies, such as Zookeeper and centralized MDS.
                Properties:
                  K Raft Controller:
                    Description:  kRaftController specifies the dependency configuration for the KRaftController cluster. You cannot configure both zookeeper and kRaftController dependencies.
                    Properties:
                      Cluster Ref:
                        Description:  clusterRef specifies the name of the KRaft Controller cluster.
                        Properties:
                          Name:
                            Description:  name specifies the name of the Confluent Platform component cluster.
                            Type:         string
                          Namespace:
                            Description:  namespace specifies the namespace where the Confluent Platform component cluster is running.
                            Type:         string
                        Required:
                          name
                        Type:  object
                      Controller Listener:
                        Description:  controllerListener specifies the controller listener which must match the controller listener on the referenced KRaft Controller cluster.
                        Properties:
                          Authentication:
                            Description:  authentication specifies the authentication configuration for the listener.
                            Properties:
                              Jaas Config:
                                Description:  jaasConfig specifies the JaaS configuration. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Properties:
                                  Secret Ref:
                                    Description:  secretRef references the secret containing the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Required:
                                  secretRef
                                Type:  object
                              Jaas Config Pass Through:
                                Description:  jaasConfigPassThrough specifies another way to provide JaaS configuration. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Properties:
                                  Directory Path In Container:
                                    Description:  directoryPathInContainer specifies the directory path in the container where required credentials are mounted. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                    Min Length:   1
                                    Type:         string
                                  Secret Ref:
                                    Description:  secretRef references the secret containing the required credentials for authentication. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Type:             object
                              Principal Mapping Rules:
                                Items:
                                  Type:  string
                                Type:    array
                              Type:
                                Description:  type specifies the Kafka or Zookeeper authentication type. Valid options are `plain`, `digest`, `mtls`, and `ldap`.
                                Enum:
                                  plain
                                  digest
                                  mtls
                                  ldap
                                Type:  string
                            Required:
                              type
                            Type:  object
                          Tls:
                            Description:  tls specifies the TLS configuration for the listener.
                            Properties:
                              Directory Path In Container:
                                Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                                Min Length:   1
                                Type:         string
                              Enabled:
                                Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                                Type:         boolean
                              Ignore Trust Store Config:
                                Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                                Type:         boolean
                              Jks Password:
                                Description:  jksPassword references the secret containing the JKS password.
                                Properties:
                                  Secret Ref:
                                    Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Required:
                                  secretRef
                                Type:  object
                              Secret Ref:
                                Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              enabled
                            Type:  object
                        Type:      object
                    Type:          object
                  Kafka Rest:
                    Description:  kafkaRest provides the REST client configuration for the MDS when RBAC is enabled.
                    Properties:
                      Authentication:
                        Description:  authentication specifies the Kafka authentication for Kafka REST API or MDS.
                        Properties:
                          Bearer:
                            Description:  bearer is the authentication mechanism to provide principals. Only supported in RBAC deployment. Required when authentication type is set to `bearer`. This field will be deprecated, please configure oauthbearer instead.
                            Properties:
                              Directory Path In Container:
                                Description:  directoryPathInContainer specifies the directory path in the container where the credential is mounted.
                                Min Length:   1
                                Type:         string
                              Secret Ref:
                                Description:  secretRef specifies the name of the secret that contains the credential. More info: https://docs.confluent.io/operator/current/co-authenticate.html#bearer-authentication
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Type:             object
                          Jaas Config:
                            Description:  jaasConfig specifies the Kafka client-side JaaS configuration.
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the secret containing the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Jaas Config Pass Through:
                            Description:  jaasConfigPassThrough specifies another way to provide the Kafka client-side JaaS configuration.
                            Properties:
                              Directory Path In Container:
                                Description:  directoryPathInContainer specifies the directory path in the container where required credentials are mounted. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Min Length:   1
                                Type:         string
                              Secret Ref:
                                Description:  secretRef references the secret containing the required credentials for authentication. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Type:             object
                          Oauthbearer:
                            Description:  oauthbearer is the authentication mechanism to provide principals. Only supported in RBAC deployment. Required when authentication type is set to `oauthbearer`.
                            Properties:
                              Directory Path In Container:
                                Description:  directoryPathInContainer specifies the directory path in the container where the credential is mounted.
                                Min Length:   1
                                Type:         string
                              Secret Ref:
                                Description:  secretRef specifies the name of the secret that contains the credential. More info: https://docs.confluent.io/operator/current/co-authenticate.html#bearer-authentication
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Type:             object
                          Type:
                            Description:  type specifies the Kafka client authentication type. Valid options are `plain`, `oauthbearer`, `bearer`, and `mtls`.
                            Enum:
                              plain
                              oauthbearer
                              bearer
                              mtls
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Bootstrap Endpoint:
                        Description:  bootstrapEndpoint specifies Kafka bootstrap endpoint for the admin REST API. It is not needed when RBAC is enabled. If not configured, then default to the replication listener endpoint.
                        Min Length:   1
                        Pattern:      .+:[0-9]+
                        Type:         string
                      Endpoint:
                        Description:  endpoint specifies the custom MDS http|s endpoint. Not required to configure in most of the scenarios.
                        Min Length:   1
                        Pattern:      ^https?://.*
                        Type:         string
                      Tls:
                        Description:  tls specifies the client-side TLS configuration to connect to the Kafka REST API.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                            Min Length:   1
                            Type:         string
                          Enabled:
                            Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                            Type:         boolean
                          Ignore Trust Store Config:
                            Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                            Type:         boolean
                          Jks Password:
                            Description:  jksPassword references the secret containing the JKS password.
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Secret Ref:
                            Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          enabled
                        Type:  object
                    Type:      object
                  Mds:
                    Description:  mds specifies the dependency configuration for the primary MDS.
                    Properties:
                      Endpoint:
                        Description:  endpoint defines the primary Kafka cluster boostrap endpoint.
                        Min Length:   1
                        Pattern:      ^https?://.*
                        Type:         string
                      Kafka:
                        Description:  kafka specifies the dependency configuration for Kafka cluster.
                        Properties:
                          Authentication:
                            Description:  authentication defines the authentication for the Kafka cluster.
                            Properties:
                              Jaas Config:
                                Description:  jaasConfig specifies the Kafka client-side JaaS configuration.
                                Properties:
                                  Secret Ref:
                                    Description:  secretRef references the secret containing the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Required:
                                  secretRef
                                Type:  object
                              Jaas Config Pass Through:
                                Description:  jaasConfigPassThrough specifies another way to provide the Kafka client-side JaaS configuration.
                                Properties:
                                  Directory Path In Container:
                                    Description:  directoryPathInContainer specifies the directory path in the container where required credentials are mounted. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                    Min Length:   1
                                    Type:         string
                                  Secret Ref:
                                    Description:  secretRef references the secret containing the required credentials for authentication. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Type:             object
                              Oauthbearer:
                                Description:  oauthbearer is the authentication mechanism to provider principals. Only supported in RBAC deployment.
                                Properties:
                                  Directory Path In Container:
                                    Description:  directoryPathInContainer specifies the directory path in the container where the credential is mounted.
                                    Min Length:   1
                                    Type:         string
                                  Secret Ref:
                                    Description:  secretRef specifies the name of the secret that contains the credential. More info: https://docs.confluent.io/operator/current/co-authenticate.html#bearer-authentication
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Type:             object
                              Type:
                                Description:  type specifies the Kafka client authentication type. Valid options are `plain`, `oauthbearer`, `digest`, and `mtls`.
                                Enum:
                                  plain
                                  oauthbearer
                                  digest
                                  mtls
                                Type:  string
                            Required:
                              type
                            Type:  object
                          Bootstrap Endpoint:
                            Description:  bootstrapEndpoint specifies the Kafka bootstrap endpoint.
                            Min Length:   1
                            Pattern:      .+:[0-9]+
                            Type:         string
                          Discovery:
                            Description:  discovery specifies the capability to discover the Kafka cluster.
                            Properties:
                              Name:
                                Description:  name is the name of the Confluent Platform component cluster.
                                Type:         string
                              Namespace:
                                Description:  namespace is where the Confluent Platform component is running. The default value is the namespace where CFK is running.
                                Type:         string
                              Secret Ref:
                                Description:  secretRef is the name of the secret used to discover the Confluent Platform component.
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              name
                            Type:  object
                          Tls:
                            Description:  tls defines the client-side TLS setting for the Kafka cluster.
                            Properties:
                              Directory Path In Container:
                                Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                                Min Length:   1
                                Type:         string
                              Enabled:
                                Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                                Type:         boolean
                              Ignore Trust Store Config:
                                Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                                Type:         boolean
                              Jks Password:
                                Description:  jksPassword references the secret containing the JKS password.
                                Properties:
                                  Secret Ref:
                                    Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Required:
                                  secretRef
                                Type:  object
                              Secret Ref:
                                Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              enabled
                            Type:  object
                        Type:      object
                      Tls:
                        Description:  tls specifies the TLS configuration for the primary MDS.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                            Min Length:   1
                            Type:         string
                          Enabled:
                            Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                            Type:         boolean
                          Ignore Trust Store Config:
                            Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                            Type:         boolean
                          Jks Password:
                            Description:  jksPassword references the secret containing the JKS password.
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Secret Ref:
                            Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          enabled
                        Type:  object
                      Token Key Pair:
                        Description:  tokenKeyPair specifies the token key pair for the MDS.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer defines the directory path in the container where the MDS token key pair are mounted.
                            Min Length:   1
                            Type:         string
                          Encrypted Token Key:
                            Description:  EncryptedTokenKey boolean value indicating whether the tokenKeypair(private used for signing) is encrypted using a passphrase. If true, cfk operator will look for a file named mdsTokenKeyPassphrase.txt containing key value pair mdsTokenKeyPassphrase=<passphrase>. Relevant only for mds server. Ignored if set for a client configuration.
                            Type:         boolean
                          Secret Ref:
                            Description:  secretRef references the name of the secret that contains the MDS token key pair.
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Type:             object
                    Required:
                      endpoint
                      kafka
                      tokenKeyPair
                    Type:  object
                  Schema Registry:
                    Description:  schemaRegistry specifies the dependency configuration for the Schema Registry cluster.
                    Properties:
                      Authentication:
                        Description:  authentication specifies the authentication for the Schema Registry cluster.
                        Properties:
                          Basic:
                            Description:  basic specifies the configuration for basic authentication.
                            Properties:
                              Debug:
                                Description:  debug enables the basic authentication debug logs for JaaS configuration.
                                Type:         boolean
                              Directory Path In Container:
                                Description:  directoryPathInContainer allows to pass the basic credential through a directory path in the container. More info: https://docs.confluent.io/operator/current/co-authenticate.html#basic-authentication
                                Min Length:   1
                                Type:         string
                              Restricted Roles:
                                Description:  restrictedRoles specify the restricted roles on the server side only. Changes will be only reflected in Control Center. This configuration is ignored on the client side configuration.
                                Items:
                                  Type:     string
                                Min Items:  1
                                Type:       array
                              Roles:
                                Description:  roles specify the roles on the server side only. This configuration is ignored on the client side configuration.
                                Items:
                                  Type:  string
                                Type:    array
                              Secret Ref:
                                Description:  secretRef defines secret reference to pass the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html#basic-authentication
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Type:             object
                          Type:
                            Description:  type specifies the authentication scheme for the REST API client. Valid options are `basic` and `mtls`.
                            Enum:
                              basic
                              mtls
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Tls:
                        Description:  tls defines the client-side TLS setting for the Schema Registry cluster.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                            Min Length:   1
                            Type:         string
                          Enabled:
                            Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                            Type:         boolean
                          Ignore Trust Store Config:
                            Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                            Type:         boolean
                          Jks Password:
                            Description:  jksPassword references the secret containing the JKS password.
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Secret Ref:
                            Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          enabled
                        Type:  object
                      URL:
                        Description:  url specifies the URL endpoint of the Schema Registry cluster.
                        Min Length:   1
                        Pattern:      ^https?://.*
                        Type:         string
                    Required:
                      url
                    Type:  object
                  Zookeeper:
                    Description:  zookeeper specifies the dependency configuration for Zookeeper. You cannot configure both zookeeper and kRaftController dependencies.
                    Properties:
                      Authentication:
                        Description:  authentication specifies the client side authentication configuration of Zookeeper for Kafka cluster.
                        Properties:
                          Jaas Config:
                            Description:  jaasConfig specifies the Kafka client-side JaaS configuration.
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the secret containing the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Jaas Config Pass Through:
                            Description:  jaasConfigPassThrough specifies another way to provide the Kafka client-side JaaS configuration.
                            Properties:
                              Directory Path In Container:
                                Description:  directoryPathInContainer specifies the directory path in the container where required credentials are mounted. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Min Length:   1
                                Type:         string
                              Secret Ref:
                                Description:  secretRef references the secret containing the required credentials for authentication. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Type:             object
                          Oauthbearer:
                            Description:  oauthbearer is the authentication mechanism to provider principals. Only supported in RBAC deployment.
                            Properties:
                              Directory Path In Container:
                                Description:  directoryPathInContainer specifies the directory path in the container where the credential is mounted.
                                Min Length:   1
                                Type:         string
                              Secret Ref:
                                Description:  secretRef specifies the name of the secret that contains the credential. More info: https://docs.confluent.io/operator/current/co-authenticate.html#bearer-authentication
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Type:             object
                          Type:
                            Description:  type specifies the Kafka client authentication type. Valid options are `plain`, `oauthbearer`, `digest`, and `mtls`.
                            Enum:
                              plain
                              oauthbearer
                              digest
                              mtls
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Discovery:
                        Description:  discovery specifies the capability to discover the Zookeeper cluster.
                        Properties:
                          Name:
                            Description:  name is the name of the Confluent Platform component cluster.
                            Type:         string
                          Namespace:
                            Description:  namespace is where the Confluent Platform component is running. The default value is the namespace where CFK is running.
                            Type:         string
                          Secret Ref:
                            Description:  secretRef is the name of the secret used to discover the Confluent Platform component.
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          name
                        Type:  object
                      Endpoint:
                        Description:  endpoint specifies the Zookeeper endpoint.
                        Min Length:   1
                        Pattern:      .+:[0-9]+
                        Type:         string
                      Tls:
                        Description:  tls specifies the TLS configuration of Zookeeper for Kafka cluster.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                            Min Length:   1
                            Type:         string
                          Enabled:
                            Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                            Type:         boolean
                          Ignore Trust Store Config:
                            Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                            Type:         boolean
                          Jks Password:
                            Description:  jksPassword references the secret containing the JKS password.
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Secret Ref:
                            Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          enabled
                        Type:  object
                    Type:      object
                Type:          object
              Fips:
                Description:  fips specifies the configuration of FIPS compliant Bouncy Castle type Java Keystores for the Kafka cluster's TLS settings. TLS Secrets must have the keys keystore.bcfks, truststore.bcfks, and jksPassword.txt
                Properties:
                  Enabled:
                    Description:  enabled specifies whether to enable the FIPS configuration for Kafka.
                    Type:         boolean
                Required:
                  enabled
                Type:  object
              Headless Service:
                Description:  headlessService specifies the configuration of the Kubernetes headless service.
                Properties:
                  Annotations:
                    Additional Properties:
                      Type:                       string
                    Description:                  annotations is a map of string key and value pairs. It specifies the annotations to be added to the CFK-created headless service. These annotations are merged with the injectAnnotations and take precedence.
                    Type:                         object
                    X - Kubernetes - Map - Type:  granular
                  Labels:
                    Additional Properties:
                      Type:                       string
                    Description:                  labels is a map of string key and value pairs. It specifies the labels to be added to the CFK-created headless service. These labels are merged with the injectLabels and take precedence.
                    Type:                         object
                    X - Kubernetes - Map - Type:  granular
                  Publish Not Ready Addresses:
                    Description:  publishNotReadyAddresses specifies the publishNotReadyAddresses field. For Kafka, this value must be true. The default value is true.
                    Type:         boolean
                Type:             object
              Identity Provider:
                Description:  identityProvider specifies the identity provider configuration. It is only required for the Kafka authentication type `ldap`. When the MDS is enabled, this property is ignored, and the LDAP configuration in `spec.services.mds.provider` will be used.
                Properties:
                  Ldap:
                    Description:  ldap defines the LDAP service configuration.
                    Properties:
                      Address:
                        Description:  address defines the LDAP server address.
                        Type:         string
                      Authentication:
                        Description:  LdapAuthentication specifies the LDAP authentication configuration.
                        Properties:
                          Simple:
                            Description:  simple specifies simple authentication configuration for the LDAP.
                            Properties:
                              Directory Path In Container:
                                Description:  directoryPathInContainer defines the directory path in the container where the credentials are mounted.
                                Min Length:   1
                                Type:         string
                              Secret Ref:
                                Description:  secretRef references the name of the secret that contains the credentials.
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Type:             object
                          Type:
                            Description:  type defines the authentication method for LDAP. Valid options are `simple` and `mtls`.
                            Enum:
                              simple
                              mtls
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Configurations:
                        Description:  configurations defines the LDAP configurations for Confluent RBAC.
                        Properties:
                          Group Member Attribute:
                            Description:  groupMemberAttribute specifies the LDAP group member attribute.
                            Min Length:   1
                            Type:         string
                          Group Member Attribute Pattern:
                            Description:  groupMemberAttributePattern specifies the regular expression pattern for the LDAP group member attribute.
                            Min Length:   1
                            Type:         string
                          Group Name Attribute:
                            Description:  groupNameAttribute specifies the LDAP group name attribute.
                            Min Length:   1
                            Type:         string
                          Group Object Class:
                            Description:  groupObjectClass specifies the LDAP group object class.
                            Min Length:   1
                            Type:         string
                          Group Search Base:
                            Description:  groupSearchBase specifies the LDAP search base for the group-based search.
                            Min Length:   1
                            Type:         string
                          Group Search Filter:
                            Description:  groupSearchFilter specifies the LDAP search filter for the group-based search.
                            Min Length:   1
                            Type:         string
                          Group Search Scope:
                            Description:  groupSearchScope specifies the LDAP search scope for the group-based search.
                            Format:       int32
                            Type:         integer
                          User Member Of Attribute Pattern:
                            Description:  userMemberOfAttributePattern specifies the regular expression pattern for the LDAP user member attribute.
                            Min Length:   1
                            Type:         string
                          User Name Attribute:
                            Description:  userNameAttribute specifies the LDAP username attribute.
                            Min Length:   1
                            Type:         string
                          User Object Class:
                            Description:  userObjectClass specifies the LDAP user object class.
                            Min Length:   1
                            Type:         string
                          User Search Base:
                            Description:  userSearchBase specifies the LDAP search base for the user-based search.
                            Min Length:   1
                            Type:         string
                          User Search Filter:
                            Description:  userSearchFilter specifies the LDAP search filter for the user-based search.
                            Min Length:   1
                            Type:         string
                          User Search Scope:
                            Description:  userSearchScope specifies the LDAP search scope for the user-based search.
                            Format:       int32
                            Type:         integer
                        Type:             object
                      Tls:
                        Description:  tls specifies the TLS configuration for the LDAP.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                            Min Length:   1
                            Type:         string
                          Enabled:
                            Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                            Type:         boolean
                          Ignore Trust Store Config:
                            Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                            Type:         boolean
                          Jks Password:
                            Description:  jksPassword references the secret containing the JKS password.
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Secret Ref:
                            Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          enabled
                        Type:  object
                    Required:
                      address
                      authentication
                      configurations
                    Type:  object
                  Oidc:
                    Description:  oidc defines the OIDC service configuration.
                    Properties:
                      Client Credentials:
                        Description:  clientCredentials define the IDP clientID and clientSecret.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer defines the directory path in the container where the credentials are mounted.
                            Min Length:   1
                            Type:         string
                          Secret Ref:
                            Description:  secretRef references the name of the secret that contains the credentials.
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Type:             object
                      Configurations:
                        Description:  configurations defines the OIDC configurations.
                        Properties:
                          Authorize Base Endpoint Uri:
                            Description:  authorizeBaseEndpointUri specifies the base uri for authorize endpoint.
                            Min Length:   1
                            Type:         string
                          Groups Claim Name:
                            Description:  groupsClaimName specifies the name of claim in token for identifying the groups of subject in the JWT payload.
                            Min Length:   1
                            Type:         string
                          Groups Claim Scope:
                            Description:  groupsClaimScope specifies additional scope needed for the token to contain groups claim (field). Leave this field empty (or null) if id token always contains the claims identified as groups.
                            Min Length:   1
                            Type:         string
                          Issuer:
                            Description:  issuer specifies the authorization server's URL. This value should match the issuer claim ("iss") in id tokens issued by Authorization Server?
                            Min Length:   1
                            Type:         string
                          Jwks Endpoint Uri:
                            Description:  jwksEndpointUri specifies the uri for the JSON Web Key Set (JWKS). It is used to get set of keys containing the public keys used to verify any JWT issued by the IdP's Authorization Server.
                            Min Length:   1
                            Type:         string
                          Refresh Token:
                            Description:  refreshToken specifies whether offline_access scope should be requested in the authorization URI.
                            Type:         boolean
                          Session Max Timeout:
                            Description:  sessionMaxTimeout specifies the maximum expiration time for a user's session.
                            Format:       int32
                            Type:         integer
                          Session Token Expiry:
                            Description:  sessionTokenExpiry specifies the validity of cookie issued by Confluent.
                            Format:       int32
                            Type:         integer
                          Sub Claim Name:
                            Description:  subClaimName specifies name of claim in JWT to use for the subject.
                            Min Length:   1
                            Type:         string
                          Token Base Endpoint Uri:
                            Description:  tokenBaseEndpointUri specifies the base uri for token endpoint.
                            Min Length:   1
                            Type:         string
                        Required:
                          authorizeBaseEndpointUri
                          issuer
                          jwksEndpointUri
                          refreshToken
                          tokenBaseEndpointUri
                        Type:  object
                    Required:
                      clientCredentials
                      configurations
                    Type:  object
                  Type:
                    Description:  This field has been deprecated and its value will be ignored if set.
                    Type:         string
                Required:
                  ldap
                Type:  object
              Image:
                Description:  image specifies the application and the init docker image configurations. A change to this setting will roll the cluster.
                Properties:
                  Application:
                    Description:  application is the Docker image name of the application. Specify `<Docker-registry FQDN>/<docker-repository-name>/<component-image-name>:<tag>`.
                    Pattern:      .+:.+
                    Type:         string
                  Init:
                    Description:  init is the init-container name. Specify `<Docker-registry FQDN>/<docker-repository-name>/<init-container-image-name>:<tag>`.
                    Pattern:      .+:.+
                    Type:         string
                  Pull Policy:
                    Description:  pullPolicy is the policy for pulling images. Valid options are `Always`, `Never`, and `IfNotPresent`. The default value is `IfNotPresent`.
                    Enum:
                      Always
                      Never
                      IfNotPresent
                    Type:  string
                  Pull Secret Ref:
                    Description:  pullSecretRef references the secrets in the same namespace to be used for pulling images. Image pull secrets are distinct from secrets because secrets can be mounted in the pod, but image pull secrets are only accessed by `kubelet`. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
                    Items:
                      Type:  string
                    Type:    array
                Required:
                  application
                  init
                Type:  object
              Inject Annotations:
                Additional Properties:
                  Type:                       string
                Description:                  injectAnnotations are the annotations injected to the internal resources that CFK created. The internal annotations are preserved and cannot be overridden. For pod annotations, use `podTemplate.annotations`.
                Type:                         object
                X - Kubernetes - Map - Type:  granular
              Inject Labels:
                Additional Properties:
                  Type:                       string
                Description:                  injectLabels are the labels injected to the internal resources that CFK created. The internal labels are preserved and cannot be overridden. For pod labels, use `podTemplate.labels`.
                Type:                         object
                X - Kubernetes - Map - Type:  granular
              k8sClusterDomain:
                Description:  k8sClusterDomain specifies the configuration of the Kubernetes cluster domain. The default is the `cluster.local` domain.
                Type:         string
              License:
                Description:  license specifies the license configuration for the Confluent Platform component.
                Properties:
                  Directory Path In Container:
                    Description:  directoryPathInContainer specifies the directory path in the container where the license key is mounted. More info: https://docs.confluent.io/operator/current/co-license.html#update-component-level-licenses
                    Min Length:   1
                    Type:         string
                  Global License:
                    Description:  globalLicense specifies whether the Confluent Platform component shares the common global license.
                    Type:         boolean
                  Secret Ref:
                    Description:  secretRef references the secret that provides the license for the Confluent Platform component. More info: https://docs.confluent.io/operator/current/co-license.html#update-component-level-licenses
                    Max Length:   30
                    Min Length:   1
                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    Type:         string
                Type:             object
              Listeners:
                Description:  listeners specify the listeners configurations.
                Properties:
                  Custom:
                    Description:  custom defines the list of KafkaCustomListener.
                    Items:
                      Description:  KafkaCustomListener defines the Kafka custom listener.
                      Properties:
                        Authentication:
                          Description:  authentication specifies the authentication configuration for the listener.
                          Properties:
                            Jaas Config:
                              Description:  jaasConfig specifies the JaaS configuration. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                              Properties:
                                Secret Ref:
                                  Description:  secretRef references the secret containing the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                  Max Length:   30
                                  Min Length:   1
                                  Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  Type:         string
                              Required:
                                secretRef
                              Type:  object
                            Jaas Config Pass Through:
                              Description:  jaasConfigPassThrough specifies another way to provide JaaS configuration. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                              Properties:
                                Directory Path In Container:
                                  Description:  directoryPathInContainer specifies the directory path in the container where required credentials are mounted. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                  Min Length:   1
                                  Type:         string
                                Secret Ref:
                                  Description:  secretRef references the secret containing the required credentials for authentication. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                  Max Length:   30
                                  Min Length:   1
                                  Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  Type:         string
                              Type:             object
                            Principal Mapping Rules:
                              Items:
                                Type:  string
                              Type:    array
                            Type:
                              Description:  type specifies the Kafka or Zookeeper authentication type. Valid options are `plain`, `digest`, `mtls`, and `ldap`.
                              Enum:
                                plain
                                digest
                                mtls
                                ldap
                              Type:  string
                          Required:
                            type
                          Type:  object
                        External Access:
                          Description:  externalAccess defines the external access configuration for the Kafka cluster.
                          Properties:
                            Load Balancer:
                              Description:  loadBalancer specifies the configuration to create Kubernetes load balancer services.
                              Properties:
                                Advertised Port:
                                  Description:  advertisedPort specifies the advertised port for Kafka external access. If not configured, it will be the same as the listener port. Information about the advertised port can be retrieved through the status API.
                                  Format:       int32
                                  Type:         integer
                                Annotations:
                                  Additional Properties:
                                    Type:                       string
                                  Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  granular
                                Bootstrap Prefix:
                                  Description:  bootstrapPrefix specifies the prefix for the Kafka bootstrap advertised endpoint and will be added as `bootstrapPrefix.domain`. The default value is the Kafka cluster name.
                                  Min Length:   1
                                  Type:         string
                                Broker Prefix:
                                  Description:  brokerPrefix specifies the prefix for the Kafka broker advertised endpoint and will be added as `brokerPrefix.domain`. The default value is `b`, such as `b#.domain` where `#` starts from `0` to the replicas count.
                                  Min Length:   1
                                  Type:         string
                                Domain:
                                  Description:  domain is the domain name of the component cluster.
                                  Min Length:   1
                                  Type:         string
                                External Traffic Policy:
                                  Description:  externalTrafficPolicy specifies the external traffic policy for the service. Valid options are `Local` and `Cluster`.
                                  Enum:
                                    Local
                                    Cluster
                                  Type:  string
                                Labels:
                                  Additional Properties:
                                    Type:                       string
                                  Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  granular
                                Load Balancer Source Ranges:
                                  Description:  loadBalancerSourceRanges specify the source ranges.
                                  Items:
                                    Type:  string
                                  Type:    array
                                Service Ports:
                                  Description:  servicePorts specify the user-provided service port(s).
                                  Items:
                                    Description:  ServicePort contains information on service's port.
                                    Properties:
                                      App Protocol:
                                        Description:  The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                                        Type:         string
                                      Name:
                                        Description:  The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                                        Type:         string
                                      Node Port:
                                        Description:  The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                                        Format:       int32
                                        Type:         integer
                                      Port:
                                        Description:  The port that will be exposed by this service.
                                        Format:       int32
                                        Type:         integer
                                      Protocol:
                                        Default:      TCP
                                        Description:  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                                        Type:         string
                                      Target Port:
                                        Any Of:
                                          Type:                              integer
                                          Type:                              string
                                        Description:                         Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                                        X - Kubernetes - Int - Or - String:  true
                                    Required:
                                      port
                                    Type:  object
                                  Type:    array
                                Session Affinity:
                                  Description:  sessionAffinity defines the Kubernetes session affinity. The valid options are `ClientIP` and `None`. `ClientIP` enables the client IP-based session affinity. The default value is `None`. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies.
                                  Enum:
                                    ClientIP
                                    None
                                  Type:  string
                                Session Affinity Config:
                                  Description:  SessionAffinityConfig contains the configurations of the session affinity.
                                  Properties:
                                    Client IP:
                                      Description:  clientIP contains the configurations of Client IP based session affinity.
                                      Properties:
                                        Timeout Seconds:
                                          Description:  timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                                          Format:       int32
                                          Type:         integer
                                      Type:             object
                                  Type:                 object
                              Required:
                                domain
                              Type:  object
                            Node Port:
                              Description:  nodePort specifies the configuration to create Kubernetes node port services.
                              Properties:
                                Advertised URL:
                                  Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to `<httpSchema>://<host>:<nodePortOffset + podId + 1>, where`podId` starts from `0` to `replicaCount - 1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster.
                                  Properties:
                                    Enabled:
                                      Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                                      Type:         boolean
                                    Prefix:
                                      Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                                      Min Length:   1
                                      Type:         string
                                  Required:
                                    enabled
                                  Type:  object
                                Annotations:
                                  Additional Properties:
                                    Type:                       string
                                  Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  granular
                                External Traffic Policy:
                                  Description:  externalTrafficPolicy specifies the external traffic policy for the service. Valid options are `Local` and `Cluster`.
                                  Enum:
                                    Local
                                    Cluster
                                  Type:  string
                                Host:
                                  Description:  host defines the host name of the cluster.
                                  Min Length:   1
                                  Type:         string
                                Labels:
                                  Additional Properties:
                                    Type:                       string
                                  Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  granular
                                Node Port Offset:
                                  Description:  nodePortOffset specifies the starting offset of the node ports. The port numbers go in ascending order with respect to the replicas count. NodePort service creation fails if the node port is not in the range supported by the Kubernetes API server. The default Kubernetes Node Port range is `30000` - `32762`.
                                  Format:       int32
                                  Minimum:      0
                                  Type:         integer
                                Service Ports:
                                  Description:  servicePorts specify user-provided service port(s). For Kafka with the nodePort type, this setting is only applied to Kafka bootstrap service.
                                  Items:
                                    Description:  ServicePort contains information on service's port.
                                    Properties:
                                      App Protocol:
                                        Description:  The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                                        Type:         string
                                      Name:
                                        Description:  The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                                        Type:         string
                                      Node Port:
                                        Description:  The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                                        Format:       int32
                                        Type:         integer
                                      Port:
                                        Description:  The port that will be exposed by this service.
                                        Format:       int32
                                        Type:         integer
                                      Protocol:
                                        Default:      TCP
                                        Description:  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                                        Type:         string
                                      Target Port:
                                        Any Of:
                                          Type:                              integer
                                          Type:                              string
                                        Description:                         Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                                        X - Kubernetes - Int - Or - String:  true
                                    Required:
                                      port
                                    Type:  object
                                  Type:    array
                                Session Affinity:
                                  Description:  sessionAffinity defines the Kubernetes session affinity. The valid options are `ClientIP` and `None`. `ClientIP` enables the client IP-based session affinity. The default value is `None`. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies.
                                  Enum:
                                    ClientIP
                                    None
                                  Type:  string
                                Session Affinity Config:
                                  Description:  SessionAffinityConfig contains the configurations of the session affinity.
                                  Properties:
                                    Client IP:
                                      Description:  clientIP contains the configurations of Client IP based session affinity.
                                      Properties:
                                        Timeout Seconds:
                                          Description:  timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                                          Format:       int32
                                          Type:         integer
                                      Type:             object
                                  Type:                 object
                              Required:
                                host
                                nodePortOffset
                              Type:  object
                            Route:
                              Description:  route specifies the configuration to create route services in OpenShift.
                              Properties:
                                Annotations:
                                  Additional Properties:
                                    Type:                       string
                                  Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  granular
                                Bootstrap Prefix:
                                  Description:  bootstrapPrefix specifies the prefix for the Kafka bootstrap advertised endpoint and will be added as `bootstrapPrefix.domain`. The default value is the Kafka cluster name.
                                  Min Length:   1
                                  Type:         string
                                Broker Prefix:
                                  Description:  brokerPrefix specifies the prefix for the Kafka broker advertised endpoint and will be added as `brokerPrefix.domain`. The default value is `b`, such as `b#.domain` where `#` starts from `0` to the replicas count.
                                  Min Length:   1
                                  Type:         string
                                Domain:
                                  Description:  domain specifies the domain name of the Confluent component cluster.
                                  Min Length:   1
                                  Type:         string
                                Labels:
                                  Additional Properties:
                                    Type:                       string
                                  Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  granular
                                Wildcard Policy:
                                  Description:  wildcardPolicy allows you to define a route that covers all hosts within a domain. Valid options are `Subdomain` and `None`. The default value is `None`.
                                  Enum:
                                    Subdomain
                                    None
                                  Type:  string
                              Required:
                                domain
                              Type:  object
                            Static For Host Based Routing:
                              Description:  staticForHostBasedRouting enables external access by doing host based routing through the SNI capability. With this schema, CFK only configures Kafka advertised listeners, and no Kubernetes external service is created.
                              Properties:
                                Broker Prefix:
                                  Description:  brokerPrefix specifies the prefix for the broker advertised endpoints and are added as `brokerPrefix.domain`. If not configured, it will add `b` as a prefix, such as `b#.domain` where `#` will start from `0` to the replicas count.
                                  Min Length:   1
                                  Type:         string
                                Domain:
                                  Description:  domain specifies the domain name for the Kafka cluster.
                                  Min Length:   1
                                  Type:         string
                                Port:
                                  Description:  port specifies the port to be used in the advertised listener for a broker.
                                  Format:       int32
                                  Type:         integer
                              Required:
                                domain
                                port
                              Type:  object
                            Static For Port Based Routing:
                              Description:  staticForPortBasedRouting enables external access by port routing. With this schema, CFK only configures Kafka advertised listeners, and no Kubernetes external service is created.
                              Properties:
                                Host:
                                  Description:  host defines the host name to be used in the advertised listener for a broker.
                                  Min Length:   1
                                  Type:         string
                                Port Offset:
                                  Description:  portOffset specifies the starting port number. The port numbers go in ascending order with respect to the replicas count.
                                  Format:       int32
                                  Type:         integer
                              Required:
                                host
                                portOffset
                              Type:  object
                            Type:
                              Description:  type specifies the Kubernetes service for external access. Valid options are `loadBalancer`, `nodePort`, `route`, `staticForPortBasedRouting`, and `staticForHostBasedRouting`.
                              Enum:
                                loadBalancer
                                nodePort
                                route
                                staticForPortBasedRouting
                                staticForHostBasedRouting
                              Type:  string
                          Required:
                            type
                          Type:  object
                        Name:
                          Description:  name specifies the name of the custom listener. `internal`, `external`, and `token` are reserved by CFK and can't be used for this property.
                          Max Length:   30
                          Min Length:   1
                          Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          Type:         string
                        Port:
                          Description:  port binds the given port to the custom listener. Port numbers lower than `9093` are reserved by CFK.
                          Format:       int32
                          Minimum:      9093
                          Type:         integer
                        Tls:
                          Description:  tls specifies the TLS configuration for the listener.
                          Properties:
                            Directory Path In Container:
                              Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                              Min Length:   1
                              Type:         string
                            Enabled:
                              Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                              Type:         boolean
                            Ignore Trust Store Config:
                              Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                              Type:         boolean
                            Jks Password:
                              Description:  jksPassword references the secret containing the JKS password.
                              Properties:
                                Secret Ref:
                                  Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                  Max Length:   30
                                  Min Length:   1
                                  Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  Type:         string
                              Required:
                                secretRef
                              Type:  object
                            Secret Ref:
                              Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                              Max Length:   30
                              Min Length:   1
                              Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              Type:         string
                          Required:
                            enabled
                          Type:  object
                      Required:
                        name
                        port
                      Type:  object
                    Type:    array
                  External:
                    Description:  external specifies the Kafka external listener.
                    Properties:
                      Authentication:
                        Description:  authentication specifies the authentication configuration for the listener.
                        Properties:
                          Jaas Config:
                            Description:  jaasConfig specifies the JaaS configuration. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the secret containing the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Jaas Config Pass Through:
                            Description:  jaasConfigPassThrough specifies another way to provide JaaS configuration. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                            Properties:
                              Directory Path In Container:
                                Description:  directoryPathInContainer specifies the directory path in the container where required credentials are mounted. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Min Length:   1
                                Type:         string
                              Secret Ref:
                                Description:  secretRef references the secret containing the required credentials for authentication. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Type:             object
                          Principal Mapping Rules:
                            Items:
                              Type:  string
                            Type:    array
                          Type:
                            Description:  type specifies the Kafka or Zookeeper authentication type. Valid options are `plain`, `digest`, `mtls`, and `ldap`.
                            Enum:
                              plain
                              digest
                              mtls
                              ldap
                            Type:  string
                        Required:
                          type
                        Type:  object
                      External Access:
                        Description:  externalAccess defines the external access configuration for the Kafka cluster.
                        Properties:
                          Load Balancer:
                            Description:  loadBalancer specifies the configuration to create Kubernetes load balancer services.
                            Properties:
                              Advertised Port:
                                Description:  advertisedPort specifies the advertised port for Kafka external access. If not configured, it will be the same as the listener port. Information about the advertised port can be retrieved through the status API.
                                Format:       int32
                                Type:         integer
                              Annotations:
                                Additional Properties:
                                  Type:                       string
                                Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Bootstrap Prefix:
                                Description:  bootstrapPrefix specifies the prefix for the Kafka bootstrap advertised endpoint and will be added as `bootstrapPrefix.domain`. The default value is the Kafka cluster name.
                                Min Length:   1
                                Type:         string
                              Broker Prefix:
                                Description:  brokerPrefix specifies the prefix for the Kafka broker advertised endpoint and will be added as `brokerPrefix.domain`. The default value is `b`, such as `b#.domain` where `#` starts from `0` to the replicas count.
                                Min Length:   1
                                Type:         string
                              Domain:
                                Description:  domain is the domain name of the component cluster.
                                Min Length:   1
                                Type:         string
                              External Traffic Policy:
                                Description:  externalTrafficPolicy specifies the external traffic policy for the service. Valid options are `Local` and `Cluster`.
                                Enum:
                                  Local
                                  Cluster
                                Type:  string
                              Labels:
                                Additional Properties:
                                  Type:                       string
                                Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Load Balancer Source Ranges:
                                Description:  loadBalancerSourceRanges specify the source ranges.
                                Items:
                                  Type:  string
                                Type:    array
                              Service Ports:
                                Description:  servicePorts specify the user-provided service port(s).
                                Items:
                                  Description:  ServicePort contains information on service's port.
                                  Properties:
                                    App Protocol:
                                      Description:  The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                                      Type:         string
                                    Name:
                                      Description:  The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                                      Type:         string
                                    Node Port:
                                      Description:  The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                                      Format:       int32
                                      Type:         integer
                                    Port:
                                      Description:  The port that will be exposed by this service.
                                      Format:       int32
                                      Type:         integer
                                    Protocol:
                                      Default:      TCP
                                      Description:  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                                      Type:         string
                                    Target Port:
                                      Any Of:
                                        Type:                              integer
                                        Type:                              string
                                      Description:                         Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                                      X - Kubernetes - Int - Or - String:  true
                                  Required:
                                    port
                                  Type:  object
                                Type:    array
                              Session Affinity:
                                Description:  sessionAffinity defines the Kubernetes session affinity. The valid options are `ClientIP` and `None`. `ClientIP` enables the client IP-based session affinity. The default value is `None`. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies.
                                Enum:
                                  ClientIP
                                  None
                                Type:  string
                              Session Affinity Config:
                                Description:  SessionAffinityConfig contains the configurations of the session affinity.
                                Properties:
                                  Client IP:
                                    Description:  clientIP contains the configurations of Client IP based session affinity.
                                    Properties:
                                      Timeout Seconds:
                                        Description:  timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                                        Format:       int32
                                        Type:         integer
                                    Type:             object
                                Type:                 object
                            Required:
                              domain
                            Type:  object
                          Node Port:
                            Description:  nodePort specifies the configuration to create Kubernetes node port services.
                            Properties:
                              Advertised URL:
                                Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to `<httpSchema>://<host>:<nodePortOffset + podId + 1>, where`podId` starts from `0` to `replicaCount - 1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster.
                                Properties:
                                  Enabled:
                                    Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                                    Type:         boolean
                                  Prefix:
                                    Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                                    Min Length:   1
                                    Type:         string
                                Required:
                                  enabled
                                Type:  object
                              Annotations:
                                Additional Properties:
                                  Type:                       string
                                Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              External Traffic Policy:
                                Description:  externalTrafficPolicy specifies the external traffic policy for the service. Valid options are `Local` and `Cluster`.
                                Enum:
                                  Local
                                  Cluster
                                Type:  string
                              Host:
                                Description:  host defines the host name of the cluster.
                                Min Length:   1
                                Type:         string
                              Labels:
                                Additional Properties:
                                  Type:                       string
                                Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Node Port Offset:
                                Description:  nodePortOffset specifies the starting offset of the node ports. The port numbers go in ascending order with respect to the replicas count. NodePort service creation fails if the node port is not in the range supported by the Kubernetes API server. The default Kubernetes Node Port range is `30000` - `32762`.
                                Format:       int32
                                Minimum:      0
                                Type:         integer
                              Service Ports:
                                Description:  servicePorts specify user-provided service port(s). For Kafka with the nodePort type, this setting is only applied to Kafka bootstrap service.
                                Items:
                                  Description:  ServicePort contains information on service's port.
                                  Properties:
                                    App Protocol:
                                      Description:  The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                                      Type:         string
                                    Name:
                                      Description:  The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                                      Type:         string
                                    Node Port:
                                      Description:  The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                                      Format:       int32
                                      Type:         integer
                                    Port:
                                      Description:  The port that will be exposed by this service.
                                      Format:       int32
                                      Type:         integer
                                    Protocol:
                                      Default:      TCP
                                      Description:  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                                      Type:         string
                                    Target Port:
                                      Any Of:
                                        Type:                              integer
                                        Type:                              string
                                      Description:                         Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                                      X - Kubernetes - Int - Or - String:  true
                                  Required:
                                    port
                                  Type:  object
                                Type:    array
                              Session Affinity:
                                Description:  sessionAffinity defines the Kubernetes session affinity. The valid options are `ClientIP` and `None`. `ClientIP` enables the client IP-based session affinity. The default value is `None`. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies.
                                Enum:
                                  ClientIP
                                  None
                                Type:  string
                              Session Affinity Config:
                                Description:  SessionAffinityConfig contains the configurations of the session affinity.
                                Properties:
                                  Client IP:
                                    Description:  clientIP contains the configurations of Client IP based session affinity.
                                    Properties:
                                      Timeout Seconds:
                                        Description:  timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                                        Format:       int32
                                        Type:         integer
                                    Type:             object
                                Type:                 object
                            Required:
                              host
                              nodePortOffset
                            Type:  object
                          Route:
                            Description:  route specifies the configuration to create route services in OpenShift.
                            Properties:
                              Annotations:
                                Additional Properties:
                                  Type:                       string
                                Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Bootstrap Prefix:
                                Description:  bootstrapPrefix specifies the prefix for the Kafka bootstrap advertised endpoint and will be added as `bootstrapPrefix.domain`. The default value is the Kafka cluster name.
                                Min Length:   1
                                Type:         string
                              Broker Prefix:
                                Description:  brokerPrefix specifies the prefix for the Kafka broker advertised endpoint and will be added as `brokerPrefix.domain`. The default value is `b`, such as `b#.domain` where `#` starts from `0` to the replicas count.
                                Min Length:   1
                                Type:         string
                              Domain:
                                Description:  domain specifies the domain name of the Confluent component cluster.
                                Min Length:   1
                                Type:         string
                              Labels:
                                Additional Properties:
                                  Type:                       string
                                Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Wildcard Policy:
                                Description:  wildcardPolicy allows you to define a route that covers all hosts within a domain. Valid options are `Subdomain` and `None`. The default value is `None`.
                                Enum:
                                  Subdomain
                                  None
                                Type:  string
                            Required:
                              domain
                            Type:  object
                          Static For Host Based Routing:
                            Description:  staticForHostBasedRouting enables external access by doing host based routing through the SNI capability. With this schema, CFK only configures Kafka advertised listeners, and no Kubernetes external service is created.
                            Properties:
                              Broker Prefix:
                                Description:  brokerPrefix specifies the prefix for the broker advertised endpoints and are added as `brokerPrefix.domain`. If not configured, it will add `b` as a prefix, such as `b#.domain` where `#` will start from `0` to the replicas count.
                                Min Length:   1
                                Type:         string
                              Domain:
                                Description:  domain specifies the domain name for the Kafka cluster.
                                Min Length:   1
                                Type:         string
                              Port:
                                Description:  port specifies the port to be used in the advertised listener for a broker.
                                Format:       int32
                                Type:         integer
                            Required:
                              domain
                              port
                            Type:  object
                          Static For Port Based Routing:
                            Description:  staticForPortBasedRouting enables external access by port routing. With this schema, CFK only configures Kafka advertised listeners, and no Kubernetes external service is created.
                            Properties:
                              Host:
                                Description:  host defines the host name to be used in the advertised listener for a broker.
                                Min Length:   1
                                Type:         string
                              Port Offset:
                                Description:  portOffset specifies the starting port number. The port numbers go in ascending order with respect to the replicas count.
                                Format:       int32
                                Type:         integer
                            Required:
                              host
                              portOffset
                            Type:  object
                          Type:
                            Description:  type specifies the Kubernetes service for external access. Valid options are `loadBalancer`, `nodePort`, `route`, `staticForPortBasedRouting`, and `staticForHostBasedRouting`.
                            Enum:
                              loadBalancer
                              nodePort
                              route
                              staticForPortBasedRouting
                              staticForHostBasedRouting
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Tls:
                        Description:  tls specifies the TLS configuration for the listener.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                            Min Length:   1
                            Type:         string
                          Enabled:
                            Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                            Type:         boolean
                          Ignore Trust Store Config:
                            Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                            Type:         boolean
                          Jks Password:
                            Description:  jksPassword references the secret containing the JKS password.
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Secret Ref:
                            Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          enabled
                        Type:  object
                    Type:      object
                  Internal:
                    Description:  internal specifies the internal listener.
                    Properties:
                      Authentication:
                        Description:  authentication specifies the authentication configuration for the listener.
                        Properties:
                          Jaas Config:
                            Description:  jaasConfig specifies the JaaS configuration. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the secret containing the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Jaas Config Pass Through:
                            Description:  jaasConfigPassThrough specifies another way to provide JaaS configuration. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                            Properties:
                              Directory Path In Container:
                                Description:  directoryPathInContainer specifies the directory path in the container where required credentials are mounted. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Min Length:   1
                                Type:         string
                              Secret Ref:
                                Description:  secretRef references the secret containing the required credentials for authentication. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Type:             object
                          Principal Mapping Rules:
                            Items:
                              Type:  string
                            Type:    array
                          Type:
                            Description:  type specifies the Kafka or Zookeeper authentication type. Valid options are `plain`, `digest`, `mtls`, and `ldap`.
                            Enum:
                              plain
                              digest
                              mtls
                              ldap
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Tls:
                        Description:  tls specifies the TLS configuration for the listener.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                            Min Length:   1
                            Type:         string
                          Enabled:
                            Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                            Type:         boolean
                          Ignore Trust Store Config:
                            Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                            Type:         boolean
                          Jks Password:
                            Description:  jksPassword references the secret containing the JKS password.
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Secret Ref:
                            Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          enabled
                        Type:  object
                    Type:      object
                  Replication:
                    Description:  replication specifies the Kafka replication listener.
                    Properties:
                      Authentication:
                        Description:  authentication specifies the authentication configuration for the listener.
                        Properties:
                          Jaas Config:
                            Description:  jaasConfig specifies the JaaS configuration. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the secret containing the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Jaas Config Pass Through:
                            Description:  jaasConfigPassThrough specifies another way to provide JaaS configuration. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                            Properties:
                              Directory Path In Container:
                                Description:  directoryPathInContainer specifies the directory path in the container where required credentials are mounted. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Min Length:   1
                                Type:         string
                              Secret Ref:
                                Description:  secretRef references the secret containing the required credentials for authentication. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Type:             object
                          Principal Mapping Rules:
                            Items:
                              Type:  string
                            Type:    array
                          Type:
                            Description:  type specifies the Kafka or Zookeeper authentication type. Valid options are `plain`, `digest`, `mtls`, and `ldap`.
                            Enum:
                              plain
                              digest
                              mtls
                              ldap
                            Type:  string
                        Required:
                          type
                        Type:  object
                      External Access:
                        Description:  externalAccess defines the external access configuration for the Kafka cluster.
                        Properties:
                          Load Balancer:
                            Description:  loadBalancer specifies the configuration to create Kubernetes load balancer services.
                            Properties:
                              Advertised Port:
                                Description:  advertisedPort specifies the advertised port for Kafka external access. If not configured, it will be the same as the listener port. Information about the advertised port can be retrieved through the status API.
                                Format:       int32
                                Type:         integer
                              Annotations:
                                Additional Properties:
                                  Type:                       string
                                Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Bootstrap Prefix:
                                Description:  bootstrapPrefix specifies the prefix for the Kafka bootstrap advertised endpoint and will be added as `bootstrapPrefix.domain`. The default value is the Kafka cluster name.
                                Min Length:   1
                                Type:         string
                              Broker Prefix:
                                Description:  brokerPrefix specifies the prefix for the Kafka broker advertised endpoint and will be added as `brokerPrefix.domain`. The default value is `b`, such as `b#.domain` where `#` starts from `0` to the replicas count.
                                Min Length:   1
                                Type:         string
                              Domain:
                                Description:  domain is the domain name of the component cluster.
                                Min Length:   1
                                Type:         string
                              External Traffic Policy:
                                Description:  externalTrafficPolicy specifies the external traffic policy for the service. Valid options are `Local` and `Cluster`.
                                Enum:
                                  Local
                                  Cluster
                                Type:  string
                              Labels:
                                Additional Properties:
                                  Type:                       string
                                Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Load Balancer Source Ranges:
                                Description:  loadBalancerSourceRanges specify the source ranges.
                                Items:
                                  Type:  string
                                Type:    array
                              Service Ports:
                                Description:  servicePorts specify the user-provided service port(s).
                                Items:
                                  Description:  ServicePort contains information on service's port.
                                  Properties:
                                    App Protocol:
                                      Description:  The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                                      Type:         string
                                    Name:
                                      Description:  The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                                      Type:         string
                                    Node Port:
                                      Description:  The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                                      Format:       int32
                                      Type:         integer
                                    Port:
                                      Description:  The port that will be exposed by this service.
                                      Format:       int32
                                      Type:         integer
                                    Protocol:
                                      Default:      TCP
                                      Description:  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                                      Type:         string
                                    Target Port:
                                      Any Of:
                                        Type:                              integer
                                        Type:                              string
                                      Description:                         Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                                      X - Kubernetes - Int - Or - String:  true
                                  Required:
                                    port
                                  Type:  object
                                Type:    array
                              Session Affinity:
                                Description:  sessionAffinity defines the Kubernetes session affinity. The valid options are `ClientIP` and `None`. `ClientIP` enables the client IP-based session affinity. The default value is `None`. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies.
                                Enum:
                                  ClientIP
                                  None
                                Type:  string
                              Session Affinity Config:
                                Description:  SessionAffinityConfig contains the configurations of the session affinity.
                                Properties:
                                  Client IP:
                                    Description:  clientIP contains the configurations of Client IP based session affinity.
                                    Properties:
                                      Timeout Seconds:
                                        Description:  timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                                        Format:       int32
                                        Type:         integer
                                    Type:             object
                                Type:                 object
                            Required:
                              domain
                            Type:  object
                          Node Port:
                            Description:  nodePort specifies the configuration to create Kubernetes node port services.
                            Properties:
                              Advertised URL:
                                Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to `<httpSchema>://<host>:<nodePortOffset + podId + 1>, where`podId` starts from `0` to `replicaCount - 1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster.
                                Properties:
                                  Enabled:
                                    Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                                    Type:         boolean
                                  Prefix:
                                    Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                                    Min Length:   1
                                    Type:         string
                                Required:
                                  enabled
                                Type:  object
                              Annotations:
                                Additional Properties:
                                  Type:                       string
                                Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              External Traffic Policy:
                                Description:  externalTrafficPolicy specifies the external traffic policy for the service. Valid options are `Local` and `Cluster`.
                                Enum:
                                  Local
                                  Cluster
                                Type:  string
                              Host:
                                Description:  host defines the host name of the cluster.
                                Min Length:   1
                                Type:         string
                              Labels:
                                Additional Properties:
                                  Type:                       string
                                Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Node Port Offset:
                                Description:  nodePortOffset specifies the starting offset of the node ports. The port numbers go in ascending order with respect to the replicas count. NodePort service creation fails if the node port is not in the range supported by the Kubernetes API server. The default Kubernetes Node Port range is `30000` - `32762`.
                                Format:       int32
                                Minimum:      0
                                Type:         integer
                              Service Ports:
                                Description:  servicePorts specify user-provided service port(s). For Kafka with the nodePort type, this setting is only applied to Kafka bootstrap service.
                                Items:
                                  Description:  ServicePort contains information on service's port.
                                  Properties:
                                    App Protocol:
                                      Description:  The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                                      Type:         string
                                    Name:
                                      Description:  The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                                      Type:         string
                                    Node Port:
                                      Description:  The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                                      Format:       int32
                                      Type:         integer
                                    Port:
                                      Description:  The port that will be exposed by this service.
                                      Format:       int32
                                      Type:         integer
                                    Protocol:
                                      Default:      TCP
                                      Description:  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                                      Type:         string
                                    Target Port:
                                      Any Of:
                                        Type:                              integer
                                        Type:                              string
                                      Description:                         Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                                      X - Kubernetes - Int - Or - String:  true
                                  Required:
                                    port
                                  Type:  object
                                Type:    array
                              Session Affinity:
                                Description:  sessionAffinity defines the Kubernetes session affinity. The valid options are `ClientIP` and `None`. `ClientIP` enables the client IP-based session affinity. The default value is `None`. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies.
                                Enum:
                                  ClientIP
                                  None
                                Type:  string
                              Session Affinity Config:
                                Description:  SessionAffinityConfig contains the configurations of the session affinity.
                                Properties:
                                  Client IP:
                                    Description:  clientIP contains the configurations of Client IP based session affinity.
                                    Properties:
                                      Timeout Seconds:
                                        Description:  timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                                        Format:       int32
                                        Type:         integer
                                    Type:             object
                                Type:                 object
                            Required:
                              host
                              nodePortOffset
                            Type:  object
                          Route:
                            Description:  route specifies the configuration to create route services in OpenShift.
                            Properties:
                              Annotations:
                                Additional Properties:
                                  Type:                       string
                                Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Bootstrap Prefix:
                                Description:  bootstrapPrefix specifies the prefix for the Kafka bootstrap advertised endpoint and will be added as `bootstrapPrefix.domain`. The default value is the Kafka cluster name.
                                Min Length:   1
                                Type:         string
                              Broker Prefix:
                                Description:  brokerPrefix specifies the prefix for the Kafka broker advertised endpoint and will be added as `brokerPrefix.domain`. The default value is `b`, such as `b#.domain` where `#` starts from `0` to the replicas count.
                                Min Length:   1
                                Type:         string
                              Domain:
                                Description:  domain specifies the domain name of the Confluent component cluster.
                                Min Length:   1
                                Type:         string
                              Labels:
                                Additional Properties:
                                  Type:                       string
                                Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Wildcard Policy:
                                Description:  wildcardPolicy allows you to define a route that covers all hosts within a domain. Valid options are `Subdomain` and `None`. The default value is `None`.
                                Enum:
                                  Subdomain
                                  None
                                Type:  string
                            Required:
                              domain
                            Type:  object
                          Static For Host Based Routing:
                            Description:  staticForHostBasedRouting enables external access by doing host based routing through the SNI capability. With this schema, CFK only configures Kafka advertised listeners, and no Kubernetes external service is created.
                            Properties:
                              Broker Prefix:
                                Description:  brokerPrefix specifies the prefix for the broker advertised endpoints and are added as `brokerPrefix.domain`. If not configured, it will add `b` as a prefix, such as `b#.domain` where `#` will start from `0` to the replicas count.
                                Min Length:   1
                                Type:         string
                              Domain:
                                Description:  domain specifies the domain name for the Kafka cluster.
                                Min Length:   1
                                Type:         string
                              Port:
                                Description:  port specifies the port to be used in the advertised listener for a broker.
                                Format:       int32
                                Type:         integer
                            Required:
                              domain
                              port
                            Type:  object
                          Static For Port Based Routing:
                            Description:  staticForPortBasedRouting enables external access by port routing. With this schema, CFK only configures Kafka advertised listeners, and no Kubernetes external service is created.
                            Properties:
                              Host:
                                Description:  host defines the host name to be used in the advertised listener for a broker.
                                Min Length:   1
                                Type:         string
                              Port Offset:
                                Description:  portOffset specifies the starting port number. The port numbers go in ascending order with respect to the replicas count.
                                Format:       int32
                                Type:         integer
                            Required:
                              host
                              portOffset
                            Type:  object
                          Type:
                            Description:  type specifies the Kubernetes service for external access. Valid options are `loadBalancer`, `nodePort`, `route`, `staticForPortBasedRouting`, and `staticForHostBasedRouting`.
                            Enum:
                              loadBalancer
                              nodePort
                              route
                              staticForPortBasedRouting
                              staticForHostBasedRouting
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Tls:
                        Description:  tls specifies the TLS configuration for the listener.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                            Min Length:   1
                            Type:         string
                          Enabled:
                            Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                            Type:         boolean
                          Ignore Trust Store Config:
                            Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                            Type:         boolean
                          Jks Password:
                            Description:  jksPassword references the secret containing the JKS password.
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Secret Ref:
                            Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          enabled
                        Type:  object
                    Type:      object
                Type:          object
              Metric Reporter:
                Description:  metricsReporter specifies the configuration of the metric reporter. The metric reporter is enabled by default. If authentication and TLS are not set, the metrics reporter uses internal listener's authentication and TLS .
                Properties:
                  Authentication:
                    Description:  authentication specifies the Kafka client-side authentication configuration.
                    Properties:
                      Jaas Config:
                        Description:  jaasConfig specifies the Kafka client-side JaaS configuration.
                        Properties:
                          Secret Ref:
                            Description:  secretRef references the secret containing the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          secretRef
                        Type:  object
                      Jaas Config Pass Through:
                        Description:  jaasConfigPassThrough specifies another way to provide the Kafka client-side JaaS configuration.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where required credentials are mounted. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                            Min Length:   1
                            Type:         string
                          Secret Ref:
                            Description:  secretRef references the secret containing the required credentials for authentication. More info: https://docs.confluent.io/operator/current/co-authenticate.html
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Type:             object
                      Oauthbearer:
                        Description:  oauthbearer is the authentication mechanism to provider principals. Only supported in RBAC deployment.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where the credential is mounted.
                            Min Length:   1
                            Type:         string
                          Secret Ref:
                            Description:  secretRef specifies the name of the secret that contains the credential. More info: https://docs.confluent.io/operator/current/co-authenticate.html#bearer-authentication
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Type:             object
                      Type:
                        Description:  type specifies the Kafka client authentication type. Valid options are `plain`, `oauthbearer`, `digest`, and `mtls`.
                        Enum:
                          plain
                          oauthbearer
                          digest
                          mtls
                        Type:  string
                    Required:
                      type
                    Type:  object
                  Bootstrap Endpoint:
                    Description:  bootstrapEndpoint specifies the Kafka bootstrap endpoint.
                    Type:         string
                  Enabled:
                    Description:  enabled specifies whether to enable or disable the metric reporter.
                    Type:         boolean
                  Replication Factor:
                    Description:  replicationFactor specifies the number of replicas in the metric topic.
                    Format:       int32
                    Type:         integer
                  Tls:
                    Description:  tls specifies the Kafka client-side TLS configuration.
                    Properties:
                      Directory Path In Container:
                        Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                        Min Length:   1
                        Type:         string
                      Enabled:
                        Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                        Type:         boolean
                      Ignore Trust Store Config:
                        Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                        Type:         boolean
                      Jks Password:
                        Description:  jksPassword references the secret containing the JKS password.
                        Properties:
                          Secret Ref:
                            Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          secretRef
                        Type:  object
                      Secret Ref:
                        Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                        Max Length:   30
                        Min Length:   1
                        Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        Type:         string
                    Required:
                      enabled
                    Type:  object
                Required:
                  enabled
                Type:  object
              Metrics:
                Description:  metrics specify the security settings for the metric services.
                Properties:
                  Authentication:
                    Description:  authentication specifies the authentication configuration for the metrics.
                    Properties:
                      Type:
                        Description:  type specifies the metrics authentication method. The valid option is `mtls`.
                        Enum:
                          mtls
                        Type:  string
                    Required:
                      type
                    Type:  object
                  Prometheus:
                    Description:  prometheus specifies the configuration overrides for the JMX-Prometheus exporter.
                    Properties:
                      Blacklist:
                        Items:
                          Type:  string
                        Type:    array
                      Rules:
                        Items:
                          Description:  Rule defines the Prometheus Exporter rule override.
                          Properties:
                            Attr Name Snake Case:
                              Type:  boolean
                            Cache:
                              Type:  boolean
                            Help:
                              Min Length:  1
                              Type:        string
                            Labels:
                              Additional Properties:
                                Type:                       string
                              Type:                         object
                              X - Kubernetes - Map - Type:  granular
                            Name:
                              Min Length:  1
                              Type:        string
                            Pattern:
                              Min Length:  1
                              Type:        string
                            Type:
                              Min Length:  1
                              Type:        string
                            Value:
                              Min Length:  1
                              Type:        string
                            Value Factor:
                              Any Of:
                                Type:                              integer
                                Type:                              string
                              Default:                             1
                              Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              X - Kubernetes - Int - Or - String:  true
                          Type:                                    object
                        Type:                                      array
                      Whitelist:
                        Items:
                          Type:  string
                        Type:    array
                    Type:        object
                  Tls:
                    Description:  tls specifies the TLS configuration for the metrics.
                    Properties:
                      Directory Path In Container:
                        Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                        Min Length:   1
                        Type:         string
                      Enabled:
                        Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                        Type:         boolean
                      Ignore Trust Store Config:
                        Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                        Type:         boolean
                      Jks Password:
                        Description:  jksPassword references the secret containing the JKS password.
                        Properties:
                          Secret Ref:
                            Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          secretRef
                        Type:  object
                      Secret Ref:
                        Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                        Max Length:   30
                        Min Length:   1
                        Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        Type:         string
                    Required:
                      enabled
                    Type:  object
                Type:      object
              Mounted Secrets:
                Description:  mountedSecrets list the secrets injected to the underlying statefulset configuration. The secret reference is mounted in the default path `/mnt/secrets/<secret-name>`. The underlying resources will follow the secret as a file configuration. More info: https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-files-from-a-pod. A change to this setting will roll the cluster.
                Items:
                  Description:  MountedSecrets provides a way to inject a custom secret to the underlying statefulset.
                  Properties:
                    Key Items:
                      Description:  keyItems are key and path names.
                      Items:
                        Description:  Maps a string key to a path within a volume.
                        Properties:
                          Key:
                            Description:  The key to project.
                            Type:         string
                          Mode:
                            Description:  Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                            Format:       int32
                            Type:         integer
                          Path:
                            Description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                            Type:         string
                        Required:
                          key
                          path
                        Type:  object
                      Type:    array
                    Secret Ref:
                      Description:  secretRef references the name of the secret.
                      Max Length:   30
                      Min Length:   1
                      Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      Type:         string
                  Required:
                    secretRef
                  Type:  object
                Type:    array
              Mounted Volumes:
                Description:  mountedVolumes list the custom volumes that need to be mounted into the underlying statefulset. A change to this setting will roll the cluster.
                Properties:
                  Volume Mounts:
                    Description:  volumeMounts specify the list of volume mounts for the pods in the statefulset.
                    Items:
                      Description:  VolumeMount describes a mounting of a Volume within a container.
                      Properties:
                        Mount Path:
                          Description:  Path within the container at which the volume should be mounted.  Must not contain ':'.
                          Type:         string
                        Mount Propagation:
                          Description:  mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                          Type:         string
                        Name:
                          Description:  This must match the Name of a Volume.
                          Type:         string
                        Read Only:
                          Description:  Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                          Type:         boolean
                        Sub Path:
                          Description:  Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                          Type:         string
                        Sub Path Expr:
                          Description:  Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                          Type:         string
                      Required:
                        mountPath
                        name
                      Type:  object
                    Type:    array
                  Volumes:
                    Description:  volumes specify the list of volumes that can be mounted into the pods of statefulset.
                    Items:
                      Description:  Volume represents a named volume in a pod that may be accessed by any container in the pod.
                      Properties:
                        Aws Elastic Block Store:
                          Description:  AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                          Properties:
                            Fs Type:
                              Description:  Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
                              Type:         string
                            Partition:
                              Description:  The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                              Format:       int32
                              Type:         integer
                            Read Only:
                              Description:  Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              Type:         boolean
                            Volume ID:
                              Description:  Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              Type:         string
                          Required:
                            volumeID
                          Type:  object
                        Azure Disk:
                          Description:  AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                          Properties:
                            Caching Mode:
                              Description:  Host Caching mode: None, Read Only, Read Write.
                              Type:         string
                            Disk Name:
                              Description:  The Name of the data disk in the blob storage
                              Type:         string
                            Disk URI:
                              Description:  The URI the data disk in the blob storage
                              Type:         string
                            Fs Type:
                              Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              Type:         string
                            Kind:
                              Description:  Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
                              Type:         string
                            Read Only:
                              Description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              Type:         boolean
                          Required:
                            diskName
                            diskURI
                          Type:  object
                        Azure File:
                          Description:  AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
                          Properties:
                            Read Only:
                              Description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              Type:         boolean
                            Secret Name:
                              Description:  the name of secret that contains Azure Storage Account Name and Key
                              Type:         string
                            Share Name:
                              Description:  Share Name
                              Type:         string
                          Required:
                            secretName
                            shareName
                          Type:  object
                        Cephfs:
                          Description:  CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
                          Properties:
                            Monitors:
                              Description:  Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              Items:
                                Type:  string
                              Type:    array
                            Path:
                              Description:  Optional: Used as the mounted root, rather than the full Ceph tree, default is /
                              Type:         string
                            Read Only:
                              Description:  Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              Type:         boolean
                            Secret File:
                              Description:  Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              Type:         string
                            Secret Ref:
                              Description:  Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              Properties:
                                Name:
                                  Description:              Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:                     string
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            User:
                              Description:  Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              Type:         string
                          Required:
                            monitors
                          Type:  object
                        Cinder:
                          Description:  Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                          Properties:
                            Fs Type:
                              Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              Type:         string
                            Read Only:
                              Description:  Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              Type:         boolean
                            Secret Ref:
                              Description:  Optional: points to a secret object containing parameters used to connect to OpenStack.
                              Properties:
                                Name:
                                  Description:              Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:                     string
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            Volume ID:
                              Description:  volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              Type:         string
                          Required:
                            volumeID
                          Type:  object
                        Config Map:
                          Description:  ConfigMap represents a configMap that should populate this volume
                          Properties:
                            Default Mode:
                              Description:  Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                              Format:       int32
                              Type:         integer
                            Items:
                              Description:  If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                              Items:
                                Description:  Maps a string key to a path within a volume.
                                Properties:
                                  Key:
                                    Description:  The key to project.
                                    Type:         string
                                  Mode:
                                    Description:  Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                    Format:       int32
                                    Type:         integer
                                  Path:
                                    Description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                    Type:         string
                                Required:
                                  key
                                  path
                                Type:  object
                              Type:    array
                            Name:
                              Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                              Type:         string
                            Optional:
                              Description:              Specify whether the ConfigMap or its keys must be defined
                              Type:                     boolean
                          Type:                         object
                          X - Kubernetes - Map - Type:  atomic
                        Csi:
                          Description:  CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
                          Properties:
                            Driver:
                              Description:  Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
                              Type:         string
                            Fs Type:
                              Description:  Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
                              Type:         string
                            Node Publish Secret Ref:
                              Description:  NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
                              Properties:
                                Name:
                                  Description:              Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:                     string
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            Read Only:
                              Description:  Specifies a read-only configuration for the volume. Defaults to false (read/write).
                              Type:         boolean
                            Volume Attributes:
                              Additional Properties:
                                Type:       string
                              Description:  VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
                              Type:         object
                          Required:
                            driver
                          Type:  object
                        Downward API:
                          Description:  DownwardAPI represents downward API about the pod that should populate this volume
                          Properties:
                            Default Mode:
                              Description:  Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                              Format:       int32
                              Type:         integer
                            Items:
                              Description:  Items is a list of downward API volume file
                              Items:
                                Description:  DownwardAPIVolumeFile represents information to create the file containing the pod field
                                Properties:
                                  Field Ref:
                                    Description:  Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
                                    Properties:
                                      API Version:
                                        Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                        Type:         string
                                      Field Path:
                                        Description:  Path of the field to select in the specified API version.
                                        Type:         string
                                    Required:
                                      fieldPath
                                    Type:                         object
                                    X - Kubernetes - Map - Type:  atomic
                                  Mode:
                                    Description:  Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                    Format:       int32
                                    Type:         integer
                                  Path:
                                    Description:  Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
                                    Type:         string
                                  Resource Field Ref:
                                    Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                    Properties:
                                      Container Name:
                                        Description:  Container name: required for volumes, optional for env vars
                                        Type:         string
                                      Divisor:
                                        Any Of:
                                          Type:                              integer
                                          Type:                              string
                                        Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                        Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        X - Kubernetes - Int - Or - String:  true
                                      Resource:
                                        Description:  Required: resource to select
                                        Type:         string
                                    Required:
                                      resource
                                    Type:                         object
                                    X - Kubernetes - Map - Type:  atomic
                                Required:
                                  path
                                Type:  object
                              Type:    array
                          Type:        object
                        Empty Dir:
                          Description:  EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          Properties:
                            Medium:
                              Description:  What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                              Type:         string
                            Size Limit:
                              Any Of:
                                Type:                              integer
                                Type:                              string
                              Description:                         Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
                              Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              X - Kubernetes - Int - Or - String:  true
                          Type:                                    object
                        Ephemeral:
                          Description:  Ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed. 
 Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through a PersistentVolumeClaim (see EphemeralVolumeSource for more information on the connection between this volume type and PersistentVolumeClaim). 
 Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod. 
 Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information. 
 A pod can use both types of ephemeral volumes and persistent volumes at the same time.
                          Properties:
                            Volume Claim Template:
                              Description:  Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long). 
 An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. 
 This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. 
 Required, must not be nil.
                              Properties:
                                Metadata:
                                  Description:  May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
                                  Type:         object
                                Spec:
                                  Description:  The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.
                                  Properties:
                                    Access Modes:
                                      Description:  AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                      Items:
                                        Type:  string
                                      Type:    array
                                    Data Source:
                                      Description:  This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.
                                      Properties:
                                        API Group:
                                          Description:  APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                          Type:         string
                                        Kind:
                                          Description:  Kind is the type of resource being referenced
                                          Type:         string
                                        Name:
                                          Description:  Name is the name of resource being referenced
                                          Type:         string
                                      Required:
                                        kind
                                        name
                                      Type:                         object
                                      X - Kubernetes - Map - Type:  atomic
                                    Data Source Ref:
                                      Description:  Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Alpha) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                      Properties:
                                        API Group:
                                          Description:  APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                          Type:         string
                                        Kind:
                                          Description:  Kind is the type of resource being referenced
                                          Type:         string
                                        Name:
                                          Description:  Name is the name of resource being referenced
                                          Type:         string
                                      Required:
                                        kind
                                        name
                                      Type:                         object
                                      X - Kubernetes - Map - Type:  atomic
                                    Resources:
                                      Description:  Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                      Properties:
                                        Limits:
                                          Additional Properties:
                                            Any Of:
                                              Type:                              integer
                                              Type:                              string
                                            Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            X - Kubernetes - Int - Or - String:  true
                                          Description:                           Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          Type:                                  object
                                        Requests:
                                          Additional Properties:
                                            Any Of:
                                              Type:                              integer
                                              Type:                              string
                                            Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            X - Kubernetes - Int - Or - String:  true
                                          Description:                           Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          Type:                                  object
                                      Type:                                      object
                                    Selector:
                                      Description:  A label query over volumes to consider for binding.
                                      Properties:
                                        Match Expressions:
                                          Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          Items:
                                            Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  key is the label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                Type:         string
                                              Values:
                                                Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                        Match Labels:
                                          Additional Properties:
                                            Type:                   string
                                          Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          Type:                     object
                                      Type:                         object
                                      X - Kubernetes - Map - Type:  atomic
                                    Storage Class Name:
                                      Description:  Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                      Type:         string
                                    Volume Mode:
                                      Description:  volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                                      Type:         string
                                    Volume Name:
                                      Description:  VolumeName is the binding reference to the PersistentVolume backing this claim.
                                      Type:         string
                                  Type:             object
                              Required:
                                spec
                              Type:  object
                          Type:      object
                        Fc:
                          Description:  FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
                          Properties:
                            Fs Type:
                              Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
                              Type:         string
                            Lun:
                              Description:  Optional: FC target lun number
                              Format:       int32
                              Type:         integer
                            Read Only:
                              Description:  Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              Type:         boolean
                            Target WW Ns:
                              Description:  Optional: FC target worldwide names (WWNs)
                              Items:
                                Type:  string
                              Type:    array
                            Wwids:
                              Description:  Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                              Items:
                                Type:  string
                              Type:    array
                          Type:        object
                        Flex Volume:
                          Description:  FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
                          Properties:
                            Driver:
                              Description:  Driver is the name of the driver to use for this volume.
                              Type:         string
                            Fs Type:
                              Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                              Type:         string
                            Options:
                              Additional Properties:
                                Type:       string
                              Description:  Optional: Extra command options if any.
                              Type:         object
                            Read Only:
                              Description:  Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              Type:         boolean
                            Secret Ref:
                              Description:  Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
                              Properties:
                                Name:
                                  Description:              Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:                     string
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                          Required:
                            driver
                          Type:  object
                        Flocker:
                          Description:  Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
                          Properties:
                            Dataset Name:
                              Description:  Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
                              Type:         string
                            Dataset UUID:
                              Description:  UUID of the dataset. This is unique identifier of a Flocker dataset
                              Type:         string
                          Type:             object
                        Gce Persistent Disk:
                          Description:  GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                          Properties:
                            Fs Type:
                              Description:  Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
                              Type:         string
                            Partition:
                              Description:  The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              Format:       int32
                              Type:         integer
                            Pd Name:
                              Description:  Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              Type:         string
                            Read Only:
                              Description:  ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              Type:         boolean
                          Required:
                            pdName
                          Type:  object
                        Git Repo:
                          Description:  GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
                          Properties:
                            Directory:
                              Description:  Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
                              Type:         string
                            Repository:
                              Description:  Repository URL
                              Type:         string
                            Revision:
                              Description:  Commit hash for the specified revision.
                              Type:         string
                          Required:
                            repository
                          Type:  object
                        Glusterfs:
                          Description:  Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
                          Properties:
                            Endpoints:
                              Description:  EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                              Type:         string
                            Path:
                              Description:  Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                              Type:         string
                            Read Only:
                              Description:  ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                              Type:         boolean
                          Required:
                            endpoints
                            path
                          Type:  object
                        Host Path:
                          Description:  HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
                          Properties:
                            Path:
                              Description:  Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                              Type:         string
                            Type:
                              Description:  Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                              Type:         string
                          Required:
                            path
                          Type:  object
                        Iscsi:
                          Description:  ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
                          Properties:
                            Chap Auth Discovery:
                              Description:  whether support iSCSI Discovery CHAP authentication
                              Type:         boolean
                            Chap Auth Session:
                              Description:  whether support iSCSI Session CHAP authentication
                              Type:         boolean
                            Fs Type:
                              Description:  Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
                              Type:         string
                            Initiator Name:
                              Description:  Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
                              Type:         string
                            Iqn:
                              Description:  Target iSCSI Qualified Name.
                              Type:         string
                            Iscsi Interface:
                              Description:  iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
                              Type:         string
                            Lun:
                              Description:  iSCSI Target Lun number.
                              Format:       int32
                              Type:         integer
                            Portals:
                              Description:  iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                              Items:
                                Type:  string
                              Type:    array
                            Read Only:
                              Description:  ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
                              Type:         boolean
                            Secret Ref:
                              Description:  CHAP Secret for iSCSI target and initiator authentication
                              Properties:
                                Name:
                                  Description:              Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:                     string
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            Target Portal:
                              Description:  iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                              Type:         string
                          Required:
                            iqn
                            lun
                            targetPortal
                          Type:  object
                        Name:
                          Description:  Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          Type:         string
                        Nfs:
                          Description:  NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                          Properties:
                            Path:
                              Description:  Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              Type:         string
                            Read Only:
                              Description:  ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              Type:         boolean
                            Server:
                              Description:  Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              Type:         string
                          Required:
                            path
                            server
                          Type:  object
                        Persistent Volume Claim:
                          Description:  PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          Properties:
                            Claim Name:
                              Description:  ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                              Type:         string
                            Read Only:
                              Description:  Will force the ReadOnly setting in VolumeMounts. Default false.
                              Type:         boolean
                          Required:
                            claimName
                          Type:  object
                        Photon Persistent Disk:
                          Description:  PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
                          Properties:
                            Fs Type:
                              Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              Type:         string
                            Pd ID:
                              Description:  ID that identifies Photon Controller persistent disk
                              Type:         string
                          Required:
                            pdID
                          Type:  object
                        Portworx Volume:
                          Description:  PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
                          Properties:
                            Fs Type:
                              Description:  FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                              Type:         string
                            Read Only:
                              Description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              Type:         boolean
                            Volume ID:
                              Description:  VolumeID uniquely identifies a Portworx volume
                              Type:         string
                          Required:
                            volumeID
                          Type:  object
                        Projected:
                          Description:  Items for all in one resources secrets, configmaps, and downward API
                          Properties:
                            Default Mode:
                              Description:  Mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                              Format:       int32
                              Type:         integer
                            Sources:
                              Description:  list of volume projections
                              Items:
                                Description:  Projection that may be projected along with other supported volume types
                                Properties:
                                  Config Map:
                                    Description:  information about the configMap data to project
                                    Properties:
                                      Items:
                                        Description:  If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                        Items:
                                          Description:  Maps a string key to a path within a volume.
                                          Properties:
                                            Key:
                                              Description:  The key to project.
                                              Type:         string
                                            Mode:
                                              Description:  Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                              Format:       int32
                                              Type:         integer
                                            Path:
                                              Description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                              Type:         string
                                          Required:
                                            key
                                            path
                                          Type:  object
                                        Type:    array
                                      Name:
                                        Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                        Type:         string
                                      Optional:
                                        Description:              Specify whether the ConfigMap or its keys must be defined
                                        Type:                     boolean
                                    Type:                         object
                                    X - Kubernetes - Map - Type:  atomic
                                  Downward API:
                                    Description:  information about the downwardAPI data to project
                                    Properties:
                                      Items:
                                        Description:  Items is a list of DownwardAPIVolume file
                                        Items:
                                          Description:  DownwardAPIVolumeFile represents information to create the file containing the pod field
                                          Properties:
                                            Field Ref:
                                              Description:  Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
                                              Properties:
                                                API Version:
                                                  Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                  Type:         string
                                                Field Path:
                                                  Description:  Path of the field to select in the specified API version.
                                                  Type:         string
                                              Required:
                                                fieldPath
                                              Type:                         object
                                              X - Kubernetes - Map - Type:  atomic
                                            Mode:
                                              Description:  Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                              Format:       int32
                                              Type:         integer
                                            Path:
                                              Description:  Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
                                              Type:         string
                                            Resource Field Ref:
                                              Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                              Properties:
                                                Container Name:
                                                  Description:  Container name: required for volumes, optional for env vars
                                                  Type:         string
                                                Divisor:
                                                  Any Of:
                                                    Type:                              integer
                                                    Type:                              string
                                                  Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  X - Kubernetes - Int - Or - String:  true
                                                Resource:
                                                  Description:  Required: resource to select
                                                  Type:         string
                                              Required:
                                                resource
                                              Type:                         object
                                              X - Kubernetes - Map - Type:  atomic
                                          Required:
                                            path
                                          Type:  object
                                        Type:    array
                                    Type:        object
                                  Secret:
                                    Description:  information about the secret data to project
                                    Properties:
                                      Items:
                                        Description:  If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                        Items:
                                          Description:  Maps a string key to a path within a volume.
                                          Properties:
                                            Key:
                                              Description:  The key to project.
                                              Type:         string
                                            Mode:
                                              Description:  Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                              Format:       int32
                                              Type:         integer
                                            Path:
                                              Description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                              Type:         string
                                          Required:
                                            key
                                            path
                                          Type:  object
                                        Type:    array
                                      Name:
                                        Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                        Type:         string
                                      Optional:
                                        Description:              Specify whether the Secret or its key must be defined
                                        Type:                     boolean
                                    Type:                         object
                                    X - Kubernetes - Map - Type:  atomic
                                  Service Account Token:
                                    Description:  information about the serviceAccountToken data to project
                                    Properties:
                                      Audience:
                                        Description:  Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
                                        Type:         string
                                      Expiration Seconds:
                                        Description:  ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
                                        Format:       int64
                                        Type:         integer
                                      Path:
                                        Description:  Path is the path relative to the mount point of the file to project the token into.
                                        Type:         string
                                    Required:
                                      path
                                    Type:  object
                                Type:      object
                              Type:        array
                          Type:            object
                        Quobyte:
                          Description:  Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
                          Properties:
                            Group:
                              Description:  Group to map volume access to Default is no group
                              Type:         string
                            Read Only:
                              Description:  ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
                              Type:         boolean
                            Registry:
                              Description:  Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
                              Type:         string
                            Tenant:
                              Description:  Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                              Type:         string
                            User:
                              Description:  User to map volume access to Defaults to serivceaccount user
                              Type:         string
                            Volume:
                              Description:  Volume is a string that references an already created Quobyte volume by name.
                              Type:         string
                          Required:
                            registry
                            volume
                          Type:  object
                        Rbd:
                          Description:  RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
                          Properties:
                            Fs Type:
                              Description:  Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
                              Type:         string
                            Image:
                              Description:  The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              Type:         string
                            Keyring:
                              Description:  Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              Type:         string
                            Monitors:
                              Description:  A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              Items:
                                Type:  string
                              Type:    array
                            Pool:
                              Description:  The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              Type:         string
                            Read Only:
                              Description:  ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              Type:         boolean
                            Secret Ref:
                              Description:  SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              Properties:
                                Name:
                                  Description:              Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:                     string
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            User:
                              Description:  The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              Type:         string
                          Required:
                            image
                            monitors
                          Type:  object
                        Scale IO:
                          Description:  ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                          Properties:
                            Fs Type:
                              Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                              Type:         string
                            Gateway:
                              Description:  The host address of the ScaleIO API Gateway.
                              Type:         string
                            Protection Domain:
                              Description:  The name of the ScaleIO Protection Domain for the configured storage.
                              Type:         string
                            Read Only:
                              Description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              Type:         boolean
                            Secret Ref:
                              Description:  SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
                              Properties:
                                Name:
                                  Description:              Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:                     string
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            Ssl Enabled:
                              Description:  Flag to enable/disable SSL communication with Gateway, default false
                              Type:         boolean
                            Storage Mode:
                              Description:  Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
                              Type:         string
                            Storage Pool:
                              Description:  The ScaleIO Storage Pool associated with the protection domain.
                              Type:         string
                            System:
                              Description:  The name of the storage system as configured in ScaleIO.
                              Type:         string
                            Volume Name:
                              Description:  The name of a volume already created in the ScaleIO system that is associated with this volume source.
                              Type:         string
                          Required:
                            gateway
                            secretRef
                            system
                          Type:  object
                        Secret:
                          Description:  Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                          Properties:
                            Default Mode:
                              Description:  Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                              Format:       int32
                              Type:         integer
                            Items:
                              Description:  If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                              Items:
                                Description:  Maps a string key to a path within a volume.
                                Properties:
                                  Key:
                                    Description:  The key to project.
                                    Type:         string
                                  Mode:
                                    Description:  Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                    Format:       int32
                                    Type:         integer
                                  Path:
                                    Description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                    Type:         string
                                Required:
                                  key
                                  path
                                Type:  object
                              Type:    array
                            Optional:
                              Description:  Specify whether the Secret or its keys must be defined
                              Type:         boolean
                            Secret Name:
                              Description:  Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                              Type:         string
                          Type:             object
                        Storageos:
                          Description:  StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                          Properties:
                            Fs Type:
                              Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              Type:         string
                            Read Only:
                              Description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              Type:         boolean
                            Secret Ref:
                              Description:  SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
                              Properties:
                                Name:
                                  Description:              Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:                     string
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            Volume Name:
                              Description:  VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
                              Type:         string
                            Volume Namespace:
                              Description:  VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
                              Type:         string
                          Type:             object
                        Vsphere Volume:
                          Description:  VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
                          Properties:
                            Fs Type:
                              Description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              Type:         string
                            Storage Policy ID:
                              Description:  Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                              Type:         string
                            Storage Policy Name:
                              Description:  Storage Policy Based Management (SPBM) profile name.
                              Type:         string
                            Volume Path:
                              Description:  Path that identifies vSphere volume vmdk
                              Type:         string
                          Required:
                            volumePath
                          Type:  object
                      Required:
                        name
                      Type:  object
                    Type:    array
                Required:
                  volumeMounts
                  volumes
                Type:  object
              One Replica Per Node:
                Description:  oneReplicaPerNode controls whether to run 1 pod per node using the pod anti-affinity capability. Enabling this configuration in an existing cluster will roll the cluster.
                Type:         boolean
              Password Encoder:
                Description:  passwordEncoder specifies password encoder secret for Kafka.
                Properties:
                  Directory Path In Container:
                    Description:  directoryPathInContainer contains the directory path in the container where the required secret is mounted. Directory should have the file `password-encoder.txt`. The contents should include a new password. Old password is optional and required only for rotation. More info: https://docs.confluent.io/operator/current/co-password-encoder-secret.
                    Type:         string
                  Secret Ref:
                    Description:  secretRef specifies the secret name. The secret should have the key `password-encoder.txt`. The contents should include a new password. Old password is optional and required only for rotation. More info: https://docs.confluent.io/operator/current/co-password-encoder-secret.
                    Max Length:   30
                    Min Length:   1
                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    Type:         string
                Type:             object
              Pod Template:
                Description:  podTemplate specifies the statefulset pod template configuration.
                Properties:
                  Affinity:
                    Description:  affinity specifies a group of affinity scheduling rules. More info: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity.
                    Properties:
                      Node Affinity:
                        Description:  Describes node affinity scheduling rules for the pod.
                        Properties:
                          Preferred During Scheduling Ignored During Execution:
                            Description:  The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
                            Items:
                              Description:  An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                              Properties:
                                Preference:
                                  Description:  A node selector term, associated with the corresponding weight.
                                  Properties:
                                    Match Expressions:
                                      Description:  A list of node selector requirements by node's labels.
                                      Items:
                                        Description:  A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        Properties:
                                          Key:
                                            Description:  The label key that the selector applies to.
                                            Type:         string
                                          Operator:
                                            Description:  Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            Type:         string
                                          Values:
                                            Description:  An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            Items:
                                              Type:  string
                                            Type:    array
                                        Required:
                                          key
                                          operator
                                        Type:  object
                                      Type:    array
                                    Match Fields:
                                      Description:  A list of node selector requirements by node's fields.
                                      Items:
                                        Description:  A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        Properties:
                                          Key:
                                            Description:  The label key that the selector applies to.
                                            Type:         string
                                          Operator:
                                            Description:  Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            Type:         string
                                          Values:
                                            Description:  An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            Items:
                                              Type:  string
                                            Type:    array
                                        Required:
                                          key
                                          operator
                                        Type:                   object
                                      Type:                     array
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Weight:
                                  Description:  Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                  Format:       int32
                                  Type:         integer
                              Required:
                                preference
                                weight
                              Type:  object
                            Type:    array
                          Required During Scheduling Ignored During Execution:
                            Description:  If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
                            Properties:
                              Node Selector Terms:
                                Description:  Required. A list of node selector terms. The terms are ORed.
                                Items:
                                  Description:  A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                  Properties:
                                    Match Expressions:
                                      Description:  A list of node selector requirements by node's labels.
                                      Items:
                                        Description:  A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        Properties:
                                          Key:
                                            Description:  The label key that the selector applies to.
                                            Type:         string
                                          Operator:
                                            Description:  Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            Type:         string
                                          Values:
                                            Description:  An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            Items:
                                              Type:  string
                                            Type:    array
                                        Required:
                                          key
                                          operator
                                        Type:  object
                                      Type:    array
                                    Match Fields:
                                      Description:  A list of node selector requirements by node's fields.
                                      Items:
                                        Description:  A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        Properties:
                                          Key:
                                            Description:  The label key that the selector applies to.
                                            Type:         string
                                          Operator:
                                            Description:  Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            Type:         string
                                          Values:
                                            Description:  An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                            Items:
                                              Type:  string
                                            Type:    array
                                        Required:
                                          key
                                          operator
                                        Type:                   object
                                      Type:                     array
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Type:                           array
                            Required:
                              nodeSelectorTerms
                            Type:                         object
                            X - Kubernetes - Map - Type:  atomic
                        Type:                             object
                      Pod Affinity:
                        Description:  Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                        Properties:
                          Preferred During Scheduling Ignored During Execution:
                            Description:  The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                            Items:
                              Description:  The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                              Properties:
                                Pod Affinity Term:
                                  Description:  Required. A pod affinity term, associated with the corresponding weight.
                                  Properties:
                                    Label Selector:
                                      Description:  A label query over a set of resources, in this case pods.
                                      Properties:
                                        Match Expressions:
                                          Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          Items:
                                            Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  key is the label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                Type:         string
                                              Values:
                                                Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                        Match Labels:
                                          Additional Properties:
                                            Type:                   string
                                          Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          Type:                     object
                                      Type:                         object
                                      X - Kubernetes - Map - Type:  atomic
                                    Namespace Selector:
                                      Description:  A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
                                      Properties:
                                        Match Expressions:
                                          Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          Items:
                                            Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  key is the label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                Type:         string
                                              Values:
                                                Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                        Match Labels:
                                          Additional Properties:
                                            Type:                   string
                                          Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          Type:                     object
                                      Type:                         object
                                      X - Kubernetes - Map - Type:  atomic
                                    Namespaces:
                                      Description:  namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
                                      Items:
                                        Type:  string
                                      Type:    array
                                    Topology Key:
                                      Description:  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                      Type:         string
                                  Required:
                                    topologyKey
                                  Type:  object
                                Weight:
                                  Description:  weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                  Format:       int32
                                  Type:         integer
                              Required:
                                podAffinityTerm
                                weight
                              Type:  object
                            Type:    array
                          Required During Scheduling Ignored During Execution:
                            Description:  If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                            Items:
                              Description:  Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                              Properties:
                                Label Selector:
                                  Description:  A label query over a set of resources, in this case pods.
                                  Properties:
                                    Match Expressions:
                                      Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      Items:
                                        Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        Properties:
                                          Key:
                                            Description:  key is the label key that the selector applies to.
                                            Type:         string
                                          Operator:
                                            Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                            Type:         string
                                          Values:
                                            Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                            Items:
                                              Type:  string
                                            Type:    array
                                        Required:
                                          key
                                          operator
                                        Type:  object
                                      Type:    array
                                    Match Labels:
                                      Additional Properties:
                                        Type:                   string
                                      Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      Type:                     object
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Namespace Selector:
                                  Description:  A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
                                  Properties:
                                    Match Expressions:
                                      Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      Items:
                                        Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        Properties:
                                          Key:
                                            Description:  key is the label key that the selector applies to.
                                            Type:         string
                                          Operator:
                                            Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                            Type:         string
                                          Values:
                                            Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                            Items:
                                              Type:  string
                                            Type:    array
                                        Required:
                                          key
                                          operator
                                        Type:  object
                                      Type:    array
                                    Match Labels:
                                      Additional Properties:
                                        Type:                   string
                                      Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      Type:                     object
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Namespaces:
                                  Description:  namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
                                  Items:
                                    Type:  string
                                  Type:    array
                                Topology Key:
                                  Description:  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                  Type:         string
                              Required:
                                topologyKey
                              Type:  object
                            Type:    array
                        Type:        object
                      Pod Anti Affinity:
                        Description:  Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                        Properties:
                          Preferred During Scheduling Ignored During Execution:
                            Description:  The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                            Items:
                              Description:  The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                              Properties:
                                Pod Affinity Term:
                                  Description:  Required. A pod affinity term, associated with the corresponding weight.
                                  Properties:
                                    Label Selector:
                                      Description:  A label query over a set of resources, in this case pods.
                                      Properties:
                                        Match Expressions:
                                          Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          Items:
                                            Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  key is the label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                Type:         string
                                              Values:
                                                Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                        Match Labels:
                                          Additional Properties:
                                            Type:                   string
                                          Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          Type:                     object
                                      Type:                         object
                                      X - Kubernetes - Map - Type:  atomic
                                    Namespace Selector:
                                      Description:  A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
                                      Properties:
                                        Match Expressions:
                                          Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          Items:
                                            Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                Description:  key is the label key that the selector applies to.
                                                Type:         string
                                              Operator:
                                                Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                Type:         string
                                              Values:
                                                Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                Items:
                                                  Type:  string
                                                Type:    array
                                            Required:
                                              key
                                              operator
                                            Type:  object
                                          Type:    array
                                        Match Labels:
                                          Additional Properties:
                                            Type:                   string
                                          Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          Type:                     object
                                      Type:                         object
                                      X - Kubernetes - Map - Type:  atomic
                                    Namespaces:
                                      Description:  namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
                                      Items:
                                        Type:  string
                                      Type:    array
                                    Topology Key:
                                      Description:  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                      Type:         string
                                  Required:
                                    topologyKey
                                  Type:  object
                                Weight:
                                  Description:  weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                  Format:       int32
                                  Type:         integer
                              Required:
                                podAffinityTerm
                                weight
                              Type:  object
                            Type:    array
                          Required During Scheduling Ignored During Execution:
                            Description:  If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                            Items:
                              Description:  Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                              Properties:
                                Label Selector:
                                  Description:  A label query over a set of resources, in this case pods.
                                  Properties:
                                    Match Expressions:
                                      Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      Items:
                                        Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        Properties:
                                          Key:
                                            Description:  key is the label key that the selector applies to.
                                            Type:         string
                                          Operator:
                                            Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                            Type:         string
                                          Values:
                                            Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                            Items:
                                              Type:  string
                                            Type:    array
                                        Required:
                                          key
                                          operator
                                        Type:  object
                                      Type:    array
                                    Match Labels:
                                      Additional Properties:
                                        Type:                   string
                                      Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      Type:                     object
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Namespace Selector:
                                  Description:  A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
                                  Properties:
                                    Match Expressions:
                                      Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      Items:
                                        Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        Properties:
                                          Key:
                                            Description:  key is the label key that the selector applies to.
                                            Type:         string
                                          Operator:
                                            Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                            Type:         string
                                          Values:
                                            Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                            Items:
                                              Type:  string
                                            Type:    array
                                        Required:
                                          key
                                          operator
                                        Type:  object
                                      Type:    array
                                    Match Labels:
                                      Additional Properties:
                                        Type:                   string
                                      Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      Type:                     object
                                  Type:                         object
                                  X - Kubernetes - Map - Type:  atomic
                                Namespaces:
                                  Description:  namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
                                  Items:
                                    Type:  string
                                  Type:    array
                                Topology Key:
                                  Description:  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                  Type:         string
                              Required:
                                topologyKey
                              Type:  object
                            Type:    array
                        Type:        object
                    Type:            object
                  Annotations:
                    Additional Properties:
                      Type:                       string
                    Description:                  annotations is a map of string key and value pairs stored with the resource and may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations.
                    Type:                         object
                    X - Kubernetes - Map - Type:  granular
                  Env Vars:
                    Description:  envVars contain environment variables to be injected into containers. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container.
                    Items:
                      Description:  EnvVar represents an environment variable present in a Container.
                      Properties:
                        Name:
                          Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                          Type:         string
                        Value:
                          Description:  Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                          Type:         string
                        Value From:
                          Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                          Properties:
                            Config Map Key Ref:
                              Description:  Selects a key of a ConfigMap.
                              Properties:
                                Key:
                                  Description:  The key to select.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the ConfigMap or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            Field Ref:
                              Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              Properties:
                                API Version:
                                  Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  Type:         string
                                Field Path:
                                  Description:  Path of the field to select in the specified API version.
                                  Type:         string
                              Required:
                                fieldPath
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            Resource Field Ref:
                              Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              Properties:
                                Container Name:
                                  Description:  Container name: required for volumes, optional for env vars
                                  Type:         string
                                Divisor:
                                  Any Of:
                                    Type:                              integer
                                    Type:                              string
                                  Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  X - Kubernetes - Int - Or - String:  true
                                Resource:
                                  Description:  Required: resource to select
                                  Type:         string
                              Required:
                                resource
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                            Secret Key Ref:
                              Description:  Selects a key of a secret in the pod's namespace
                              Properties:
                                Key:
                                  Description:  The key of the secret to select from.  Must be a valid secret key.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the Secret or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:                         object
                              X - Kubernetes - Map - Type:  atomic
                          Type:                             object
                      Required:
                        name
                      Type:  object
                    Type:    array
                  Labels:
                    Additional Properties:
                      Type:                       string
                    Description:                  labels is a map of string key and value pairs that can be used to organize and categorize (scope and select) objects. More info: http://kubernetes.io/docs/user-guide/labels.
                    Type:                         object
                    X - Kubernetes - Map - Type:  granular
                  Pod Security Context:
                    Description:  PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
                    Properties:
                      Fs Group:
                        Description:  A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 
 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- 
 If unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.
                        Format:  int64
                        Type:    integer
                      Fs Group Change Policy:
                        Description:  fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used. Note that this field cannot be set when spec.os.name is windows.
                        Type:         string
                      Run As Group:
                        Description:  The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Run As Non Root:
                        Description:  Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Type:         boolean
                      Run As User:
                        Description:  The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Se Linux Options:
                        Description:  The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Level:
                            Description:  Level is SELinux level label that applies to the container.
                            Type:         string
                          Role:
                            Description:  Role is a SELinux role label that applies to the container.
                            Type:         string
                          Type:
                            Description:  Type is a SELinux type label that applies to the container.
                            Type:         string
                          User:
                            Description:  User is a SELinux user label that applies to the container.
                            Type:         string
                        Type:             object
                      Seccomp Profile:
                        Description:  The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Localhost Profile:
                            Description:  localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                            Type:         string
                          Type:
                            Description:  type indicates which kind of seccomp profile will be applied. Valid options are: 
 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Supplemental Groups:
                        Description:  A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container. Note that this field cannot be set when spec.os.name is windows.
                        Items:
                          Format:  int64
                          Type:    integer
                        Type:      array
                      Sysctls:
                        Description:  Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.
                        Items:
                          Description:  Sysctl defines a kernel parameter to be set
                          Properties:
                            Name:
                              Description:  Name of a property to set
                              Type:         string
                            Value:
                              Description:  Value of a property to set
                              Type:         string
                          Required:
                            name
                            value
                          Type:  object
                        Type:    array
                      Windows Options:
                        Description:  The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.
                        Properties:
                          Gmsa Credential Spec:
                            Description:  GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                            Type:         string
                          Gmsa Credential Spec Name:
                            Description:  GMSACredentialSpecName is the name of the GMSA credential spec to use.
                            Type:         string
                          Host Process:
                            Description:  HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
                            Type:         boolean
                          Run As User Name:
                            Description:  The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Type:         string
                        Type:             object
                    Type:                 object
                  Priority Class Name:
                    Description:  priorityClassName specifies the priority class for the pod (if any).
                    Min Length:   1
                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    Type:         string
                  Probe:
                    Description:  probe contains the fields for standard Kubernetes readiness/liveness probe configuration.
                    Properties:
                      Liveness:
                        Description:  liveness configures the Kubernetes probe settings. The changes will override the existing default configuration.
                        Properties:
                          Failure Threshold:
                            Description:  failureThreshold is the minimum consecutive failures for the probe to be considered failed. Confluent Platform components come with the right configuration, and this setting is not required to change most of the time.
                            Format:       int32
                            Type:         integer
                          Initial Delay Seconds:
                            Description:  initialDelaySeconds is the number of seconds after the container has started and before probes are initiated. Confluent Platform components come with the right configuration, and this setting is not required to change most of the time.
                            Format:       int32
                            Type:         integer
                          Period Seconds:
                            Description:  periodSeconds specifies how often to perform the probe. Confluent Platform components come with the right configuration, and this setting is not required to change most of the time.
                            Format:       int32
                            Type:         integer
                          Success Threshold:
                            Description:  successThreshold is the minimum consecutive successes for the probe to be considered successful after having failed. The default values is `1`. Must be `1` for liveness and startup. The minimum value is `1`.
                            Format:       int32
                            Type:         integer
                          Timeout Seconds:
                            Description:  timeoutSeconds is the number of seconds after which the probe times out. Confluent Platform components come with the right configuration, and this setting is not required to change most of the time.
                            Format:       int32
                            Type:         integer
                        Type:             object
                      Readiness:
                        Description:  readiness configures the Kubernetes probe setting. The changes will override the existing default configuration.
                        Properties:
                          Failure Threshold:
                            Description:  failureThreshold is the minimum consecutive failures for the probe to be considered failed. Confluent Platform components come with the right configuration, and this setting is not required to change most of the time.
                            Format:       int32
                            Type:         integer
                          Initial Delay Seconds:
                            Description:  initialDelaySeconds is the number of seconds after the container has started and before probes are initiated. Confluent Platform components come with the right configuration, and this setting is not required to change most of the time.
                            Format:       int32
                            Type:         integer
                          Period Seconds:
                            Description:  periodSeconds specifies how often to perform the probe. Confluent Platform components come with the right configuration, and this setting is not required to change most of the time.
                            Format:       int32
                            Type:         integer
                          Success Threshold:
                            Description:  successThreshold is the minimum consecutive successes for the probe to be considered successful after having failed. The default values is `1`. Must be `1` for liveness and startup. The minimum value is `1`.
                            Format:       int32
                            Type:         integer
                          Timeout Seconds:
                            Description:  timeoutSeconds is the number of seconds after which the probe times out. Confluent Platform components come with the right configuration, and this setting is not required to change most of the time.
                            Format:       int32
                            Type:         integer
                        Type:             object
                    Type:                 object
                  Resources:
                    Description:  resources describe the compute resource requirements.
                    Properties:
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                    Type:                                      object
                  Security Context:
                    Description:  SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
                    Properties:
                      Allow Privilege Escalation:
                        Description:  AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Capabilities:
                        Description:  The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Add:
                            Description:  Added capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                          Drop:
                            Description:  Removed capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                        Type:               object
                      Privileged:
                        Description:  Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Proc Mount:
                        Description:  procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
                        Type:         string
                      Read Only Root Filesystem:
                        Description:  Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Run As Group:
                        Description:  The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Run As Non Root:
                        Description:  Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Type:         boolean
                      Run As User:
                        Description:  The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Se Linux Options:
                        Description:  The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Level:
                            Description:  Level is SELinux level label that applies to the container.
                            Type:         string
                          Role:
                            Description:  Role is a SELinux role label that applies to the container.
                            Type:         string
                          Type:
                            Description:  Type is a SELinux type label that applies to the container.
                            Type:         string
                          User:
                            Description:  User is a SELinux user label that applies to the container.
                            Type:         string
                        Type:             object
                      Seccomp Profile:
                        Description:  The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Localhost Profile:
                            Description:  localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                            Type:         string
                          Type:
                            Description:  type indicates which kind of seccomp profile will be applied. Valid options are: 
 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Windows Options:
                        Description:  The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.
                        Properties:
                          Gmsa Credential Spec:
                            Description:  GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                            Type:         string
                          Gmsa Credential Spec Name:
                            Description:  GMSACredentialSpecName is the name of the GMSA credential spec to use.
                            Type:         string
                          Host Process:
                            Description:  HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
                            Type:         boolean
                          Run As User Name:
                            Description:  The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Type:         string
                        Type:             object
                    Type:                 object
                  Service Account Name:
                    Description:  ServiceAccountName is the name of the service account used to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account.
                    Type:         string
                  Termination Grace Period Seconds:
                    Description:  terminationGracePeriodSeconds is the grace period before the pod is deleted.
                    Format:       int64
                    Type:         integer
                  Tolerations:
                    Description:  tolerations specify the pods to schedule onto the nodes with matching taints, using the triple `<key,value,effect>` and the matching operator `<operator>`.
                    Items:
                      Description:  The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                      Properties:
                        Effect:
                          Description:  Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          Type:         string
                        Key:
                          Description:  Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          Type:         string
                        Operator:
                          Description:  Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                          Type:         string
                        Toleration Seconds:
                          Description:  TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                          Format:       int64
                          Type:         integer
                        Value:
                          Description:  Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                          Type:         string
                      Type:             object
                    Type:               array
                  Topology Spread Constraints:
                    Description:  topologySpreadConstraints describe how a group of pods ought to spread across topology domains. Scheduler will schedule pods based on the constraints. All topologySpreadConstraints are ANDed.
                    Items:
                      Description:  TopologySpreadConstraint specifies how to spread matching pods among the given topology.
                      Properties:
                        Label Selector:
                          Description:  LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.
                          Properties:
                            Match Expressions:
                              Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                              Items:
                                Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                Properties:
                                  Key:
                                    Description:  key is the label key that the selector applies to.
                                    Type:         string
                                  Operator:
                                    Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                    Type:         string
                                  Values:
                                    Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                    Items:
                                      Type:  string
                                    Type:    array
                                Required:
                                  key
                                  operator
                                Type:  object
                              Type:    array
                            Match Labels:
                              Additional Properties:
                                Type:                   string
                              Description:              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                              Type:                     object
                          Type:                         object
                          X - Kubernetes - Map - Type:  atomic
                        Max Skew:
                          Description:  MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.
                          Format:       int32
                          Type:         integer
                        Topology Key:
                          Description:  TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. It's a required field.
                          Type:         string
                        When Unsatisfiable:
                          Description:  WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location, but giving higher precedence to topologies that would help reduce the skew. A constraint is considered "Unsatisfiable" for an incoming pod if and only if every possible node assignment for that pod would violate "MaxSkew" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.
                          Type:         string
                      Required:
                        maxSkew
                        topologyKey
                        whenUnsatisfiable
                      Type:  object
                    Type:    array
                Type:        object
              Rack Assignment:
                Description:  rackAssignment specifies the rack awareness capability of the Kafka cluster.
                Properties:
                  Availability Zone Count:
                    Description:  availabilityZoneCount configures `broker.rack` with the formula (`pod_id % azCount`). This is mainly for backwards compatibility with Operator 1.x.
                    Format:       int32
                    Type:         integer
                  Node Labels:
                    Description:  nodeLabels use the Kubernetes node API to retrieve the label values to be used in `broker.rack`. This feature requires CFK to run with the cluster-level access.
                    Items:
                      Type:     string
                    Min Items:  1
                    Type:       array
                Type:           object
              Replicas:
                Description:  replicas is the desired number of replicas. A change to this setting will roll the cluster.
                Format:       int32
                Type:         integer
              Services:
                Description:  services specify the supported Kafka services.
                Properties:
                  Kafka Rest:
                    Description:  kafkaRest specifies the embedded REST API server configuration.
                    Properties:
                      Authentication:
                        Description:  authentication specifies the REST API server authentication configuration.
                        Properties:
                          Basic:
                            Description:  basic specifies the configuration for basic authentication.
                            Properties:
                              Debug:
                                Description:  debug enables the basic authentication debug logs for JaaS configuration.
                                Type:         boolean
                              Directory Path In Container:
                                Description:  directoryPathInContainer allows to pass the basic credential through a directory path in the container. More info: https://docs.confluent.io/operator/current/co-authenticate.html#basic-authentication
                                Min Length:   1
                                Type:         string
                              Restricted Roles:
                                Description:  restrictedRoles specify the restricted roles on the server side only. Changes will be only reflected in Control Center. This configuration is ignored on the client side configuration.
                                Items:
                                  Type:     string
                                Min Items:  1
                                Type:       array
                              Roles:
                                Description:  roles specify the roles on the server side only. This configuration is ignored on the client side configuration.
                                Items:
                                  Type:  string
                                Type:    array
                              Secret Ref:
                                Description:  secretRef defines secret reference to pass the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html#basic-authentication
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Type:             object
                          Type:
                            Description:  type specifies the authentication scheme for the REST API server. Valid options are `basic` and `mtls`.
                            Enum:
                              basic
                              mtls
                            Type:  string
                        Required:
                          type
                        Type:  object
                      External Access:
                        Description:  externalAccess specifies the external access configuration.
                        Properties:
                          Load Balancer:
                            Description:  loadBalancer specifies the configuration to create a Kubernetes load balancer service.
                            Properties:
                              Advertised URL:
                                Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to: `<httpSchema>://<advertisedUrl.prefix><podId>.<domain>` where podId starts from `0` to `replicaCount -1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster. This configuration will not take effect if MDS enabled dual listener setup.
                                Properties:
                                  Enabled:
                                    Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                                    Type:         boolean
                                  Prefix:
                                    Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                                    Min Length:   1
                                    Type:         string
                                Required:
                                  enabled
                                Type:  object
                              Annotations:
                                Additional Properties:
                                  Type:                       string
                                Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Domain:
                                Description:  domain is the domain name of the component cluster.
                                Min Length:   1
                                Type:         string
                              External Traffic Policy:
                                Description:  externalTrafficPolicy specifies the external traffic policy for the service. Valid options are `Local` and `Cluster`.
                                Enum:
                                  Local
                                  Cluster
                                Type:  string
                              Labels:
                                Additional Properties:
                                  Type:                       string
                                Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Load Balancer Source Ranges:
                                Description:  loadBalancerSourceRanges specify the source ranges.
                                Items:
                                  Type:  string
                                Type:    array
                              Port:
                                Description:  port specifies the external port for the client consumption. If not configured, the same internal/external port is configured for the component. Information about the port can be retrieved through the status API.
                                Format:       int32
                                Type:         integer
                              Prefix:
                                Description:  prefix specify the prefix for the given domain. The default value is the name of the cluster.
                                Min Length:   1
                                Type:         string
                              Service Ports:
                                Description:  servicePorts specify the user-provided service port(s).
                                Items:
                                  Description:  ServicePort contains information on service's port.
                                  Properties:
                                    App Protocol:
                                      Description:  The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                                      Type:         string
                                    Name:
                                      Description:  The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                                      Type:         string
                                    Node Port:
                                      Description:  The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                                      Format:       int32
                                      Type:         integer
                                    Port:
                                      Description:  The port that will be exposed by this service.
                                      Format:       int32
                                      Type:         integer
                                    Protocol:
                                      Default:      TCP
                                      Description:  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                                      Type:         string
                                    Target Port:
                                      Any Of:
                                        Type:                              integer
                                        Type:                              string
                                      Description:                         Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                                      X - Kubernetes - Int - Or - String:  true
                                  Required:
                                    port
                                  Type:  object
                                Type:    array
                              Session Affinity:
                                Description:  sessionAffinity defines the Kubernetes session affinity. The valid options are `ClientIP` and `None`. `ClientIP` enables the client IP-based session affinity. The default value is `None`. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies.
                                Enum:
                                  ClientIP
                                  None
                                Type:  string
                              Session Affinity Config:
                                Description:  SessionAffinityConfig contains the configurations of the session affinity.
                                Properties:
                                  Client IP:
                                    Description:  clientIP contains the configurations of Client IP based session affinity.
                                    Properties:
                                      Timeout Seconds:
                                        Description:  timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                                        Format:       int32
                                        Type:         integer
                                    Type:             object
                                Type:                 object
                            Required:
                              domain
                            Type:  object
                          Node Port:
                            Description:  nodePort specifies the configuration to create a Kubernetes node port service.
                            Properties:
                              Advertised URL:
                                Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to `<httpSchema>://<host>:<nodePortOffset + podId + 1>, where`podId` starts from `0` to `replicaCount - 1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster.
                                Properties:
                                  Enabled:
                                    Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                                    Type:         boolean
                                  Prefix:
                                    Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                                    Min Length:   1
                                    Type:         string
                                Required:
                                  enabled
                                Type:  object
                              Annotations:
                                Additional Properties:
                                  Type:                       string
                                Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              External Traffic Policy:
                                Description:  externalTrafficPolicy specifies the external traffic policy for the service. Valid options are `Local` and `Cluster`.
                                Enum:
                                  Local
                                  Cluster
                                Type:  string
                              Host:
                                Description:  host defines the host name of the cluster.
                                Min Length:   1
                                Type:         string
                              Labels:
                                Additional Properties:
                                  Type:                       string
                                Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Node Port Offset:
                                Description:  nodePortOffset specifies the starting offset of the node ports. The port numbers go in ascending order with respect to the replicas count. NodePort service creation fails if the node port is not in the range supported by the Kubernetes API server. The default Kubernetes Node Port range is `30000` - `32762`.
                                Format:       int32
                                Minimum:      0
                                Type:         integer
                              Service Ports:
                                Description:  servicePorts specify user-provided service port(s). For Kafka with the nodePort type, this setting is only applied to Kafka bootstrap service.
                                Items:
                                  Description:  ServicePort contains information on service's port.
                                  Properties:
                                    App Protocol:
                                      Description:  The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                                      Type:         string
                                    Name:
                                      Description:  The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                                      Type:         string
                                    Node Port:
                                      Description:  The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                                      Format:       int32
                                      Type:         integer
                                    Port:
                                      Description:  The port that will be exposed by this service.
                                      Format:       int32
                                      Type:         integer
                                    Protocol:
                                      Default:      TCP
                                      Description:  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                                      Type:         string
                                    Target Port:
                                      Any Of:
                                        Type:                              integer
                                        Type:                              string
                                      Description:                         Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                                      X - Kubernetes - Int - Or - String:  true
                                  Required:
                                    port
                                  Type:  object
                                Type:    array
                              Session Affinity:
                                Description:  sessionAffinity defines the Kubernetes session affinity. The valid options are `ClientIP` and `None`. `ClientIP` enables the client IP-based session affinity. The default value is `None`. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies.
                                Enum:
                                  ClientIP
                                  None
                                Type:  string
                              Session Affinity Config:
                                Description:  SessionAffinityConfig contains the configurations of the session affinity.
                                Properties:
                                  Client IP:
                                    Description:  clientIP contains the configurations of Client IP based session affinity.
                                    Properties:
                                      Timeout Seconds:
                                        Description:  timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                                        Format:       int32
                                        Type:         integer
                                    Type:             object
                                Type:                 object
                            Required:
                              host
                              nodePortOffset
                            Type:  object
                          Route:
                            Description:  route specifies the configuration to create a route service in OpenShift.
                            Properties:
                              Advertised URL:
                                Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to: `<httpSchema>://<advertisedUrl.prefix>-http-external<podId>.<domain>` where podId starts from `0` to `replicaCount -1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster. This configuration will not take effect if MDS enabled dual listener setup.
                                Properties:
                                  Enabled:
                                    Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                                    Type:         boolean
                                  Prefix:
                                    Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                                    Min Length:   1
                                    Type:         string
                                Required:
                                  enabled
                                Type:  object
                              Annotations:
                                Additional Properties:
                                  Type:                       string
                                Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Domain:
                                Description:  domain specifies the domain name of the Confluent component cluster.
                                Min Length:   1
                                Type:         string
                              Labels:
                                Additional Properties:
                                  Type:                       string
                                Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Prefix:
                                Description:  prefix specifies the component prefix when configured for the domain. The default value is the name of the cluster.
                                Min Length:   1
                                Type:         string
                              Wildcard Policy:
                                Description:  wildcardPolicy allows you to define a route that covers all hosts within a domain. Valid options are `Subdomain` and `None`. The default value is `None`.
                                Enum:
                                  Subdomain
                                  None
                                Type:  string
                            Required:
                              domain
                            Type:  object
                          Type:
                            Description:  type specifies the Kubernetes external service for the component. Valid options are `loadBalancer`, `nodePort`, and `route`.
                            Enum:
                              loadBalancer
                              nodePort
                              route
                            Min Length:  1
                            Type:        string
                        Required:
                          type
                        Type:  object
                      Listeners:
                        Description:  listeners specify the listeners configurations for embedded REST API server.
                        Properties:
                          External:
                            Description:  external specifies the Confluent component external listener.
                            Properties:
                              External Access:
                                Description:  externalAccess defines the external access configuration for the Confluent component.
                                Properties:
                                  Load Balancer:
                                    Description:  loadBalancer specifies the configuration to create a Kubernetes load balancer service.
                                    Properties:
                                      Advertised URL:
                                        Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to: `<httpSchema>://<advertisedUrl.prefix><podId>.<domain>` where podId starts from `0` to `replicaCount -1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster. This configuration will not take effect if MDS enabled dual listener setup.
                                        Properties:
                                          Enabled:
                                            Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                                            Type:         boolean
                                          Prefix:
                                            Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                                            Min Length:   1
                                            Type:         string
                                        Required:
                                          enabled
                                        Type:  object
                                      Annotations:
                                        Additional Properties:
                                          Type:                       string
                                        Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                        Type:                         object
                                        X - Kubernetes - Map - Type:  granular
                                      Domain:
                                        Description:  domain is the domain name of the component cluster.
                                        Min Length:   1
                                        Type:         string
                                      External Traffic Policy:
                                        Description:  externalTrafficPolicy specifies the external traffic policy for the service. Valid options are `Local` and `Cluster`.
                                        Enum:
                                          Local
                                          Cluster
                                        Type:  string
                                      Labels:
                                        Additional Properties:
                                          Type:                       string
                                        Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                        Type:                         object
                                        X - Kubernetes - Map - Type:  granular
                                      Load Balancer Source Ranges:
                                        Description:  loadBalancerSourceRanges specify the source ranges.
                                        Items:
                                          Type:  string
                                        Type:    array
                                      Port:
                                        Description:  port specifies the external port for the client consumption. If not configured, the same internal/external port is configured for the component. Information about the port can be retrieved through the status API.
                                        Format:       int32
                                        Type:         integer
                                      Prefix:
                                        Description:  prefix specify the prefix for the given domain. The default value is the name of the cluster.
                                        Min Length:   1
                                        Type:         string
                                      Service Ports:
                                        Description:  servicePorts specify the user-provided service port(s).
                                        Items:
                                          Description:  ServicePort contains information on service's port.
                                          Properties:
                                            App Protocol:
                                              Description:  The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                                              Type:         string
                                            Name:
                                              Description:  The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                                              Type:         string
                                            Node Port:
                                              Description:  The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                                              Format:       int32
                                              Type:         integer
                                            Port:
                                              Description:  The port that will be exposed by this service.
                                              Format:       int32
                                              Type:         integer
                                            Protocol:
                                              Default:      TCP
                                              Description:  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                                              Type:         string
                                            Target Port:
                                              Any Of:
                                                Type:                              integer
                                                Type:                              string
                                              Description:                         Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                                              X - Kubernetes - Int - Or - String:  true
                                          Required:
                                            port
                                          Type:  object
                                        Type:    array
                                      Session Affinity:
                                        Description:  sessionAffinity defines the Kubernetes session affinity. The valid options are `ClientIP` and `None`. `ClientIP` enables the client IP-based session affinity. The default value is `None`. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies.
                                        Enum:
                                          ClientIP
                                          None
                                        Type:  string
                                      Session Affinity Config:
                                        Description:  SessionAffinityConfig contains the configurations of the session affinity.
                                        Properties:
                                          Client IP:
                                            Description:  clientIP contains the configurations of Client IP based session affinity.
                                            Properties:
                                              Timeout Seconds:
                                                Description:  timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                                                Format:       int32
                                                Type:         integer
                                            Type:             object
                                        Type:                 object
                                    Required:
                                      domain
                                    Type:  object
                                  Node Port:
                                    Description:  nodePort specifies the configuration to create a Kubernetes node port service.
                                    Properties:
                                      Advertised URL:
                                        Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to `<httpSchema>://<host>:<nodePortOffset + podId + 1>, where`podId` starts from `0` to `replicaCount - 1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster.
                                        Properties:
                                          Enabled:
                                            Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                                            Type:         boolean
                                          Prefix:
                                            Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                                            Min Length:   1
                                            Type:         string
                                        Required:
                                          enabled
                                        Type:  object
                                      Annotations:
                                        Additional Properties:
                                          Type:                       string
                                        Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                        Type:                         object
                                        X - Kubernetes - Map - Type:  granular
                                      External Traffic Policy:
                                        Description:  externalTrafficPolicy specifies the external traffic policy for the service. Valid options are `Local` and `Cluster`.
                                        Enum:
                                          Local
                                          Cluster
                                        Type:  string
                                      Host:
                                        Description:  host defines the host name of the cluster.
                                        Min Length:   1
                                        Type:         string
                                      Labels:
                                        Additional Properties:
                                          Type:                       string
                                        Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                        Type:                         object
                                        X - Kubernetes - Map - Type:  granular
                                      Node Port Offset:
                                        Description:  nodePortOffset specifies the starting offset of the node ports. The port numbers go in ascending order with respect to the replicas count. NodePort service creation fails if the node port is not in the range supported by the Kubernetes API server. The default Kubernetes Node Port range is `30000` - `32762`.
                                        Format:       int32
                                        Minimum:      0
                                        Type:         integer
                                      Service Ports:
                                        Description:  servicePorts specify user-provided service port(s). For Kafka with the nodePort type, this setting is only applied to Kafka bootstrap service.
                                        Items:
                                          Description:  ServicePort contains information on service's port.
                                          Properties:
                                            App Protocol:
                                              Description:  The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                                              Type:         string
                                            Name:
                                              Description:  The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                                              Type:         string
                                            Node Port:
                                              Description:  The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                                              Format:       int32
                                              Type:         integer
                                            Port:
                                              Description:  The port that will be exposed by this service.
                                              Format:       int32
                                              Type:         integer
                                            Protocol:
                                              Default:      TCP
                                              Description:  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                                              Type:         string
                                            Target Port:
                                              Any Of:
                                                Type:                              integer
                                                Type:                              string
                                              Description:                         Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                                              X - Kubernetes - Int - Or - String:  true
                                          Required:
                                            port
                                          Type:  object
                                        Type:    array
                                      Session Affinity:
                                        Description:  sessionAffinity defines the Kubernetes session affinity. The valid options are `ClientIP` and `None`. `ClientIP` enables the client IP-based session affinity. The default value is `None`. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies.
                                        Enum:
                                          ClientIP
                                          None
                                        Type:  string
                                      Session Affinity Config:
                                        Description:  SessionAffinityConfig contains the configurations of the session affinity.
                                        Properties:
                                          Client IP:
                                            Description:  clientIP contains the configurations of Client IP based session affinity.
                                            Properties:
                                              Timeout Seconds:
                                                Description:  timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                                                Format:       int32
                                                Type:         integer
                                            Type:             object
                                        Type:                 object
                                    Required:
                                      host
                                      nodePortOffset
                                    Type:  object
                                  Route:
                                    Description:  route specifies the configuration to create a route service in OpenShift.
                                    Properties:
                                      Advertised URL:
                                        Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to: `<httpSchema>://<advertisedUrl.prefix>-http-external<podId>.<domain>` where podId starts from `0` to `replicaCount -1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster. This configuration will not take effect if MDS enabled dual listener setup.
                                        Properties:
                                          Enabled:
                                            Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                                            Type:         boolean
                                          Prefix:
                                            Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                                            Min Length:   1
                                            Type:         string
                                        Required:
                                          enabled
                                        Type:  object
                                      Annotations:
                                        Additional Properties:
                                          Type:                       string
                                        Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                        Type:                         object
                                        X - Kubernetes - Map - Type:  granular
                                      Domain:
                                        Description:  domain specifies the domain name of the Confluent component cluster.
                                        Min Length:   1
                                        Type:         string
                                      Labels:
                                        Additional Properties:
                                          Type:                       string
                                        Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                        Type:                         object
                                        X - Kubernetes - Map - Type:  granular
                                      Prefix:
                                        Description:  prefix specifies the component prefix when configured for the domain. The default value is the name of the cluster.
                                        Min Length:   1
                                        Type:         string
                                      Wildcard Policy:
                                        Description:  wildcardPolicy allows you to define a route that covers all hosts within a domain. Valid options are `Subdomain` and `None`. The default value is `None`.
                                        Enum:
                                          Subdomain
                                          None
                                        Type:  string
                                    Required:
                                      domain
                                    Type:  object
                                  Type:
                                    Description:  type specifies the Kubernetes external service for the component. Valid options are `loadBalancer`, `nodePort`, and `route`.
                                    Enum:
                                      loadBalancer
                                      nodePort
                                      route
                                    Min Length:  1
                                    Type:        string
                                Required:
                                  type
                                Type:  object
                              Tls:
                                Description:  tls specifies the TLS configuration for the listener.
                                Properties:
                                  Directory Path In Container:
                                    Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                                    Min Length:   1
                                    Type:         string
                                  Enabled:
                                    Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                                    Type:         boolean
                                  Ignore Trust Store Config:
                                    Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                                    Type:         boolean
                                  Jks Password:
                                    Description:  jksPassword references the secret containing the JKS password.
                                    Properties:
                                      Secret Ref:
                                        Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                        Max Length:   30
                                        Min Length:   1
                                        Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        Type:         string
                                    Required:
                                      secretRef
                                    Type:  object
                                  Secret Ref:
                                    Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Required:
                                  enabled
                                Type:  object
                            Type:      object
                          Internal:
                            Description:  internal specifies the Confluent component's internal listener. This internal listener is for intra-communication between the pods.
                            Properties:
                              Port:
                                Description:  port binds the given port to the internal listener. If not configured, it will be defaulted to the component-specific internal port. Port numbers lower than `9093` are reserved by CFK.
                                Format:       int32
                                Minimum:      9093
                                Type:         integer
                              Tls:
                                Description:  tls specifies the TLS configuration for the listener.
                                Properties:
                                  Directory Path In Container:
                                    Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                                    Min Length:   1
                                    Type:         string
                                  Enabled:
                                    Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                                    Type:         boolean
                                  Ignore Trust Store Config:
                                    Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                                    Type:         boolean
                                  Jks Password:
                                    Description:  jksPassword references the secret containing the JKS password.
                                    Properties:
                                      Secret Ref:
                                        Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                        Max Length:   30
                                        Min Length:   1
                                        Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        Type:         string
                                    Required:
                                      secretRef
                                    Type:  object
                                  Secret Ref:
                                    Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Required:
                                  enabled
                                Type:  object
                            Type:      object
                        Type:          object
                      Tls:
                        Description:  tls specifies the TLS configuration for embedded REST API server.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                            Min Length:   1
                            Type:         string
                          Enabled:
                            Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                            Type:         boolean
                          Ignore Trust Store Config:
                            Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                            Type:         boolean
                          Jks Password:
                            Description:  jksPassword references the secret containing the JKS password.
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Secret Ref:
                            Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          enabled
                        Type:  object
                    Type:      object
                  Mds:
                    Description:  mds specifies the MDS server configuration.
                    Properties:
                      Authentication:
                        Description:  authentication specifies the MDS server authentication configuration.
                        Properties:
                          Type:
                            Description:  type defines the MDS authentication type. The valid option is `bearer`.
                            Enum:
                              bearer
                            Type:  string
                        Required:
                          type
                        Type:  object
                      External Access:
                        Description:  externalAccess specifies the external access configuration.
                        Properties:
                          Load Balancer:
                            Description:  loadBalancer specifies the configuration to create a Kubernetes load balancer service.
                            Properties:
                              Advertised URL:
                                Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to: `<httpSchema>://<advertisedUrl.prefix><podId>.<domain>` where podId starts from `0` to `replicaCount -1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster. This configuration will not take effect if MDS enabled dual listener setup.
                                Properties:
                                  Enabled:
                                    Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                                    Type:         boolean
                                  Prefix:
                                    Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                                    Min Length:   1
                                    Type:         string
                                Required:
                                  enabled
                                Type:  object
                              Annotations:
                                Additional Properties:
                                  Type:                       string
                                Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Domain:
                                Description:  domain is the domain name of the component cluster.
                                Min Length:   1
                                Type:         string
                              External Traffic Policy:
                                Description:  externalTrafficPolicy specifies the external traffic policy for the service. Valid options are `Local` and `Cluster`.
                                Enum:
                                  Local
                                  Cluster
                                Type:  string
                              Labels:
                                Additional Properties:
                                  Type:                       string
                                Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Load Balancer Source Ranges:
                                Description:  loadBalancerSourceRanges specify the source ranges.
                                Items:
                                  Type:  string
                                Type:    array
                              Port:
                                Description:  port specifies the external port for the client consumption. If not configured, the same internal/external port is configured for the component. Information about the port can be retrieved through the status API.
                                Format:       int32
                                Type:         integer
                              Prefix:
                                Description:  prefix specify the prefix for the given domain. The default value is the name of the cluster.
                                Min Length:   1
                                Type:         string
                              Service Ports:
                                Description:  servicePorts specify the user-provided service port(s).
                                Items:
                                  Description:  ServicePort contains information on service's port.
                                  Properties:
                                    App Protocol:
                                      Description:  The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                                      Type:         string
                                    Name:
                                      Description:  The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                                      Type:         string
                                    Node Port:
                                      Description:  The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                                      Format:       int32
                                      Type:         integer
                                    Port:
                                      Description:  The port that will be exposed by this service.
                                      Format:       int32
                                      Type:         integer
                                    Protocol:
                                      Default:      TCP
                                      Description:  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                                      Type:         string
                                    Target Port:
                                      Any Of:
                                        Type:                              integer
                                        Type:                              string
                                      Description:                         Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                                      X - Kubernetes - Int - Or - String:  true
                                  Required:
                                    port
                                  Type:  object
                                Type:    array
                              Session Affinity:
                                Description:  sessionAffinity defines the Kubernetes session affinity. The valid options are `ClientIP` and `None`. `ClientIP` enables the client IP-based session affinity. The default value is `None`. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies.
                                Enum:
                                  ClientIP
                                  None
                                Type:  string
                              Session Affinity Config:
                                Description:  SessionAffinityConfig contains the configurations of the session affinity.
                                Properties:
                                  Client IP:
                                    Description:  clientIP contains the configurations of Client IP based session affinity.
                                    Properties:
                                      Timeout Seconds:
                                        Description:  timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                                        Format:       int32
                                        Type:         integer
                                    Type:             object
                                Type:                 object
                            Required:
                              domain
                            Type:  object
                          Node Port:
                            Description:  nodePort specifies the configuration to create a Kubernetes node port service.
                            Properties:
                              Advertised URL:
                                Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to `<httpSchema>://<host>:<nodePortOffset + podId + 1>, where`podId` starts from `0` to `replicaCount - 1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster.
                                Properties:
                                  Enabled:
                                    Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                                    Type:         boolean
                                  Prefix:
                                    Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                                    Min Length:   1
                                    Type:         string
                                Required:
                                  enabled
                                Type:  object
                              Annotations:
                                Additional Properties:
                                  Type:                       string
                                Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              External Traffic Policy:
                                Description:  externalTrafficPolicy specifies the external traffic policy for the service. Valid options are `Local` and `Cluster`.
                                Enum:
                                  Local
                                  Cluster
                                Type:  string
                              Host:
                                Description:  host defines the host name of the cluster.
                                Min Length:   1
                                Type:         string
                              Labels:
                                Additional Properties:
                                  Type:                       string
                                Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Node Port Offset:
                                Description:  nodePortOffset specifies the starting offset of the node ports. The port numbers go in ascending order with respect to the replicas count. NodePort service creation fails if the node port is not in the range supported by the Kubernetes API server. The default Kubernetes Node Port range is `30000` - `32762`.
                                Format:       int32
                                Minimum:      0
                                Type:         integer
                              Service Ports:
                                Description:  servicePorts specify user-provided service port(s). For Kafka with the nodePort type, this setting is only applied to Kafka bootstrap service.
                                Items:
                                  Description:  ServicePort contains information on service's port.
                                  Properties:
                                    App Protocol:
                                      Description:  The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                                      Type:         string
                                    Name:
                                      Description:  The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                                      Type:         string
                                    Node Port:
                                      Description:  The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                                      Format:       int32
                                      Type:         integer
                                    Port:
                                      Description:  The port that will be exposed by this service.
                                      Format:       int32
                                      Type:         integer
                                    Protocol:
                                      Default:      TCP
                                      Description:  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                                      Type:         string
                                    Target Port:
                                      Any Of:
                                        Type:                              integer
                                        Type:                              string
                                      Description:                         Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                                      X - Kubernetes - Int - Or - String:  true
                                  Required:
                                    port
                                  Type:  object
                                Type:    array
                              Session Affinity:
                                Description:  sessionAffinity defines the Kubernetes session affinity. The valid options are `ClientIP` and `None`. `ClientIP` enables the client IP-based session affinity. The default value is `None`. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies.
                                Enum:
                                  ClientIP
                                  None
                                Type:  string
                              Session Affinity Config:
                                Description:  SessionAffinityConfig contains the configurations of the session affinity.
                                Properties:
                                  Client IP:
                                    Description:  clientIP contains the configurations of Client IP based session affinity.
                                    Properties:
                                      Timeout Seconds:
                                        Description:  timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                                        Format:       int32
                                        Type:         integer
                                    Type:             object
                                Type:                 object
                            Required:
                              host
                              nodePortOffset
                            Type:  object
                          Route:
                            Description:  route specifies the configuration to create a route service in OpenShift.
                            Properties:
                              Advertised URL:
                                Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to: `<httpSchema>://<advertisedUrl.prefix>-http-external<podId>.<domain>` where podId starts from `0` to `replicaCount -1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster. This configuration will not take effect if MDS enabled dual listener setup.
                                Properties:
                                  Enabled:
                                    Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                                    Type:         boolean
                                  Prefix:
                                    Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                                    Min Length:   1
                                    Type:         string
                                Required:
                                  enabled
                                Type:  object
                              Annotations:
                                Additional Properties:
                                  Type:                       string
                                Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Domain:
                                Description:  domain specifies the domain name of the Confluent component cluster.
                                Min Length:   1
                                Type:         string
                              Labels:
                                Additional Properties:
                                  Type:                       string
                                Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                Type:                         object
                                X - Kubernetes - Map - Type:  granular
                              Prefix:
                                Description:  prefix specifies the component prefix when configured for the domain. The default value is the name of the cluster.
                                Min Length:   1
                                Type:         string
                              Wildcard Policy:
                                Description:  wildcardPolicy allows you to define a route that covers all hosts within a domain. Valid options are `Subdomain` and `None`. The default value is `None`.
                                Enum:
                                  Subdomain
                                  None
                                Type:  string
                            Required:
                              domain
                            Type:  object
                          Type:
                            Description:  type specifies the Kubernetes external service for the component. Valid options are `loadBalancer`, `nodePort`, and `route`.
                            Enum:
                              loadBalancer
                              nodePort
                              route
                            Min Length:  1
                            Type:        string
                        Required:
                          type
                        Type:  object
                      Listeners:
                        Description:  listeners specify the listeners configurations for MDS server.
                        Properties:
                          External:
                            Description:  external specifies the Confluent component external listener.
                            Properties:
                              External Access:
                                Description:  externalAccess defines the external access configuration for the Confluent component.
                                Properties:
                                  Load Balancer:
                                    Description:  loadBalancer specifies the configuration to create a Kubernetes load balancer service.
                                    Properties:
                                      Advertised URL:
                                        Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to: `<httpSchema>://<advertisedUrl.prefix><podId>.<domain>` where podId starts from `0` to `replicaCount -1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster. This configuration will not take effect if MDS enabled dual listener setup.
                                        Properties:
                                          Enabled:
                                            Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                                            Type:         boolean
                                          Prefix:
                                            Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                                            Min Length:   1
                                            Type:         string
                                        Required:
                                          enabled
                                        Type:  object
                                      Annotations:
                                        Additional Properties:
                                          Type:                       string
                                        Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                        Type:                         object
                                        X - Kubernetes - Map - Type:  granular
                                      Domain:
                                        Description:  domain is the domain name of the component cluster.
                                        Min Length:   1
                                        Type:         string
                                      External Traffic Policy:
                                        Description:  externalTrafficPolicy specifies the external traffic policy for the service. Valid options are `Local` and `Cluster`.
                                        Enum:
                                          Local
                                          Cluster
                                        Type:  string
                                      Labels:
                                        Additional Properties:
                                          Type:                       string
                                        Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                        Type:                         object
                                        X - Kubernetes - Map - Type:  granular
                                      Load Balancer Source Ranges:
                                        Description:  loadBalancerSourceRanges specify the source ranges.
                                        Items:
                                          Type:  string
                                        Type:    array
                                      Port:
                                        Description:  port specifies the external port for the client consumption. If not configured, the same internal/external port is configured for the component. Information about the port can be retrieved through the status API.
                                        Format:       int32
                                        Type:         integer
                                      Prefix:
                                        Description:  prefix specify the prefix for the given domain. The default value is the name of the cluster.
                                        Min Length:   1
                                        Type:         string
                                      Service Ports:
                                        Description:  servicePorts specify the user-provided service port(s).
                                        Items:
                                          Description:  ServicePort contains information on service's port.
                                          Properties:
                                            App Protocol:
                                              Description:  The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                                              Type:         string
                                            Name:
                                              Description:  The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                                              Type:         string
                                            Node Port:
                                              Description:  The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                                              Format:       int32
                                              Type:         integer
                                            Port:
                                              Description:  The port that will be exposed by this service.
                                              Format:       int32
                                              Type:         integer
                                            Protocol:
                                              Default:      TCP
                                              Description:  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                                              Type:         string
                                            Target Port:
                                              Any Of:
                                                Type:                              integer
                                                Type:                              string
                                              Description:                         Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                                              X - Kubernetes - Int - Or - String:  true
                                          Required:
                                            port
                                          Type:  object
                                        Type:    array
                                      Session Affinity:
                                        Description:  sessionAffinity defines the Kubernetes session affinity. The valid options are `ClientIP` and `None`. `ClientIP` enables the client IP-based session affinity. The default value is `None`. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies.
                                        Enum:
                                          ClientIP
                                          None
                                        Type:  string
                                      Session Affinity Config:
                                        Description:  SessionAffinityConfig contains the configurations of the session affinity.
                                        Properties:
                                          Client IP:
                                            Description:  clientIP contains the configurations of Client IP based session affinity.
                                            Properties:
                                              Timeout Seconds:
                                                Description:  timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                                                Format:       int32
                                                Type:         integer
                                            Type:             object
                                        Type:                 object
                                    Required:
                                      domain
                                    Type:  object
                                  Node Port:
                                    Description:  nodePort specifies the configuration to create a Kubernetes node port service.
                                    Properties:
                                      Advertised URL:
                                        Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to `<httpSchema>://<host>:<nodePortOffset + podId + 1>, where`podId` starts from `0` to `replicaCount - 1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster.
                                        Properties:
                                          Enabled:
                                            Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                                            Type:         boolean
                                          Prefix:
                                            Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                                            Min Length:   1
                                            Type:         string
                                        Required:
                                          enabled
                                        Type:  object
                                      Annotations:
                                        Additional Properties:
                                          Type:                       string
                                        Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                        Type:                         object
                                        X - Kubernetes - Map - Type:  granular
                                      External Traffic Policy:
                                        Description:  externalTrafficPolicy specifies the external traffic policy for the service. Valid options are `Local` and `Cluster`.
                                        Enum:
                                          Local
                                          Cluster
                                        Type:  string
                                      Host:
                                        Description:  host defines the host name of the cluster.
                                        Min Length:   1
                                        Type:         string
                                      Labels:
                                        Additional Properties:
                                          Type:                       string
                                        Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                        Type:                         object
                                        X - Kubernetes - Map - Type:  granular
                                      Node Port Offset:
                                        Description:  nodePortOffset specifies the starting offset of the node ports. The port numbers go in ascending order with respect to the replicas count. NodePort service creation fails if the node port is not in the range supported by the Kubernetes API server. The default Kubernetes Node Port range is `30000` - `32762`.
                                        Format:       int32
                                        Minimum:      0
                                        Type:         integer
                                      Service Ports:
                                        Description:  servicePorts specify user-provided service port(s). For Kafka with the nodePort type, this setting is only applied to Kafka bootstrap service.
                                        Items:
                                          Description:  ServicePort contains information on service's port.
                                          Properties:
                                            App Protocol:
                                              Description:  The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                                              Type:         string
                                            Name:
                                              Description:  The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
                                              Type:         string
                                            Node Port:
                                              Description:  The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                                              Format:       int32
                                              Type:         integer
                                            Port:
                                              Description:  The port that will be exposed by this service.
                                              Format:       int32
                                              Type:         integer
                                            Protocol:
                                              Default:      TCP
                                              Description:  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                                              Type:         string
                                            Target Port:
                                              Any Of:
                                                Type:                              integer
                                                Type:                              string
                                              Description:                         Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                                              X - Kubernetes - Int - Or - String:  true
                                          Required:
                                            port
                                          Type:  object
                                        Type:    array
                                      Session Affinity:
                                        Description:  sessionAffinity defines the Kubernetes session affinity. The valid options are `ClientIP` and `None`. `ClientIP` enables the client IP-based session affinity. The default value is `None`. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies.
                                        Enum:
                                          ClientIP
                                          None
                                        Type:  string
                                      Session Affinity Config:
                                        Description:  SessionAffinityConfig contains the configurations of the session affinity.
                                        Properties:
                                          Client IP:
                                            Description:  clientIP contains the configurations of Client IP based session affinity.
                                            Properties:
                                              Timeout Seconds:
                                                Description:  timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
                                                Format:       int32
                                                Type:         integer
                                            Type:             object
                                        Type:                 object
                                    Required:
                                      host
                                      nodePortOffset
                                    Type:  object
                                  Route:
                                    Description:  route specifies the configuration to create a route service in OpenShift.
                                    Properties:
                                      Advertised URL:
                                        Description:  advertisedURL specifies the configuration for advertised listener per pod. It is only supported for MDS currently. If it is enabled, instead of using internal endpoint, the MDS advertised listener for each broker will be set to: `<httpSchema>://<advertisedUrl.prefix>-http-external<podId>.<domain>` where podId starts from `0` to `replicaCount -1`. This is only recommended if you cannot add internal SANs to the TLS certificates for MDS and the external DNS must be resolved inside the Kubernetes cluster. This configuration will not take effect if MDS enabled dual listener setup.
                                        Properties:
                                          Enabled:
                                            Description:  enabled indicates whether to set the MDS advertised listener url with external endpoint for each broker. Has no effect with Zookeeper, which will always create a listener per pod.
                                            Type:         boolean
                                          Prefix:
                                            Description:  prefix specifies the broker prefix for MDS/Zookeeper advertised endpoint. If not configured, it uses `b` as default prefix for MDS, such as `b#.domain` where `#` will start from `0` to `replicaCount -1`. It uses 'zookeeper' as default prefix for Zookeeper in the same way.
                                            Min Length:   1
                                            Type:         string
                                        Required:
                                          enabled
                                        Type:  object
                                      Annotations:
                                        Additional Properties:
                                          Type:                       string
                                        Description:                  annotations is a map of string key and value pairs. It specifies Kubernetes annotations for this service.
                                        Type:                         object
                                        X - Kubernetes - Map - Type:  granular
                                      Domain:
                                        Description:  domain specifies the domain name of the Confluent component cluster.
                                        Min Length:   1
                                        Type:         string
                                      Labels:
                                        Additional Properties:
                                          Type:                       string
                                        Description:                  labels is a map of string key and value pairs. It specifies Kubernetes labels for this service.
                                        Type:                         object
                                        X - Kubernetes - Map - Type:  granular
                                      Prefix:
                                        Description:  prefix specifies the component prefix when configured for the domain. The default value is the name of the cluster.
                                        Min Length:   1
                                        Type:         string
                                      Wildcard Policy:
                                        Description:  wildcardPolicy allows you to define a route that covers all hosts within a domain. Valid options are `Subdomain` and `None`. The default value is `None`.
                                        Enum:
                                          Subdomain
                                          None
                                        Type:  string
                                    Required:
                                      domain
                                    Type:  object
                                  Type:
                                    Description:  type specifies the Kubernetes external service for the component. Valid options are `loadBalancer`, `nodePort`, and `route`.
                                    Enum:
                                      loadBalancer
                                      nodePort
                                      route
                                    Min Length:  1
                                    Type:        string
                                Required:
                                  type
                                Type:  object
                              Tls:
                                Description:  tls specifies the TLS configuration for the listener.
                                Properties:
                                  Directory Path In Container:
                                    Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                                    Min Length:   1
                                    Type:         string
                                  Enabled:
                                    Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                                    Type:         boolean
                                  Ignore Trust Store Config:
                                    Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                                    Type:         boolean
                                  Jks Password:
                                    Description:  jksPassword references the secret containing the JKS password.
                                    Properties:
                                      Secret Ref:
                                        Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                        Max Length:   30
                                        Min Length:   1
                                        Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        Type:         string
                                    Required:
                                      secretRef
                                    Type:  object
                                  Secret Ref:
                                    Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Required:
                                  enabled
                                Type:  object
                            Type:      object
                          Internal:
                            Description:  internal specifies the Confluent component's internal listener. This internal listener is for intra-communication between the pods.
                            Properties:
                              Port:
                                Description:  port binds the given port to the internal listener. If not configured, it will be defaulted to the component-specific internal port. Port numbers lower than `9093` are reserved by CFK.
                                Format:       int32
                                Minimum:      9093
                                Type:         integer
                              Tls:
                                Description:  tls specifies the TLS configuration for the listener.
                                Properties:
                                  Directory Path In Container:
                                    Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                                    Min Length:   1
                                    Type:         string
                                  Enabled:
                                    Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                                    Type:         boolean
                                  Ignore Trust Store Config:
                                    Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                                    Type:         boolean
                                  Jks Password:
                                    Description:  jksPassword references the secret containing the JKS password.
                                    Properties:
                                      Secret Ref:
                                        Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                        Max Length:   30
                                        Min Length:   1
                                        Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        Type:         string
                                    Required:
                                      secretRef
                                    Type:  object
                                  Secret Ref:
                                    Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Required:
                                  enabled
                                Type:  object
                            Type:      object
                        Type:          object
                      Provider:
                        Description:  provider specifies the identity provider configuration.
                        Properties:
                          Ldap:
                            Description:  ldap defines the LDAP service configuration.
                            Properties:
                              Address:
                                Description:  address defines the LDAP server address.
                                Type:         string
                              Authentication:
                                Description:  LdapAuthentication specifies the LDAP authentication configuration.
                                Properties:
                                  Simple:
                                    Description:  simple specifies simple authentication configuration for the LDAP.
                                    Properties:
                                      Directory Path In Container:
                                        Description:  directoryPathInContainer defines the directory path in the container where the credentials are mounted.
                                        Min Length:   1
                                        Type:         string
                                      Secret Ref:
                                        Description:  secretRef references the name of the secret that contains the credentials.
                                        Max Length:   30
                                        Min Length:   1
                                        Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        Type:         string
                                    Type:             object
                                  Type:
                                    Description:  type defines the authentication method for LDAP. Valid options are `simple` and `mtls`.
                                    Enum:
                                      simple
                                      mtls
                                    Type:  string
                                Required:
                                  type
                                Type:  object
                              Configurations:
                                Description:  configurations defines the LDAP configurations for Confluent RBAC.
                                Properties:
                                  Group Member Attribute:
                                    Description:  groupMemberAttribute specifies the LDAP group member attribute.
                                    Min Length:   1
                                    Type:         string
                                  Group Member Attribute Pattern:
                                    Description:  groupMemberAttributePattern specifies the regular expression pattern for the LDAP group member attribute.
                                    Min Length:   1
                                    Type:         string
                                  Group Name Attribute:
                                    Description:  groupNameAttribute specifies the LDAP group name attribute.
                                    Min Length:   1
                                    Type:         string
                                  Group Object Class:
                                    Description:  groupObjectClass specifies the LDAP group object class.
                                    Min Length:   1
                                    Type:         string
                                  Group Search Base:
                                    Description:  groupSearchBase specifies the LDAP search base for the group-based search.
                                    Min Length:   1
                                    Type:         string
                                  Group Search Filter:
                                    Description:  groupSearchFilter specifies the LDAP search filter for the group-based search.
                                    Min Length:   1
                                    Type:         string
                                  Group Search Scope:
                                    Description:  groupSearchScope specifies the LDAP search scope for the group-based search.
                                    Format:       int32
                                    Type:         integer
                                  User Member Of Attribute Pattern:
                                    Description:  userMemberOfAttributePattern specifies the regular expression pattern for the LDAP user member attribute.
                                    Min Length:   1
                                    Type:         string
                                  User Name Attribute:
                                    Description:  userNameAttribute specifies the LDAP username attribute.
                                    Min Length:   1
                                    Type:         string
                                  User Object Class:
                                    Description:  userObjectClass specifies the LDAP user object class.
                                    Min Length:   1
                                    Type:         string
                                  User Search Base:
                                    Description:  userSearchBase specifies the LDAP search base for the user-based search.
                                    Min Length:   1
                                    Type:         string
                                  User Search Filter:
                                    Description:  userSearchFilter specifies the LDAP search filter for the user-based search.
                                    Min Length:   1
                                    Type:         string
                                  User Search Scope:
                                    Description:  userSearchScope specifies the LDAP search scope for the user-based search.
                                    Format:       int32
                                    Type:         integer
                                Type:             object
                              Tls:
                                Description:  tls specifies the TLS configuration for the LDAP.
                                Properties:
                                  Directory Path In Container:
                                    Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                                    Min Length:   1
                                    Type:         string
                                  Enabled:
                                    Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                                    Type:         boolean
                                  Ignore Trust Store Config:
                                    Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                                    Type:         boolean
                                  Jks Password:
                                    Description:  jksPassword references the secret containing the JKS password.
                                    Properties:
                                      Secret Ref:
                                        Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                        Max Length:   30
                                        Min Length:   1
                                        Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        Type:         string
                                    Required:
                                      secretRef
                                    Type:  object
                                  Secret Ref:
                                    Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Required:
                                  enabled
                                Type:  object
                            Required:
                              address
                              authentication
                              configurations
                            Type:  object
                          Oidc:
                            Description:  oidc defines the OIDC service configuration.
                            Properties:
                              Client Credentials:
                                Description:  clientCredentials define the IDP clientID and clientSecret.
                                Properties:
                                  Directory Path In Container:
                                    Description:  directoryPathInContainer defines the directory path in the container where the credentials are mounted.
                                    Min Length:   1
                                    Type:         string
                                  Secret Ref:
                                    Description:  secretRef references the name of the secret that contains the credentials.
                                    Max Length:   30
                                    Min Length:   1
                                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    Type:         string
                                Type:             object
                              Configurations:
                                Description:  configurations defines the OIDC configurations.
                                Properties:
                                  Authorize Base Endpoint Uri:
                                    Description:  authorizeBaseEndpointUri specifies the base uri for authorize endpoint.
                                    Min Length:   1
                                    Type:         string
                                  Groups Claim Name:
                                    Description:  groupsClaimName specifies the name of claim in token for identifying the groups of subject in the JWT payload.
                                    Min Length:   1
                                    Type:         string
                                  Groups Claim Scope:
                                    Description:  groupsClaimScope specifies additional scope needed for the token to contain groups claim (field). Leave this field empty (or null) if id token always contains the claims identified as groups.
                                    Min Length:   1
                                    Type:         string
                                  Issuer:
                                    Description:  issuer specifies the authorization server's URL. This value should match the issuer claim ("iss") in id tokens issued by Authorization Server?
                                    Min Length:   1
                                    Type:         string
                                  Jwks Endpoint Uri:
                                    Description:  jwksEndpointUri specifies the uri for the JSON Web Key Set (JWKS). It is used to get set of keys containing the public keys used to verify any JWT issued by the IdP's Authorization Server.
                                    Min Length:   1
                                    Type:         string
                                  Refresh Token:
                                    Description:  refreshToken specifies whether offline_access scope should be requested in the authorization URI.
                                    Type:         boolean
                                  Session Max Timeout:
                                    Description:  sessionMaxTimeout specifies the maximum expiration time for a user's session.
                                    Format:       int32
                                    Type:         integer
                                  Session Token Expiry:
                                    Description:  sessionTokenExpiry specifies the validity of cookie issued by Confluent.
                                    Format:       int32
                                    Type:         integer
                                  Sub Claim Name:
                                    Description:  subClaimName specifies name of claim in JWT to use for the subject.
                                    Min Length:   1
                                    Type:         string
                                  Token Base Endpoint Uri:
                                    Description:  tokenBaseEndpointUri specifies the base uri for token endpoint.
                                    Min Length:   1
                                    Type:         string
                                Required:
                                  authorizeBaseEndpointUri
                                  issuer
                                  jwksEndpointUri
                                  refreshToken
                                  tokenBaseEndpointUri
                                Type:  object
                            Required:
                              clientCredentials
                              configurations
                            Type:  object
                          Type:
                            Description:  This field has been deprecated and its value will be ignored if set.
                            Type:         string
                        Required:
                          ldap
                        Type:  object
                      Tls:
                        Description:  tls specifies the TLS configuration for MDS server.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                            Min Length:   1
                            Type:         string
                          Enabled:
                            Description:  enabled specifies to enable the TLS configuration for the Confluent component.
                            Type:         boolean
                          Ignore Trust Store Config:
                            Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                            Type:         boolean
                          Jks Password:
                            Description:  jksPassword references the secret containing the JKS password.
                            Properties:
                              Secret Ref:
                                Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                                Max Length:   30
                                Min Length:   1
                                Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                Type:         string
                            Required:
                              secretRef
                            Type:  object
                          Secret Ref:
                            Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          enabled
                        Type:  object
                      Token Key Pair:
                        Description:  tokenKeyPair specifies the token key pair for the MDS.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer defines the directory path in the container where the MDS token key pair are mounted.
                            Min Length:   1
                            Type:         string
                          Encrypted Token Key:
                            Description:  EncryptedTokenKey boolean value indicating whether the tokenKeypair(private used for signing) is encrypted using a passphrase. If true, cfk operator will look for a file named mdsTokenKeyPassphrase.txt containing key value pair mdsTokenKeyPassphrase=<passphrase>. Relevant only for mds server. Ignored if set for a client configuration.
                            Type:         boolean
                          Secret Ref:
                            Description:  secretRef references the name of the secret that contains the MDS token key pair.
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Type:             object
                    Required:
                      provider
                      tokenKeyPair
                    Type:  object
                Type:      object
              Storage Class:
                Description:  storageClass specifies the user-provided storage class. If not configured, it will use the default storage class.
                Properties:
                  Name:
                    Description:  name is the storage class name.
                    Min Length:   1
                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    Type:         string
                Required:
                  name
                Type:  object
              Telemetry:
                Description:  telemetry specifies the Confluent telemetry reporter configuration.
                Properties:
                  Global:
                    Description:  global allows disabling telemetry configuration. If CFK is deployed with telemetry, this field is only used to disable telemetry. The default value is `true` if telemetry is enabled at the global level.
                    Type:         boolean
                Type:             object
              Tls:
                Description:  tls specifies the global-level TLS configuration which can be used by listeners and services.
                Properties:
                  Auto Generated Certs:
                    Description:  autoGeneratedCerts specifies that the certificates are auto-generated based on the CA key pair provided.
                    Type:         boolean
                  Directory Path In Container:
                    Description:  directoryPathInContainer specifies the directory path in the container where `keystore.jks`, `truststore.jks`, and `jksPassword.txt` keys are mounted. `truststore.jks` is not configured and can be ignored when the `ignoreTrustStoreConfig` field is set to `true`.
                    Min Length:   1
                    Type:         string
                  Ignore Trust Store Config:
                    Description:  ignoreTrustStoreConfig indicates whether to ignore the truststore configuration for the Confluent component.
                    Type:         boolean
                  Jks Password:
                    Description:  jksPassword references the secret containing the JKS password.
                    Properties:
                      Secret Ref:
                        Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                        Max Length:   30
                        Min Length:   1
                        Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        Type:         string
                    Required:
                      secretRef
                    Type:  object
                  Secret Ref:
                    Description:  secretRef references the secret containing the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                    Max Length:   30
                    Min Length:   1
                    Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    Type:         string
                Type:             object
            Required:
              dataVolumeCapacity
              image
              replicas
            Type:  object
          Status:
            Description:  status defines the observed state of the Kafka cluster.
            Properties:
              Arbitrary Data:
                Description:                                   arbitraryData is the map for any arbitrary data associated with this Confluent component.
                X - Kubernetes - Preserve - Unknown - Fields:  true
              Authorization Type:
                Description:  authorizationType is the authorization type for this Confluent component.
                Type:         string
              Broker Id Offset:
                Description:  brokerIdOffset is the broker id offset of the Kafka cluster.
                Format:       int32
                Type:         integer
              Cluster ID:
                Description:  clusterID is the ID of the Kafka cluster.
                Type:         string
              Cluster Name:
                Description:  clusterName is the name of the Confluent Platform component cluster.
                Type:         string
              Cluster Namespace:
                Description:  clusterNamespace is the namespace where the Confluent Platform component cluster is running.
                Type:         string
              Conditions:
                Description:  conditions specify the latest available observations of the current state.
                Items:
                  Description:  Condition represent the latest available observations of the current state.
                  Properties:
                    Last Probe Time:
                      Description:  lastProbeTime shows the last time the condition was evaluated.
                      Format:       date-time
                      Type:         string
                    Last Transition Time:
                      Description:  lastTransitionTime shows the last time the condition was transitioned from one status to another.
                      Format:       date-time
                      Type:         string
                    Message:
                      Description:  message shows a human-readable message with details about the transition.
                      Type:         string
                    Reason:
                      Description:  reason shows the reason for the last transition of the condition.
                      Type:         string
                    Status:
                      Description:  status shows the status of the condition, one of `True`, `False`, or `Unknown`.
                      Type:         string
                    Type:
                      Description:  type shows the condition type.
                      Type:         string
                  Type:             object
                Type:               array
              Current Replicas:
                Description:  currentReplicas is the number of currently running replicas.
                Format:       int32
                Type:         integer
              Internal Secrets:
                Description:  internalSecrets are internal secrets created by CFK for this Confluent component.
                Items:
                  Type:  string
                Type:    array
              Internal Topic Names:
                Description:  internalTopicNames are the topics used by the component for internal use.
                Items:
                  Type:  string
                Type:    array
              Listeners:
                Additional Properties:
                  Properties:
                    Advertised External Endpoints:
                      Description:  advertisedExternalEndpoints specifies other advertised endpoints used, especially for Kafka.
                      Items:
                        Type:  string
                      Type:    array
                    Authentication Type:
                      Description:  authenticationType shows the authentication type configured by the listener.
                      Type:         string
                    Client:
                      Type:  string
                    External Access Type:
                      Description:  externalAccessType shows the external access type used for the listener.
                      Type:         string
                    External Endpoint:
                      Description:  externalEndpoint specifies the external endpoint to connect to the Confluent component cluster.
                      Type:         string
                    Internal Endpoint:
                      Description:  internalEndpoint specifies the internal endpoint to connect to the Confluent component cluster.
                      Type:         string
                    Tls:
                      Description:            tls shows whether TLS is configured for the listener.
                      Type:                   boolean
                  Type:                       object
                Description:                  listeners is a map for the status of Kafka Listeners.
                Type:                         object
                X - Kubernetes - Map - Type:  granular
              Min ISR:
                Description:  minISR is the minimum number of in sync replicas in the Kafka cluster.
                Format:       int32
                Type:         integer
              Observed Generation:
                Description:  observedGeneration is the most recent generation observed for this Confluent component.
                Format:       int64
                Type:         integer
              Operator Version:
                Description:  operatorVersion is the internal version of CFK.
                Type:         string
              Phase:
                Description:  phase describes the state of the Confluent Platform component. This can either be 'PROVISIONING' or 'RUNNING' 'PROVISIONING' means the Confluent Platform component is currently getting deployed and not ready yet. 'RUNNING' means the Confluent Platform component has been successfully deployed.
                Type:         string
              Ready Replicas:
                Description:  readyReplicas is the number of currently ready replicas.
                Format:       int32
                Type:         integer
              Replicas:
                Description:  replicas is the number of replicas.
                Format:       int32
                Type:         integer
              Replication Factor:
                Description:  replicationFactor is the replication factor of the topics in the Kafka cluster.
                Format:       int32
                Type:         integer
              Selector:
                Description:  selector gets the label selector of the child pod. The Horizontal Pod Autoscaler(HPA) will scale using the label selector of the child pod.
                Type:         string
              Services:
                Additional Properties:
                  Description:  ListenerStatus describes general information about the listeners.
                  Properties:
                    Advertised External Endpoints:
                      Description:  advertisedExternalEndpoints specifies other advertised endpoints used, especially for Kafka.
                      Items:
                        Type:  string
                      Type:    array
                    Authentication Type:
                      Description:  authenticationType shows the authentication type configured by the listener.
                      Type:         string
                    External Access Type:
                      Description:  externalAccessType shows the external access type used for the listener.
                      Type:         string
                    External Endpoint:
                      Description:  externalEndpoint specifies the external endpoint to connect to the Confluent component cluster.
                      Type:         string
                    Internal Endpoint:
                      Description:  internalEndpoint specifies the internal endpoint to connect to the Confluent component cluster.
                      Type:         string
                    Tls:
                      Description:            tls shows whether TLS is configured for the listener.
                      Type:                   boolean
                  Type:                       object
                Description:                  services is a map for the Kafka services.
                Type:                         object
                X - Kubernetes - Map - Type:  granular
              Zookeeper Connect:
                Type:  string
            Type:      object
        Required:
          spec
        Type:  object
    Served:    true
    Storage:   true
    Subresources:
      Scale:
        Label Selector Path:   .status.selector
        Spec Replicas Path:    .spec.replicas
        Status Replicas Path:  .status.replicas
      Status:
Status:
  Accepted Names:
    Categories:
      all
      confluent-platform
      confluent
    Kind:       Kafka
    List Kind:  KafkaList
    Plural:     kafkas
    Short Names:
      kafka
      broker
    Singular:  kafka
  Conditions:
    Last Transition Time:  2023-09-27T08:08:14Z
    Message:               no conflicts found
    Reason:                NoConflicts
    Status:                True
    Type:                  NamesAccepted
    Last Transition Time:  2023-09-27T08:08:14Z
    Message:               the initial names have been accepted
    Reason:                InitialNamesAccepted
    Status:                True
    Type:                  Established
  Stored Versions:
    v1beta1
Events:  <none>

Name:         kafkatopics.platform.confluent.io
Namespace:    
Labels:       <none>
Annotations:  controller-gen.kubebuilder.io/version: v0.9.2
API Version:  apiextensions.k8s.io/v1
Kind:         CustomResourceDefinition
Metadata:
  Creation Timestamp:  2023-09-27T08:08:14Z
  Generation:          1
  Resource Version:    584552
  UID:                 a54822cc-dde1-49ad-966b-16fe52023d2a
Spec:
  Conversion:
    Strategy:  None
  Group:       platform.confluent.io
  Names:
    Categories:
      all
      confluent-platform
      confluent
    Kind:       KafkaTopic
    List Kind:  KafkaTopicList
    Plural:     kafkatopics
    Short Names:
      kt
      topic
    Singular:  kafkatopic
  Scope:       Namespaced
  Versions:
    Additional Printer Columns:
      Json Path:  .status.replicas
      Name:       Replicas
      Type:       string
      Json Path:  .status.partitionCount
      Name:       Partition
      Type:       string
      Json Path:  .status.state
      Name:       Status
      Type:       string
      Json Path:  .status.kafkaClusterID
      Name:       ClusterID
      Type:       string
      Json Path:  .metadata.creationTimestamp
      Name:       Age
      Type:       date
      Json Path:  .status.kafkaCluster
      Name:       KafkaCluster
      Priority:   1
      Type:       string
    Name:         v1beta1
    Schema:
      openAPIV3Schema:
        Description:  KafkaTopic is the schema for the Kafka Topic API.
        Properties:
          API Version:
            Description:  APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            Type:         string
          Kind:
            Description:  Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            Type:         string
          Metadata:
            Type:  object
          Spec:
            Description:  spec defines the desired state of the KafkaTopic.
            Properties:
              Configs:
                Additional Properties:
                  Type:                       string
                Description:                  configs is a map of string key and value pairs that are used to pass the configuration settings for the topic. More info: https://docs.confluent.io/current/installation/configuration/topic-configs.html.
                Type:                         object
                X - Kubernetes - Map - Type:  granular
              Kafka Cluster Ref:
                Description:  kafkaClusterRef specifies the name of the Kafka cluster.
                Properties:
                  Name:
                    Description:  name specifies the name of the Confluent Platform component cluster.
                    Type:         string
                  Namespace:
                    Description:  namespace specifies the namespace where the Confluent Platform component cluster is running.
                    Type:         string
                Required:
                  name
                Type:  object
              Kafka Rest:
                Description:  kafkaRest specifies the Kafka REST API configuration.
                Properties:
                  Authentication:
                    Description:  authentication specifies the REST API authentication mechanism.
                    Properties:
                      Basic:
                        Description:  basic specifies the basic authentication settings for the REST API client.
                        Properties:
                          Debug:
                            Description:  debug enables the basic authentication debug logs for JaaS configuration.
                            Type:         boolean
                          Directory Path In Container:
                            Description:  directoryPathInContainer allows to pass the basic credential through a directory path in the container. More info: https://docs.confluent.io/operator/current/co-authenticate.html#basic-authentication
                            Min Length:   1
                            Type:         string
                          Restricted Roles:
                            Description:  restrictedRoles specify the restricted roles on the server side only. Changes will be only reflected in Control Center. This configuration is ignored on the client side configuration.
                            Items:
                              Type:     string
                            Min Items:  1
                            Type:       array
                          Roles:
                            Description:  roles specify the roles on the server side only. This configuration is ignored on the client side configuration.
                            Items:
                              Type:  string
                            Type:    array
                          Secret Ref:
                            Description:  secretRef defines secret reference to pass the required credentials. More info: https://docs.confluent.io/operator/current/co-authenticate.html#basic-authentication
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Type:             object
                      Bearer:
                        Description:  bearer specifies the bearer authentication settings for the REST API client.
                        Properties:
                          Directory Path In Container:
                            Description:  directoryPathInContainer specifies the directory path in the container where the credential is mounted.
                            Min Length:   1
                            Type:         string
                          Secret Ref:
                            Description:  secretRef specifies the name of the secret that contains the credential. More info: https://docs.confluent.io/operator/current/co-authenticate.html#bearer-authentication
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Type:             object
                      Type:
                        Description:  type specifies the REST API authentication type. Valid options are `basic`, `bearer`, and `mtls`.
                        Enum:
                          basic
                          bearer
                          mtls
                        Type:  string
                    Required:
                      type
                    Type:  object
                  Endpoint:
                    Description:  endpoint specifies where Confluent REST API is running.
                    Min Length:   1
                    Pattern:      ^https?://.*
                    Type:         string
                  Kafka Cluster ID:
                    Description:  kafkaClusterID specifies the id of Kafka cluster. It takes precedence over using the Kafka REST API to get the cluster id.
                    Min Length:   1
                    Type:         string
                  Tls:
                    Description:  tls specifies the custom TLS structure for the application resources, e.g. connector, topic, schema, of the Confluent Platform components.
                    Properties:
                      Directory Path In Container:
                        Description:  directoryPathInContainer contains the directory path in the container where `keystore.jks`, `truststore.jks`, `jksPassword.txt` keys are mounted.
                        Min Length:   1
                        Type:         string
                      Jks Password:
                        Description:  jksPassword specifies the secret name that contains the JKS password.
                        Properties:
                          Secret Ref:
                            Description:  secretRef references the name of the secret containing the JKS password. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                            Max Length:   30
                            Min Length:   1
                            Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            Type:         string
                        Required:
                          secretRef
                        Type:  object
                      Secret Ref:
                        Description:  secretRef specifies the secret name that contains the certificates. More info about certificates key/value format: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                        Max Length:   63
                        Min Length:   1
                        Pattern:      ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        Type:         string
                    Type:             object
                Type:                 object
              Kafka Rest Class Ref:
                Description:  kafkaRestClassRef references the KafkaRestClass which defines Kafka REST API connection information.
                Properties:
                  Name:
                    Description:  name specifies the name of the KafkaRestClass application resource.
                    Min Length:   1
                    Type:         string
                  Namespace:
                    Description:  namespace specifies the namespace of the KafkaRestClass.
                    Type:         string
                Required:
                  name
                Type:  object
              Name:
                Description:  name specifies the topic name. If not configured, the KafkaTopic CR name is used as the topic name.
                Max Length:   255
                Min Length:   1
                Pattern:      ^[a-zA-Z0-9\._\-]*$
                Type:         string
              Partition Count:
                Description:  partitionCount specifies the number of partitions for the topic. If not configured, it will be defaulted to the partition count that Kafka REST V3 API supports.
                Format:       int32
                Type:         integer
              Replicas:
                Description:  replicas specifies the replication factor for the topic. If not configured, it will be defaulted to the replication factor that Kafka REST V3 API supports.
                Format:       int32
                Type:         integer
            Type:             object
          Status:
            Description:  status defines the observed state of the KafkaTopic.
            Properties:
              App State:
                Default:      Unknown
                Description:  appState is the current state of the topic application.
                Enum:
                  Unknown
                  Created
                  Failed
                  Deleted
                Type:  string
              Conditions:
                Description:  conditions are the latest available observed states of the topic.
                Items:
                  Description:  Condition represent the latest available observations of the current state.
                  Properties:
                    Last Probe Time:
                      Description:  lastProbeTime shows the last time the condition was evaluated.
                      Format:       date-time
                      Type:         string
                    Last Transition Time:
                      Description:  lastTransitionTime shows the last time the condition was transitioned from one status to another.
                      Format:       date-time
                      Type:         string
                    Message:
                      Description:  message shows a human-readable message with details about the transition.
                      Type:         string
                    Reason:
                      Description:  reason shows the reason for the last transition of the condition.
                      Type:         string
                    Status:
                      Description:  status shows the status of the condition, one of `True`, `False`, or `Unknown`.
                      Type:         string
                    Type:
                      Description:  type shows the condition type.
                      Type:         string
                  Type:             object
                Type:               array
              Kafka Cluster:
                Type:  string
              Kafka Cluster ID:
                Description:  kafkaClusterID is the id of the Kafka cluster.
                Type:         string
              Kafka Rest Endpoint:
                Description:  kafkaRestEndpoint is the endpoint of the Kafka REST API.
                Type:         string
              Observed Generation:
                Description:  observedGeneration is the most recent generation observed for this Confluent component.
                Format:       int64
                Type:         integer
              Partition Count:
                Description:  partitionCount is the partition count of the topic.
                Format:       int32
                Type:         integer
              Replicas:
                Description:  replicas is the replication factor of the topic.
                Format:       int32
                Type:         integer
              State:
                Description:  state is the state of the topic.
                Type:         string
            Type:             object
        Type:                 object
    Served:                   true
    Storage:                  true
    Subresources:
      Status:
Status:
  Accepted Names:
    Categories:
      all
      confluent-platform
      confluent
    Kind:       KafkaTopic
    List Kind:  KafkaTopicList
    Plural:     kafkatopics
    Short Names:
      kt
      topic
    Singular:  kafkatopic
  Conditions:
    Last Transition Time:  2023-09-27T08:08:15Z
    Message:               no conflicts found
    Reason:                NoConflicts
    Status:                True
    Type:                  NamesAccepted
    Last Transition Time:  2023-09-27T08:08:15Z
    Message:               the initial names have been accepted
    Reason:                InitialNamesAccepted
    Status:                True
    Type:                  Established
  Stored Versions:
    v1beta1
Events:  <none>

